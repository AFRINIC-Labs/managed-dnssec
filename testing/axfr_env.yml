---
- name: Install docker and deploy DNS Servers (AXFR IN and OUT)
  hosts: all
  gather_facts: true
  tasks:
  - name: Upgrade all packages
    become: true
    apt:
      name: "*"
      state: latest
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

  - name: Upgrade all packages
    become: true
    yum:
      name: "*"
      state: latest
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

  - name: Uninstall old versions
    become: true
    package:
      name:
        - docker
        - docker-client
        - docker-client-latest
        - docker-common
        - docker-latest
        - docker-latest-logrotate
        - docker-logrotate
        - docker-engine
      state: absent

  - name: Prepare the server
    become: true
    yum:
      name:
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
        - python-pip
      state: present
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

  - name: Prepare the server
    become: true
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
      state: present
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'


  - name: Add Docker GPG Key
    become: true
    apt_key:
      id: 0EBFCD88
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'


  - name: Add new repository
    shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    register: data
    become: true
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

  - name: Add new repository
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable"
      state: present
    register: data
    become: true
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

  - name: Install docker
    become: true
    package:
      name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
      state: present

  - name: Enable docker
    become: true
    systemd:
      state: started
      name: docker
      enabled: yes

  - name: Docker SDK for Python
    become: true
    pip:
      name:
        - docker
        - docker-compose
        - jsondiff

  - name: Install compose
    become: true
    get_url:
      url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}"
      dest: /usr/local/bin/docker-compose
      mode: '0755'

  - name: Add user to docker group
    user:
      name: "{{ ansible_ssh_user }}"
      append: yes
      groups: docker
    become: true

  - name: Copy Project folder
    copy:
      src: project
      dest: "{{ remote_dst_path }}"
      owner: "{{ ansible_ssh_user }}"
      group: "{{ ansible_ssh_user }}"
      mode: u=rw,g=r,o=r

  - name: Set execution on run.sh
    file:
      path: "{{ remote_dst_path }}/project/nsd/run.sh"
      owner: "{{ ansible_ssh_user }}"
      group: "{{ ansible_ssh_user }}"
      mode: '755'

  - name: Build Project
    docker_compose:
      project_src: "{{ remote_dst_path }}/project"
      state: present
      build: yes
      stopped: no

