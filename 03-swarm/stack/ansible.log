2019-08-18 15:05:40,337 p=20610 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-18 15:05:40,405 p=20610 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-18 15:06:24,352 p=20610 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:06:24,378 p=20610 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-18 15:06:24,401 p=20610 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:06:24,427 p=20610 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-18 15:06:40,964 p=20610 u=aar |   [ERROR]: User interrupted execution

2019-08-18 15:18:51,599 p=23600 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-18 15:18:51,673 p=23600 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-18 15:18:51,705 p=23600 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:18:51,732 p=23600 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-18 15:20:01,368 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:20:01,396 p=23600 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-18 15:20:12,606 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:20:12,632 p=23600 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-18 15:20:27,055 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:20:27,084 p=23600 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-18 15:20:27,109 p=23600 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:20:27,134 p=23600 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-18 15:20:27,156 p=23600 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:20:27,181 p=23600 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-18 15:20:42,629 p=23600 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:20:42,649 p=23600 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-18 15:20:42,671 p=23600 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:20:42,694 p=23600 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-18 15:20:58,034 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:20:58,059 p=23600 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-18 15:20:58,079 p=23600 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:20:58,104 p=23600 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-18 15:21:12,776 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:21:12,800 p=23600 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-18 15:21:23,653 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:21:23,676 p=23600 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-18 15:21:33,122 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:21:33,143 p=23600 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-18 15:21:43,272 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:21:43,297 p=23600 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-18 15:21:52,923 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:21:52,962 p=23600 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-18 15:22:02,496 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:22:02,521 p=23600 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-18 15:22:11,849 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:22:11,877 p=23600 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-18 15:22:21,023 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:22:21,044 p=23600 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-18 15:22:30,368 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:22:30,393 p=23600 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-18 15:22:39,401 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:22:39,423 p=23600 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-18 15:26:24,413 p=23600 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:26:24,440 p=23600 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-18 15:26:33,223 p=23600 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:26:33,247 p=23600 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 15:26:41,777 p=23600 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:26:41,800 p=23600 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 15:26:49,921 p=23600 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:26:49,946 p=23600 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 15:26:58,379 p=23600 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:26:58,410 p=23600 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 15:27:07,444 p=23600 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:27:07,470 p=23600 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-18 15:27:21,382 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:27:21,414 p=23600 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-18 15:30:24,617 p=23600 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:30:24,644 p=23600 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 15:30:38,172 p=23600 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:30:38,204 p=23600 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-18 15:30:50,513 p=23600 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:30:50,538 p=23600 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-18 15:31:02,313 p=23600 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:31:02,342 p=23600 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-18 15:31:23,374 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:31:23,399 p=23600 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-18 15:31:45,775 p=23600 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:31:45,803 p=23600 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-18 15:32:04,869 p=23600 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:32:04,895 p=23600 u=aar |  TASK [swarm : Prepare api stack (push Mysql) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-18 15:32:17,131 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:32:17,175 p=23600 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-18 15:32:27,512 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:32:27,541 p=23600 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-18 15:32:37,704 p=23600 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:32:37,708 p=23600 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-18 15:32:37,709 p=23600 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=32   changed=13   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-18 15:45:39,097 p=29222 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-18 15:45:39,177 p=29222 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-18 15:45:39,206 p=29222 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:45:39,237 p=29222 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-18 15:46:35,177 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:46:35,204 p=29222 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-18 15:47:00,734 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:47:00,761 p=29222 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-18 15:47:35,522 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:47:35,547 p=29222 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-18 15:47:35,570 p=29222 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:47:35,593 p=29222 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-18 15:47:35,613 p=29222 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:47:35,637 p=29222 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-18 15:48:22,426 p=29222 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:48:22,454 p=29222 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-18 15:48:22,482 p=29222 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:48:22,507 p=29222 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-18 15:48:55,319 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:48:55,358 p=29222 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-18 15:48:55,379 p=29222 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:48:55,402 p=29222 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-18 15:49:19,374 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:49:19,405 p=29222 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-18 15:49:50,818 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:49:50,854 p=29222 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-18 15:50:19,865 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:50:19,893 p=29222 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-18 15:50:35,520 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:50:35,556 p=29222 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-18 15:50:51,984 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:50:52,006 p=29222 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-18 15:51:08,217 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:51:08,238 p=29222 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-18 15:51:25,665 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:51:25,692 p=29222 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-18 15:51:39,028 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:51:39,051 p=29222 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-18 15:51:49,752 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:51:49,776 p=29222 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-18 15:52:04,673 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:52:04,700 p=29222 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-18 15:56:30,957 p=29222 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:56:30,983 p=29222 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-18 15:56:39,438 p=29222 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:56:39,467 p=29222 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 15:56:47,637 p=29222 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:56:47,661 p=29222 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 15:56:56,291 p=29222 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:56:56,319 p=29222 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 15:57:04,609 p=29222 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:57:04,655 p=29222 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 15:57:12,829 p=29222 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:57:12,881 p=29222 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-18 15:57:30,470 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 15:57:30,493 p=29222 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-18 16:02:59,728 p=29222 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:02:59,766 p=29222 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 16:03:15,430 p=29222 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:03:15,455 p=29222 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-18 16:03:23,659 p=29222 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:03:23,683 p=29222 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-18 16:03:31,836 p=29222 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:03:31,861 p=29222 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-18 16:03:45,866 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:03:45,889 p=29222 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-18 16:04:26,254 p=29222 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:04:26,282 p=29222 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-18 16:04:52,638 p=29222 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:04:52,662 p=29222 u=aar |  TASK [swarm : Prepare api stack (push Mysql) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-18 16:05:02,767 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:05:02,795 p=29222 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-18 16:05:12,171 p=29222 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:05:12,198 p=29222 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-18 16:05:22,227 p=29222 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:05:22,235 p=29222 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-18 16:05:22,236 p=29222 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=32   changed=14   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-18 16:18:18,301 p=802 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-18 16:18:18,380 p=802 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-18 16:18:18,414 p=802 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:18:18,461 p=802 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-18 16:18:53,582 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:18:53,616 p=802 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-18 16:19:04,981 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:19:05,006 p=802 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-18 16:19:18,597 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:19:18,620 p=802 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-18 16:19:18,643 p=802 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:19:18,671 p=802 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-18 16:19:18,693 p=802 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:19:18,719 p=802 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-18 16:19:31,511 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:19:31,536 p=802 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-18 16:19:31,557 p=802 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:19:31,583 p=802 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-18 16:19:41,705 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:19:41,732 p=802 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-18 16:19:41,755 p=802 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:19:41,781 p=802 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-18 16:19:56,103 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:19:56,129 p=802 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-18 16:20:07,149 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:20:07,175 p=802 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-18 16:20:17,440 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:20:17,464 p=802 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-18 16:20:27,800 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:20:27,824 p=802 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-18 16:20:37,832 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:20:37,858 p=802 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-18 16:20:47,720 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:20:47,744 p=802 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-18 16:20:57,980 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:20:58,008 p=802 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-18 16:21:07,458 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:21:07,483 p=802 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-18 16:21:16,770 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:21:16,793 p=802 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-18 16:21:27,011 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:21:27,036 p=802 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-18 16:26:32,320 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:26:32,347 p=802 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-18 16:26:41,779 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:26:41,803 p=802 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 16:26:50,257 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:26:50,280 p=802 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 16:26:58,886 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:26:58,908 p=802 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 16:27:08,218 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:27:08,242 p=802 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 16:27:16,646 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:27:16,674 p=802 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-18 16:27:36,274 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:27:36,299 p=802 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-18 16:31:22,072 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:31:22,096 p=802 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-18 16:31:30,515 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:31:30,539 p=802 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-18 16:31:39,136 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:31:39,160 p=802 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-18 16:31:48,335 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:31:48,363 p=802 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-18 16:32:07,900 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:32:07,927 p=802 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-18 16:32:24,868 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:32:24,890 p=802 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-18 16:32:50,922 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:32:50,946 p=802 u=aar |  TASK [swarm : Prepare api stack (push Mysql) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-18 16:33:01,761 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:33:01,787 p=802 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-18 16:33:12,192 p=802 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:33:12,215 p=802 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-18 16:33:22,660 p=802 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-18 16:33:22,662 p=802 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-18 16:33:22,662 p=802 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=32   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-19 12:40:27,971 p=7380 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-19 12:40:28,039 p=7380 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-19 12:40:50,982 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:40:51,010 p=7380 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-19 12:40:51,039 p=7380 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:40:51,085 p=7380 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-19 12:42:06,005 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:42:06,054 p=7380 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-19 12:42:16,975 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:42:17,047 p=7380 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-19 12:42:29,616 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:42:29,643 p=7380 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-19 12:42:29,674 p=7380 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:42:29,712 p=7380 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-19 12:42:29,752 p=7380 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:42:29,793 p=7380 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-19 12:42:38,927 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:42:38,972 p=7380 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-19 12:42:39,012 p=7380 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:42:39,056 p=7380 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-19 12:42:47,752 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:42:47,806 p=7380 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-19 12:42:47,850 p=7380 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:42:47,900 p=7380 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-19 12:42:57,284 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:42:57,323 p=7380 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-19 12:43:05,685 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:43:05,738 p=7380 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-19 12:43:13,728 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:43:13,757 p=7380 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-19 12:43:22,098 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:43:22,129 p=7380 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-19 12:43:31,739 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:43:31,784 p=7380 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-19 12:43:40,596 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:43:40,643 p=7380 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-19 12:43:49,110 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:43:49,193 p=7380 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-19 12:44:07,657 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:44:07,719 p=7380 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-19 12:44:30,189 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:44:30,225 p=7380 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-19 12:44:55,314 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:44:55,365 p=7380 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-19 12:50:55,355 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:50:55,405 p=7380 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-19 12:51:03,922 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:51:03,967 p=7380 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 12:51:13,888 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:51:13,921 p=7380 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 12:51:23,349 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:51:23,401 p=7380 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 12:51:33,183 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:51:33,233 p=7380 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 12:51:41,379 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:51:41,437 p=7380 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 12:52:00,209 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:52:00,243 p=7380 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-19 12:56:07,380 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:56:07,417 p=7380 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 12:56:14,296 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:56:14,337 p=7380 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-19 12:56:21,191 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:56:21,244 p=7380 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-19 12:56:28,131 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:56:28,175 p=7380 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 12:56:43,744 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:56:43,806 p=7380 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-19 12:56:59,576 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:56:59,611 p=7380 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-19 12:57:22,874 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:57:22,913 p=7380 u=aar |  TASK [swarm : Prepare api stack (push Mysql) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-19 12:57:31,165 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:57:31,214 p=7380 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-19 12:57:38,858 p=7380 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:57:38,914 p=7380 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-19 12:57:47,757 p=7380 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 12:57:47,763 p=7380 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-19 12:57:47,764 p=7380 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=33   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-19 14:07:17,404 p=17881 u=aar |  PLAY [Install docker and deploy swarm cuslter] *****************************************************************************************************************************
2019-08-19 14:07:17,504 p=17881 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] *******************************************************************************************************************
2019-08-19 14:07:17,535 p=17881 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:07:17,589 p=17881 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] *******************************************************************************************************************
2019-08-19 14:07:49,755 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:07:49,786 p=17881 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-19 14:07:59,008 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:07:59,045 p=17881 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] *************************************************
2019-08-19 14:08:10,942 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:08:10,982 p=17881 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] **********************
2019-08-19 14:08:11,008 p=17881 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:08:11,031 p=17881 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] *************************************************************
2019-08-19 14:08:11,056 p=17881 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:08:11,082 p=17881 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ****************************************
2019-08-19 14:08:22,006 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:08:22,036 p=17881 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] *****************
2019-08-19 14:08:22,062 p=17881 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:08:22,090 p=17881 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] **************************************************************************************************
2019-08-19 14:08:30,480 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:08:30,519 p=17881 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ***********************************************************************************************************
2019-08-19 14:08:30,541 p=17881 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:08:30,580 p=17881 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] **********************************************************************************************
2019-08-19 14:08:39,641 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:08:39,681 p=17881 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] **************************************************************************************************
2019-08-19 14:08:47,391 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:08:47,426 p=17881 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] **************************************************************************
2019-08-19 14:08:55,092 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:08:55,133 p=17881 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ******************************************************************************************************
2019-08-19 14:09:02,855 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:09:02,896 p=17881 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] *****************************************************************************************
2019-08-19 14:09:11,181 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:09:11,228 p=17881 u=aar |  TASK [swarm : Init swarm state=present] ************************************************************************************************************************************
2019-08-19 14:09:28,583 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:09:28,647 p=17881 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-19 14:09:39,331 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:09:39,358 p=17881 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ****************************************************************************
2019-08-19 14:09:48,584 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:09:48,630 p=17881 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] ************************************************
2019-08-19 14:09:57,074 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:09:57,104 p=17881 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-19 14:10:05,373 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:10:05,404 p=17881 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ******
2019-08-19 14:14:11,110 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:14:11,147 p=17881 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ******************
2019-08-19 14:14:17,953 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:14:18,005 p=17881 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 14:14:24,860 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:14:24,899 p=17881 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 14:14:31,728 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:14:31,777 p=17881 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 14:14:38,631 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:14:38,701 p=17881 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 14:14:45,516 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:14:45,548 p=17881 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 14:15:00,673 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:15:00,720 p=17881 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ****************
2019-08-19 14:17:50,129 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:17:50,153 p=17881 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 14:17:57,001 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:17:57,026 p=17881 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 14:18:03,856 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:18:03,894 p=17881 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 14:18:10,725 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:18:10,745 p=17881 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 14:18:25,889 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:18:25,917 p=17881 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] ********************************************
2019-08-19 14:18:57,490 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:18:57,514 p=17881 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] **************************************
2019-08-19 14:19:21,257 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:19:21,298 p=17881 u=aar |  TASK [swarm : Prepare api stack (push Mysql) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-19 14:19:29,633 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:19:29,664 p=17881 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-19 14:19:37,151 p=17881 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:19:37,177 p=17881 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] **********************************
2019-08-19 14:19:45,462 p=17881 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 14:19:45,465 p=17881 u=aar |  PLAY RECAP *****************************************************************************************************************************************************************
2019-08-19 14:19:45,465 p=17881 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=32   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-19 15:36:13,904 p=24477 u=aar |  PLAY [Install docker and deploy swarm cuslter] *****************************************************************************************************************************
2019-08-19 15:36:13,986 p=24477 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] *******************************************************************************************************************
2019-08-19 15:36:14,022 p=24477 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:36:14,067 p=24477 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] *******************************************************************************************************************
2019-08-19 15:36:38,313 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:36:38,347 p=24477 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-19 15:36:47,660 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:36:47,697 p=24477 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] *************************************************
2019-08-19 15:36:59,624 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:36:59,656 p=24477 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] **********************
2019-08-19 15:36:59,685 p=24477 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:36:59,723 p=24477 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] *************************************************************
2019-08-19 15:36:59,770 p=24477 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:36:59,799 p=24477 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ****************************************
2019-08-19 15:37:10,300 p=24477 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:37:10,334 p=24477 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] *****************
2019-08-19 15:37:10,362 p=24477 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:37:10,404 p=24477 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] **************************************************************************************************
2019-08-19 15:37:18,797 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:37:18,861 p=24477 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ***********************************************************************************************************
2019-08-19 15:37:18,906 p=24477 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:37:18,943 p=24477 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] **********************************************************************************************
2019-08-19 15:37:28,070 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:37:28,094 p=24477 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] **************************************************************************************************
2019-08-19 15:37:36,142 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:37:36,168 p=24477 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] **************************************************************************
2019-08-19 15:37:44,342 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:37:44,392 p=24477 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ******************************************************************************************************
2019-08-19 15:37:52,817 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:37:52,845 p=24477 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] *****************************************************************************************
2019-08-19 15:38:01,012 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:38:01,037 p=24477 u=aar |  TASK [swarm : Init swarm state=present] ************************************************************************************************************************************
2019-08-19 15:38:24,493 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:38:24,555 p=24477 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-19 15:38:50,371 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:38:50,395 p=24477 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ****************************************************************************
2019-08-19 15:39:12,353 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:39:12,380 p=24477 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] ************************************************
2019-08-19 15:39:22,491 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:39:22,514 p=24477 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-19 15:39:31,807 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:39:31,849 p=24477 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ******
2019-08-19 15:42:44,003 p=24477 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:42:44,037 p=24477 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ******************
2019-08-19 15:42:50,879 p=24477 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:42:50,916 p=24477 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 15:42:57,778 p=24477 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:42:57,805 p=24477 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 15:43:04,678 p=24477 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:43:04,708 p=24477 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 15:43:11,547 p=24477 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:43:11,575 p=24477 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 15:43:18,398 p=24477 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:43:18,446 p=24477 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 15:43:30,400 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:43:30,463 p=24477 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ****************
2019-08-19 15:45:39,272 p=24477 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:45:39,311 p=24477 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 15:45:46,200 p=24477 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:45:46,242 p=24477 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 15:45:53,111 p=24477 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:45:53,153 p=24477 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 15:46:00,021 p=24477 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:46:00,047 p=24477 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 15:46:11,987 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:46:12,012 p=24477 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] ********************************************
2019-08-19 15:46:25,501 p=24477 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:46:25,537 p=24477 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] **************************************
2019-08-19 15:46:50,065 p=24477 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:46:50,093 p=24477 u=aar |  TASK [swarm : Prepare api stack (push Mysql) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-19 15:46:58,279 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:46:58,322 p=24477 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-19 15:47:05,916 p=24477 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:47:05,954 p=24477 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] **********************************
2019-08-19 15:47:14,601 p=24477 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 15:47:14,604 p=24477 u=aar |  PLAY RECAP *****************************************************************************************************************************************************************
2019-08-19 15:47:14,604 p=24477 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=32   changed=14   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-19 16:01:43,903 p=26982 u=aar |  PLAY [Install docker and deploy swarm cuslter] *****************************************************************************************************************************
2019-08-19 16:01:44,024 p=26982 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] *******************************************************************************************************************
2019-08-19 16:01:44,052 p=26982 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:01:44,084 p=26982 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] *******************************************************************************************************************
2019-08-19 16:02:09,587 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:02:09,631 p=26982 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-19 16:02:18,880 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:02:18,950 p=26982 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] *************************************************
2019-08-19 16:02:28,884 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:02:28,925 p=26982 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] **********************
2019-08-19 16:02:28,962 p=26982 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:02:28,996 p=26982 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] *************************************************************
2019-08-19 16:02:29,026 p=26982 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:02:29,067 p=26982 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ****************************************
2019-08-19 16:02:40,012 p=26982 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:02:40,055 p=26982 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] *****************
2019-08-19 16:02:40,086 p=26982 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:02:40,121 p=26982 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] **************************************************************************************************
2019-08-19 16:02:48,580 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:02:48,610 p=26982 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ***********************************************************************************************************
2019-08-19 16:02:48,640 p=26982 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:02:48,670 p=26982 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] **********************************************************************************************
2019-08-19 16:02:57,781 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:02:57,808 p=26982 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] **************************************************************************************************
2019-08-19 16:03:05,876 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:03:05,914 p=26982 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] **************************************************************************
2019-08-19 16:03:14,069 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:03:14,116 p=26982 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ******************************************************************************************************
2019-08-19 16:03:22,199 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:03:22,227 p=26982 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] *****************************************************************************************
2019-08-19 16:03:30,397 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:03:30,437 p=26982 u=aar |  TASK [swarm : Init swarm state=present] ************************************************************************************************************************************
2019-08-19 16:03:38,630 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:03:38,659 p=26982 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-19 16:03:46,724 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:03:46,751 p=26982 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ****************************************************************************
2019-08-19 16:03:54,603 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:03:54,644 p=26982 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] ************************************************
2019-08-19 16:04:02,261 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:04:02,301 p=26982 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-19 16:04:10,617 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:04:10,641 p=26982 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ******
2019-08-19 16:07:23,837 p=26982 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:07:23,876 p=26982 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ******************
2019-08-19 16:07:30,721 p=26982 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:07:30,750 p=26982 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 16:07:37,609 p=26982 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:07:37,647 p=26982 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 16:07:44,836 p=26982 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:07:44,891 p=26982 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 16:07:52,222 p=26982 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:07:52,251 p=26982 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 16:07:59,105 p=26982 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:07:59,165 p=26982 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 16:08:11,176 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:08:11,226 p=26982 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ****************
2019-08-19 16:10:20,625 p=26982 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:10:20,671 p=26982 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 16:10:27,959 p=26982 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:10:27,992 p=26982 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 16:10:35,205 p=26982 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:10:35,245 p=26982 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 16:10:42,432 p=26982 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:10:42,477 p=26982 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 16:10:54,466 p=26982 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:10:54,513 p=26982 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] ********************************************
2019-08-19 16:11:15,848 p=26982 u=aar |  fatal: [mdnssec.ri.mu.afrinic.net]: FAILED! => {"changed": false, "errors": [], "module_stderr": "Creating stack_api_db ... \r\n\r\u001b[1BCreating stack_api_replication_db ... \r\n\r\u001b[1BCreating stack_api                ... \r\n\r\u001b[1B", "module_stdout": "", "msg": "Error starting project unknown cause"}
2019-08-19 16:11:15,851 p=26982 u=aar |  PLAY RECAP *****************************************************************************************************************************************************************
2019-08-19 16:11:15,852 p=26982 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=27   changed=11   unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2019-08-19 16:41:21,293 p=30161 u=aar |  PLAY [Install docker and deploy swarm cuslter] *****************************************************************************************************************************
2019-08-19 16:41:21,394 p=30161 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] *******************************************************************************************************************
2019-08-19 16:41:21,429 p=30161 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:41:21,470 p=30161 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] *******************************************************************************************************************
2019-08-19 16:41:50,432 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:41:50,458 p=30161 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-19 16:41:59,594 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:41:59,638 p=30161 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] *************************************************
2019-08-19 16:42:12,123 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:42:12,166 p=30161 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] **********************
2019-08-19 16:42:12,205 p=30161 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:42:12,251 p=30161 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] *************************************************************
2019-08-19 16:42:12,305 p=30161 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:42:12,351 p=30161 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ****************************************
2019-08-19 16:42:24,130 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:42:24,181 p=30161 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] *****************
2019-08-19 16:42:24,222 p=30161 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:42:24,273 p=30161 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] **************************************************************************************************
2019-08-19 16:42:32,765 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:42:32,807 p=30161 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ***********************************************************************************************************
2019-08-19 16:42:32,833 p=30161 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:42:32,862 p=30161 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] **********************************************************************************************
2019-08-19 16:42:41,859 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:42:41,882 p=30161 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] **************************************************************************************************
2019-08-19 16:42:49,629 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:42:49,669 p=30161 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] **************************************************************************
2019-08-19 16:42:57,813 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:42:57,867 p=30161 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ******************************************************************************************************
2019-08-19 16:43:05,929 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:43:05,954 p=30161 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] *****************************************************************************************
2019-08-19 16:43:14,339 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:43:14,374 p=30161 u=aar |  TASK [swarm : Init swarm state=present] ************************************************************************************************************************************
2019-08-19 16:43:22,539 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:43:22,577 p=30161 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-19 16:43:30,628 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:43:30,656 p=30161 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ****************************************************************************
2019-08-19 16:43:38,581 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:43:38,607 p=30161 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] ************************************************
2019-08-19 16:43:46,209 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:43:46,265 p=30161 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-19 16:43:54,193 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:43:54,235 p=30161 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ******
2019-08-19 16:48:15,420 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:48:15,545 p=30161 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ******************
2019-08-19 16:48:22,450 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:48:22,509 p=30161 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 16:48:29,367 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:48:29,407 p=30161 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 16:48:36,295 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:48:36,338 p=30161 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 16:48:43,217 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:48:43,260 p=30161 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 16:48:50,155 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:48:50,230 p=30161 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 16:49:05,796 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:49:05,887 p=30161 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ****************
2019-08-19 16:51:57,855 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:51:57,907 p=30161 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 16:52:05,091 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:52:05,133 p=30161 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 16:52:12,023 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:52:12,069 p=30161 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 16:52:18,937 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:52:18,964 p=30161 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 16:52:34,469 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:52:34,501 p=30161 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] ********************************************
2019-08-19 16:52:56,336 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:52:56,363 p=30161 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] **************************************
2019-08-19 16:53:20,543 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:53:20,572 p=30161 u=aar |  TASK [swarm : Prepare api stack (push Mysql) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-19 16:53:28,816 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:53:28,845 p=30161 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-19 16:53:36,633 p=30161 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:53:36,660 p=30161 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] **********************************
2019-08-19 16:53:44,813 p=30161 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 16:53:44,817 p=30161 u=aar |  PLAY RECAP *****************************************************************************************************************************************************************
2019-08-19 16:53:44,818 p=30161 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=32   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-19 17:27:03,468 p=8393 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-19 17:27:03,506 p=8393 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-19 17:27:18,682 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:27:18,698 p=8393 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-19 17:27:18,718 p=8393 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:27:18,760 p=8393 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-19 17:27:35,218 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:27:35,273 p=8393 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-19 17:27:44,654 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:27:44,694 p=8393 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-19 17:27:57,079 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:27:57,101 p=8393 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-19 17:27:57,124 p=8393 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:27:57,149 p=8393 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-19 17:27:57,164 p=8393 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:27:57,205 p=8393 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-19 17:28:07,994 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:28:08,032 p=8393 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-19 17:28:08,048 p=8393 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:28:08,065 p=8393 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-19 17:28:16,556 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:28:16,596 p=8393 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-19 17:28:16,613 p=8393 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:28:16,632 p=8393 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-19 17:28:25,050 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:28:25,092 p=8393 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-19 17:28:32,935 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:28:32,967 p=8393 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-19 17:28:40,837 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:28:40,861 p=8393 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-19 17:28:49,548 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:28:49,577 p=8393 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-19 17:28:57,759 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:28:57,801 p=8393 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-19 17:29:06,016 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:29:06,055 p=8393 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-19 17:29:14,075 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:29:14,101 p=8393 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-19 17:29:21,963 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:29:22,005 p=8393 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-19 17:29:29,433 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:29:29,472 p=8393 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-19 17:29:37,703 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:29:37,748 p=8393 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-19 17:34:22,930 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:34:22,952 p=8393 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-19 17:34:29,956 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:34:29,989 p=8393 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 17:34:36,924 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:34:36,969 p=8393 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 17:34:43,952 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:34:43,987 p=8393 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 17:34:50,941 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:34:50,985 p=8393 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 17:34:58,289 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:34:58,332 p=8393 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 17:35:13,734 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:35:13,779 p=8393 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-19 17:38:05,234 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:38:05,275 p=8393 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 17:38:12,216 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:38:12,250 p=8393 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-19 17:38:19,221 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:38:19,261 p=8393 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-19 17:38:27,413 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:38:27,450 p=8393 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 17:38:43,256 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:38:43,309 p=8393 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-19 17:39:08,289 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:39:08,313 p=8393 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-19 17:39:34,629 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:39:34,680 p=8393 u=aar |  TASK [swarm : Prepare api stack (push Mysql) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-19 17:39:46,620 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:39:46,664 p=8393 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-19 17:39:59,999 p=8393 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:40:00,033 p=8393 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-19 17:40:09,207 p=8393 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 17:40:09,216 p=8393 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-19 17:40:09,217 p=8393 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=33   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-19 19:31:46,677 p=17382 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-19 19:31:46,732 p=17382 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-19 19:32:44,297 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:32:44,317 p=17382 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-19 19:32:44,343 p=17382 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:32:44,367 p=17382 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-19 19:33:39,765 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:33:39,811 p=17382 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-19 19:34:07,865 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:34:07,888 p=17382 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-19 19:34:44,969 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:34:44,990 p=17382 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-19 19:34:45,009 p=17382 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:34:45,027 p=17382 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-19 19:34:45,049 p=17382 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:34:45,072 p=17382 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-19 19:35:17,471 p=17382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:35:17,494 p=17382 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-19 19:35:17,516 p=17382 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:35:17,534 p=17382 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-19 19:35:51,480 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:35:51,501 p=17382 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-19 19:35:51,522 p=17382 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:35:51,540 p=17382 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-19 19:36:27,926 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:36:27,946 p=17382 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-19 19:36:51,221 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:36:51,246 p=17382 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-19 19:37:15,274 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:37:15,299 p=17382 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-19 19:37:42,574 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:37:42,596 p=17382 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-19 19:38:06,409 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:38:06,439 p=17382 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-19 19:38:22,401 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:38:22,423 p=17382 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-19 19:38:37,922 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:38:37,942 p=17382 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-19 19:38:58,825 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:38:58,854 p=17382 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-19 19:39:33,028 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:39:33,056 p=17382 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-19 19:39:44,870 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:39:44,891 p=17382 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-19 19:46:00,672 p=17382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:46:00,694 p=17382 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-19 19:46:12,946 p=17382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:46:12,965 p=17382 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 19:46:22,853 p=17382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:46:22,875 p=17382 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 19:46:36,738 p=17382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:46:36,781 p=17382 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 19:46:57,124 p=17382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:46:57,162 p=17382 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 19:47:13,229 p=17382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:47:13,248 p=17382 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 19:47:37,467 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:47:37,488 p=17382 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-19 19:52:47,182 p=17382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:52:47,206 p=17382 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 19:53:06,297 p=17382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:53:06,319 p=17382 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-19 19:53:22,737 p=17382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:53:22,759 p=17382 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-19 19:53:35,352 p=17382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:53:35,373 p=17382 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 19:53:59,174 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:53:59,194 p=17382 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-19 19:54:26,350 p=17382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:54:26,374 p=17382 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-19 19:54:48,112 p=17382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:54:48,135 p=17382 u=aar |  TASK [swarm : Prepare api stack (push Mysql) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-19 19:55:05,637 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:55:05,658 p=17382 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-19 19:55:23,195 p=17382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:55:23,216 p=17382 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-19 19:55:41,777 p=17382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 19:55:41,780 p=17382 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-19 19:55:41,780 p=17382 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=33   changed=14   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-19 20:02:17,006 p=19492 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-19 20:02:17,074 p=19492 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-19 20:02:17,103 p=19492 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:02:17,131 p=19492 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-19 20:02:55,420 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:02:55,443 p=19492 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-19 20:03:09,266 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:03:09,286 p=19492 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-19 20:03:24,503 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:03:24,524 p=19492 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-19 20:03:24,547 p=19492 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:03:24,571 p=19492 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-19 20:03:24,592 p=19492 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:03:24,615 p=19492 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-19 20:03:39,053 p=19492 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:03:39,072 p=19492 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-19 20:03:39,094 p=19492 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:03:39,117 p=19492 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-19 20:03:51,211 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:03:51,235 p=19492 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-19 20:03:51,257 p=19492 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:03:51,279 p=19492 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-19 20:04:04,670 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:04:04,695 p=19492 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-19 20:04:18,546 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:04:18,568 p=19492 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-19 20:04:29,725 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:04:29,747 p=19492 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-19 20:04:43,046 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:04:43,065 p=19492 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-19 20:04:54,475 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:04:54,505 p=19492 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-19 20:05:05,747 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:05:05,769 p=19492 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-19 20:05:17,680 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:05:17,702 p=19492 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-19 20:05:28,284 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:05:28,307 p=19492 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-19 20:05:38,443 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:05:38,464 p=19492 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-19 20:05:50,275 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:05:50,307 p=19492 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-19 20:10:58,796 p=19492 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:10:58,818 p=19492 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-19 20:11:17,089 p=19492 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:11:17,113 p=19492 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 20:11:26,674 p=19492 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:11:26,695 p=19492 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 20:11:37,790 p=19492 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:11:37,815 p=19492 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 20:11:48,623 p=19492 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:11:48,644 p=19492 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 20:11:57,955 p=19492 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:11:57,982 p=19492 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 20:12:14,384 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:12:14,407 p=19492 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-19 20:15:29,610 p=19492 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:15:29,658 p=19492 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 20:15:42,632 p=19492 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:15:42,655 p=19492 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-19 20:15:59,881 p=19492 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:15:59,905 p=19492 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-19 20:16:12,321 p=19492 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:16:12,344 p=19492 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 20:16:28,351 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:16:28,370 p=19492 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-19 20:16:53,732 p=19492 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:16:53,755 p=19492 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-19 20:17:13,740 p=19492 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:17:13,762 p=19492 u=aar |  TASK [swarm : Prepare api stack (push Mysql) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-19 20:17:25,461 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:17:25,481 p=19492 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-19 20:17:36,107 p=19492 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:17:36,132 p=19492 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-19 20:17:50,734 p=19492 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:17:50,736 p=19492 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-19 20:17:50,760 p=19492 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=32   changed=14   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-19 20:29:31,456 p=21431 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-19 20:29:31,530 p=21431 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-19 20:29:31,553 p=21431 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:29:31,583 p=21431 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-19 20:30:13,690 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:30:13,712 p=21431 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-19 20:30:34,288 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:30:34,310 p=21431 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-19 20:31:01,547 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:31:01,565 p=21431 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-19 20:31:01,589 p=21431 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:31:01,612 p=21431 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-19 20:31:01,640 p=21431 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:31:01,663 p=21431 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-19 20:31:29,592 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:31:29,616 p=21431 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-19 20:31:29,640 p=21431 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:31:29,662 p=21431 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-19 20:31:48,994 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:31:49,018 p=21431 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-19 20:31:49,042 p=21431 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:31:49,063 p=21431 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-19 20:32:14,495 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:32:14,546 p=21431 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-19 20:32:38,099 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:32:38,122 p=21431 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-19 20:32:55,440 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:32:55,462 p=21431 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-19 20:33:21,547 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:33:21,597 p=21431 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-19 20:33:45,723 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:33:46,025 p=21431 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-19 20:34:07,056 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:34:07,083 p=21431 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-19 20:34:26,811 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:34:26,836 p=21431 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-19 20:34:44,939 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:34:44,971 p=21431 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-19 20:35:00,551 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:35:00,573 p=21431 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-19 20:35:22,853 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:35:22,882 p=21431 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-19 20:45:48,845 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:45:48,867 p=21431 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-19 20:46:04,004 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:46:04,028 p=21431 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 20:46:20,496 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:46:20,517 p=21431 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 20:46:36,839 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:46:36,862 p=21431 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 20:46:57,110 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:46:57,134 p=21431 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 20:47:12,405 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:47:12,453 p=21431 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 20:48:03,987 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:48:04,013 p=21431 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-19 20:56:59,506 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:56:59,538 p=21431 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 20:57:24,215 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:57:24,239 p=21431 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-19 20:57:45,934 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:57:45,959 p=21431 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-19 20:58:01,336 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:58:01,358 p=21431 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 20:58:42,147 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:58:42,174 p=21431 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-19 20:59:17,091 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:59:17,117 p=21431 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-19 20:59:56,144 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 20:59:56,171 p=21431 u=aar |  TASK [swarm : Prepare api stack (push Mysql) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-19 21:00:17,280 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:00:17,304 p=21431 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-19 21:00:37,648 p=21431 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:00:37,672 p=21431 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-19 21:00:55,393 p=21431 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:00:55,413 p=21431 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-19 21:00:55,415 p=21431 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=32   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-19 21:26:51,499 p=24804 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-19 21:26:51,585 p=24804 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-19 21:26:51,614 p=24804 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:26:51,642 p=24804 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-19 21:27:32,474 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:27:32,517 p=24804 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-19 21:27:53,289 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:27:53,308 p=24804 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-19 21:28:06,490 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:28:06,526 p=24804 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-19 21:28:06,552 p=24804 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:28:06,588 p=24804 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-19 21:28:06,610 p=24804 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:28:06,637 p=24804 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-19 21:28:21,481 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:28:21,520 p=24804 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-19 21:28:21,542 p=24804 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:28:21,570 p=24804 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-19 21:28:36,970 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:28:37,020 p=24804 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-19 21:28:37,062 p=24804 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:28:37,102 p=24804 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-19 21:28:52,273 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:28:52,312 p=24804 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-19 21:29:04,703 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:29:04,737 p=24804 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-19 21:29:15,632 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:29:15,651 p=24804 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-19 21:29:28,316 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:29:28,344 p=24804 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-19 21:29:39,951 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:29:39,970 p=24804 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-19 21:29:52,296 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:29:52,317 p=24804 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-19 21:30:03,943 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:30:03,963 p=24804 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-19 21:30:14,763 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:30:14,785 p=24804 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-19 21:30:30,349 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:30:30,372 p=24804 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-19 21:30:51,997 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:30:52,021 p=24804 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-19 21:38:19,622 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:38:19,648 p=24804 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-19 21:38:42,980 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:38:43,001 p=24804 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 21:39:08,703 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:39:08,727 p=24804 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 21:39:34,638 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:39:34,656 p=24804 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 21:39:56,716 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:39:56,743 p=24804 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 21:40:20,989 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:40:21,015 p=24804 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 21:40:51,942 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:40:51,965 p=24804 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-19 21:52:35,137 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:52:35,298 p=24804 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 21:52:53,426 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:52:53,461 p=24804 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-19 21:53:19,421 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:53:19,461 p=24804 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-19 21:53:39,760 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:53:39,797 p=24804 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 21:54:33,668 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:54:33,718 p=24804 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-19 21:54:57,880 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:54:57,921 p=24804 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-19 21:55:26,964 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:55:26,992 p=24804 u=aar |  TASK [swarm : Prepare api stack (push Mysql) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-19 21:55:43,270 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:55:43,297 p=24804 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-19 21:55:53,488 p=24804 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:55:53,524 p=24804 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-19 21:56:05,241 p=24804 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 21:56:05,247 p=24804 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-19 21:56:05,247 p=24804 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=32   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-19 22:34:55,510 p=28071 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-19 22:34:55,609 p=28071 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-19 22:34:55,638 p=28071 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:34:55,690 p=28071 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-19 22:36:09,861 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:36:09,890 p=28071 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-19 22:36:38,505 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:36:38,530 p=28071 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-19 22:37:01,669 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:37:01,692 p=28071 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-19 22:37:01,714 p=28071 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:37:01,737 p=28071 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-19 22:37:01,758 p=28071 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:37:01,781 p=28071 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-19 22:37:31,315 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:37:31,347 p=28071 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-19 22:37:31,367 p=28071 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:37:31,402 p=28071 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-19 22:37:57,367 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:37:57,392 p=28071 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-19 22:37:57,416 p=28071 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:37:57,437 p=28071 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-19 22:38:24,908 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:38:24,934 p=28071 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-19 22:38:51,366 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:38:51,406 p=28071 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-19 22:39:15,426 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:39:15,451 p=28071 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-19 22:39:37,072 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:39:37,094 p=28071 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-19 22:40:00,208 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:40:00,232 p=28071 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-19 22:40:34,474 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:40:34,516 p=28071 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-19 22:40:54,614 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:40:54,650 p=28071 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-19 22:41:14,065 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:41:14,108 p=28071 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-19 22:41:49,119 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:41:49,162 p=28071 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-19 22:42:12,158 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:42:12,462 p=28071 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-19 22:57:29,760 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:57:29,893 p=28071 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-19 22:57:50,222 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:57:50,255 p=28071 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 22:58:14,080 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:58:14,106 p=28071 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 22:58:37,171 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:58:37,208 p=28071 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 22:59:00,323 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:59:00,387 p=28071 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 22:59:27,594 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 22:59:27,665 p=28071 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 23:00:17,629 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 23:00:17,661 p=28071 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-19 23:10:02,227 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 23:10:02,905 p=28071 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-19 23:10:20,184 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 23:10:20,210 p=28071 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-19 23:10:37,556 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 23:10:37,606 p=28071 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-19 23:11:04,282 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 23:11:04,307 p=28071 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-19 23:11:55,886 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 23:11:55,924 p=28071 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-19 23:12:32,747 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 23:12:32,776 p=28071 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-19 23:13:03,489 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 23:13:03,518 p=28071 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-19 23:13:18,980 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 23:13:19,007 p=28071 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-19 23:13:33,893 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 23:13:33,919 p=28071 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-19 23:13:58,733 p=28071 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-19 23:13:58,759 p=28071 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-19 23:14:18,216 p=28071 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-19 23:14:18,307 p=28071 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-19 23:14:18,308 p=28071 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=33   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-20 09:34:37,216 p=31580 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-20 09:34:37,273 p=31580 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-20 09:34:52,748 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:34:52,769 p=31580 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 09:34:52,791 p=31580 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:34:52,814 p=31580 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 09:35:42,710 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:35:42,734 p=31580 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-20 09:35:52,005 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:35:52,027 p=31580 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-20 09:36:01,518 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:36:01,538 p=31580 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-20 09:36:01,560 p=31580 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:36:01,582 p=31580 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-20 09:36:01,606 p=31580 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:36:01,633 p=31580 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-20 09:36:10,953 p=31580 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:36:10,976 p=31580 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-20 09:36:11,000 p=31580 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:36:11,027 p=31580 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-20 09:36:19,369 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:36:19,388 p=31580 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-20 09:36:19,413 p=31580 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:36:19,439 p=31580 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-20 09:36:28,209 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:36:28,235 p=31580 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-20 09:36:36,218 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:36:36,240 p=31580 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-20 09:36:44,242 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:36:44,266 p=31580 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-20 09:36:52,241 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:36:52,259 p=31580 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-20 09:37:00,710 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:37:00,731 p=31580 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-20 09:37:09,127 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:37:09,149 p=31580 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-20 09:37:17,169 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:37:17,189 p=31580 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-20 09:37:25,022 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:37:25,044 p=31580 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-20 09:37:32,770 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:37:32,792 p=31580 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-20 09:37:40,983 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:37:41,006 p=31580 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-20 09:41:11,106 p=31580 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:41:11,125 p=31580 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-20 09:41:17,929 p=31580 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:41:17,953 p=31580 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 09:41:24,762 p=31580 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:41:24,780 p=31580 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 09:41:31,688 p=31580 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:41:31,709 p=31580 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 09:41:38,532 p=31580 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:41:38,553 p=31580 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 09:41:45,338 p=31580 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:41:45,363 p=31580 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 09:41:57,292 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:41:57,313 p=31580 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-20 09:44:06,402 p=31580 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:44:06,421 p=31580 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 09:44:13,246 p=31580 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:44:13,269 p=31580 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-20 09:44:20,073 p=31580 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:44:20,095 p=31580 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-20 09:44:26,891 p=31580 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:44:26,910 p=31580 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 09:44:39,618 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:44:39,640 p=31580 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-20 09:45:01,090 p=31580 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:45:01,106 p=31580 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-20 09:45:25,920 p=31580 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:45:25,941 p=31580 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-20 09:45:33,993 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:45:34,015 p=31580 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-20 09:45:41,540 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:45:41,588 p=31580 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-20 09:45:49,139 p=31580 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:45:49,162 p=31580 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-20 09:45:57,553 p=31580 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:45:57,555 p=31580 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-20 09:45:57,556 p=31580 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=14   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-20 09:59:00,705 p=994 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-20 09:59:00,782 p=994 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 09:59:00,808 p=994 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:59:00,833 p=994 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 09:59:19,275 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:59:19,329 p=994 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-20 09:59:28,355 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:59:28,381 p=994 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-20 09:59:37,844 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:59:37,867 p=994 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-20 09:59:37,896 p=994 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:59:37,921 p=994 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-20 09:59:37,946 p=994 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:59:37,970 p=994 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-20 09:59:48,820 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:59:48,841 p=994 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-20 09:59:48,866 p=994 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:59:48,890 p=994 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-20 09:59:57,186 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:59:57,219 p=994 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-20 09:59:57,244 p=994 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 09:59:57,268 p=994 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-20 10:00:05,731 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:00:05,751 p=994 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-20 10:00:13,427 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:00:13,449 p=994 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-20 10:00:21,176 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:00:21,213 p=994 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-20 10:00:29,178 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:00:29,202 p=994 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-20 10:00:37,895 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:00:37,915 p=994 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-20 10:00:46,360 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:00:46,387 p=994 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-20 10:00:54,345 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:00:54,375 p=994 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-20 10:01:02,206 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:01:02,229 p=994 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-20 10:01:09,956 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:01:09,981 p=994 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-20 10:01:18,662 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:01:18,685 p=994 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-20 10:05:44,990 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:05:45,012 p=994 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-20 10:05:51,824 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:05:51,847 p=994 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 10:05:58,969 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:05:58,991 p=994 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 10:06:06,108 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:06:06,135 p=994 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 10:06:12,952 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:06:12,976 p=994 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 10:06:19,787 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:06:19,847 p=994 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 10:06:34,981 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:06:35,005 p=994 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-20 10:09:25,284 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:09:25,306 p=994 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 10:09:32,113 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:09:32,137 p=994 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-20 10:09:39,879 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:09:39,905 p=994 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-20 10:09:47,035 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:09:47,058 p=994 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 10:10:02,813 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:10:02,833 p=994 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-20 10:10:15,935 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:10:15,970 p=994 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-20 10:10:40,352 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:10:40,376 p=994 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-20 10:10:48,772 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:10:48,795 p=994 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-20 10:10:56,964 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:10:56,988 p=994 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-20 10:11:04,841 p=994 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:11:04,868 p=994 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-20 10:11:14,479 p=994 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 10:11:14,482 p=994 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-20 10:11:14,482 p=994 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=33   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-20 12:05:00,397 p=15330 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-20 12:05:00,439 p=15330 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-20 12:05:20,054 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:05:20,068 p=15330 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 12:05:20,090 p=15330 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:05:20,132 p=15330 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 12:05:49,327 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:05:49,391 p=15330 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-20 12:06:01,388 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:06:01,431 p=15330 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-20 12:06:19,259 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:06:19,294 p=15330 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-20 12:06:19,312 p=15330 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:06:19,331 p=15330 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-20 12:06:19,346 p=15330 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:06:19,391 p=15330 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-20 12:06:32,312 p=15330 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:06:32,352 p=15330 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-20 12:06:32,369 p=15330 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:06:32,389 p=15330 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-20 12:06:42,521 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:06:42,537 p=15330 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-20 12:06:42,555 p=15330 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:06:42,571 p=15330 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-20 12:06:52,076 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:06:52,118 p=15330 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-20 12:07:02,172 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:07:02,188 p=15330 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-20 12:07:11,224 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:07:11,240 p=15330 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-20 12:07:21,059 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:07:21,084 p=15330 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-20 12:07:30,939 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:07:30,977 p=15330 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-20 12:07:40,514 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:07:40,544 p=15330 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-20 12:07:49,846 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:07:49,885 p=15330 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-20 12:07:58,790 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:07:58,831 p=15330 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-20 12:08:08,782 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:08:08,819 p=15330 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-20 12:08:19,734 p=15330 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:08:19,793 p=15330 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-20 12:15:08,148 p=15330 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:15:08,164 p=15330 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-20 12:15:17,789 p=15330 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:15:17,829 p=15330 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 12:15:28,527 p=15330 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:15:28,568 p=15330 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 12:15:39,005 p=15330 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:15:39,027 p=15330 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 12:15:47,474 p=15330 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:15:47,492 p=15330 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 12:16:00,560 p=15330 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:16:00,605 p=15330 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 12:16:20,921 p=15330 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:16:20,939 p=15330 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-20 12:20:54,058 p=15330 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:20:54,076 p=15330 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 12:21:01,222 p=15330 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:21:01,240 p=15330 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-20 12:21:25,346 p=15330 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:21:25,384 p=15330 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-20 12:21:44,573 p=15330 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:21:44,612 p=15330 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 12:22:12,459 p=15330 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:22:12,477 p=15330 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-20 12:22:38,735 p=15330 u=aar |  fatal: [mdnssec.ri.mu.afrinic.net]: FAILED! => {"changed": false, "errors": [], "module_stderr": "", "module_stdout": "", "msg": "Error starting project Network db_replication_net declared as external, but could not be found. Please create the network manually using `docker network create db_replication_net` and try again."}
2019-08-20 12:22:38,737 p=15330 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-20 12:22:38,737 p=15330 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=28   changed=13   unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2019-08-20 12:23:20,736 p=16637 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-20 12:23:20,787 p=16637 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 12:23:20,829 p=16637 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:23:20,860 p=16637 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 12:23:39,481 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:23:39,501 p=16637 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-20 12:23:52,769 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:23:52,787 p=16637 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-20 12:24:08,708 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:24:08,725 p=16637 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-20 12:24:08,745 p=16637 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:24:08,761 p=16637 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-20 12:24:08,779 p=16637 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:24:08,795 p=16637 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-20 12:24:21,738 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:24:21,760 p=16637 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-20 12:24:21,786 p=16637 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:24:21,806 p=16637 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-20 12:24:34,923 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:24:34,941 p=16637 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-20 12:24:34,960 p=16637 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:24:34,976 p=16637 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-20 12:24:48,779 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:24:48,798 p=16637 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-20 12:25:00,935 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:25:00,950 p=16637 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-20 12:25:10,059 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:25:10,101 p=16637 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-20 12:25:21,022 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:25:21,043 p=16637 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-20 12:25:44,679 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:25:44,695 p=16637 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-20 12:26:00,753 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:26:00,771 p=16637 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-20 12:26:12,405 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:26:12,423 p=16637 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-20 12:26:27,799 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:26:27,842 p=16637 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-20 12:26:42,321 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:26:42,339 p=16637 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-20 12:26:54,594 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:26:54,634 p=16637 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-20 12:33:03,009 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:33:03,028 p=16637 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-20 12:33:14,614 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:33:14,656 p=16637 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 12:33:26,148 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:33:26,163 p=16637 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 12:33:36,012 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:33:36,052 p=16637 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 12:33:45,175 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:33:45,217 p=16637 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 12:33:53,780 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:33:53,822 p=16637 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 12:34:08,545 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:34:08,585 p=16637 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-20 12:37:19,194 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:37:19,215 p=16637 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 12:37:28,398 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:37:28,431 p=16637 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-20 12:37:40,114 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:37:40,159 p=16637 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-20 12:37:54,929 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:37:54,947 p=16637 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 12:38:21,706 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:38:21,726 p=16637 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-20 12:38:33,150 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:38:33,186 p=16637 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-20 12:38:53,518 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:38:53,537 p=16637 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-20 12:39:19,963 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:39:19,981 p=16637 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-20 12:39:30,114 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:39:30,153 p=16637 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-20 12:39:40,969 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:39:41,007 p=16637 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-20 12:39:52,569 p=16637 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:39:52,609 p=16637 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-20 12:40:07,212 p=16637 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 12:40:07,219 p=16637 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-20 12:40:07,219 p=16637 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=15   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-20 14:00:40,182 p=19400 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-20 14:00:40,234 p=19400 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 14:00:40,255 p=19400 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:00:40,272 p=19400 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 14:01:02,794 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:01:02,813 p=19400 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-20 14:01:13,962 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:01:14,004 p=19400 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-20 14:01:26,510 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:01:26,526 p=19400 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-20 14:01:26,544 p=19400 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:01:26,560 p=19400 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-20 14:01:26,576 p=19400 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:01:26,591 p=19400 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-20 14:01:38,953 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:01:38,971 p=19400 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-20 14:01:38,990 p=19400 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:01:39,005 p=19400 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-20 14:01:49,249 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:01:49,267 p=19400 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-20 14:01:49,292 p=19400 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:01:49,308 p=19400 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-20 14:02:00,420 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:02:00,438 p=19400 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-20 14:02:13,611 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:02:13,631 p=19400 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-20 14:02:24,697 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:02:24,714 p=19400 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-20 14:02:35,851 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:02:35,884 p=19400 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-20 14:02:47,133 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:02:47,152 p=19400 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-20 14:02:56,737 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:02:56,773 p=19400 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-20 14:03:07,812 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:03:07,852 p=19400 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-20 14:03:21,904 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:03:21,923 p=19400 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-20 14:03:30,867 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:03:30,906 p=19400 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-20 14:03:40,070 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:03:40,109 p=19400 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-20 14:25:34,982 p=19400 u=aar |   [WARNING]: sftp transfer mechanism failed on [mdnssec.ri.mu.afrinic.net]. Use ANSIBLE_DEBUG=1 to see detailed information

2019-08-20 14:28:37,660 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:28:37,676 p=19400 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-20 14:28:44,733 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:28:44,774 p=19400 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 14:28:51,859 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:28:51,876 p=19400 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 14:28:58,978 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:28:59,019 p=19400 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 14:29:06,112 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:29:06,144 p=19400 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 14:29:13,669 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:29:13,712 p=19400 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 14:29:29,766 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:29:29,802 p=19400 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-20 14:32:24,514 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:32:24,532 p=19400 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 14:32:31,608 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:32:31,627 p=19400 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-20 14:32:38,706 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:32:38,746 p=19400 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-20 14:32:45,848 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:32:45,892 p=19400 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 14:33:01,650 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:33:01,666 p=19400 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-20 14:33:09,535 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:33:09,569 p=19400 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-20 14:33:35,524 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:33:35,558 p=19400 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-20 14:34:00,663 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:34:00,681 p=19400 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-20 14:34:09,343 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:34:09,364 p=19400 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-20 14:34:17,869 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:34:17,908 p=19400 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-20 14:34:26,101 p=19400 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:34:26,139 p=19400 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-20 14:34:34,667 p=19400 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:34:34,670 p=19400 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-20 14:34:34,670 p=19400 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-20 14:42:43,372 p=25955 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-20 14:42:43,427 p=25955 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 14:42:43,450 p=25955 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:42:43,471 p=25955 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 14:43:02,348 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:43:02,387 p=25955 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-20 14:43:11,758 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:43:11,795 p=25955 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-20 14:43:21,587 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:43:21,603 p=25955 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-20 14:43:21,618 p=25955 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:43:21,634 p=25955 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-20 14:43:21,650 p=25955 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:43:21,666 p=25955 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-20 14:43:32,553 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:43:32,569 p=25955 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-20 14:43:32,586 p=25955 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:43:32,603 p=25955 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-20 14:43:41,222 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:43:41,237 p=25955 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-20 14:43:41,252 p=25955 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:43:41,268 p=25955 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-20 14:43:49,829 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:43:49,845 p=25955 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-20 14:43:57,751 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:43:57,769 p=25955 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-20 14:44:05,794 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:44:05,833 p=25955 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-20 14:44:13,715 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:44:13,730 p=25955 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-20 14:44:22,082 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:44:22,098 p=25955 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-20 14:44:30,331 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:44:30,346 p=25955 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-20 14:44:38,507 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:44:38,546 p=25955 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-20 14:44:46,569 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:44:46,609 p=25955 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-20 14:44:54,195 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:44:54,230 p=25955 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-20 14:45:02,596 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:45:02,631 p=25955 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-20 14:49:28,717 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:49:28,758 p=25955 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-20 14:49:35,834 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:49:35,871 p=25955 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 14:49:43,000 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:49:43,016 p=25955 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 14:49:50,089 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:49:50,112 p=25955 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 14:49:57,225 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:49:57,255 p=25955 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 14:50:04,332 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:50:04,348 p=25955 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 14:50:20,044 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:50:20,061 p=25955 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-20 14:53:15,171 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:53:15,189 p=25955 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 14:53:22,276 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:53:22,322 p=25955 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-20 14:53:29,379 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:53:29,423 p=25955 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-20 14:53:36,519 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:53:36,564 p=25955 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 14:53:52,260 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:53:52,279 p=25955 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-20 14:53:59,931 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:53:59,957 p=25955 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-20 14:54:25,952 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:54:25,975 p=25955 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-20 14:54:49,382 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:54:49,425 p=25955 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-20 14:54:57,672 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:54:57,687 p=25955 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-20 14:55:05,540 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:55:05,561 p=25955 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-20 14:55:13,377 p=25955 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:55:13,396 p=25955 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-20 14:55:21,641 p=25955 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 14:55:21,643 p=25955 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-20 14:55:21,644 p=25955 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-20 15:20:27,440 p=27956 u=aar |  PLAY [Install docker and deploy swarm cuslter] ****************************************************************************************************************************************************************
2019-08-20 15:20:27,495 p=27956 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ******************************************************************************************************************************************************
2019-08-20 15:20:27,517 p=27956 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:20:27,537 p=27956 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ******************************************************************************************************************************************************
2019-08-20 15:20:50,442 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:20:50,459 p=27956 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-20 15:21:00,230 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:21:00,268 p=27956 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] ************************************************************************************
2019-08-20 15:21:10,611 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:21:10,648 p=27956 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *********************************************************
2019-08-20 15:21:10,665 p=27956 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:21:10,680 p=27956 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] ************************************************************************************************
2019-08-20 15:21:10,696 p=27956 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:21:10,712 p=27956 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ***************************************************************************
2019-08-20 15:21:21,821 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:21:21,838 p=27956 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] ****************************************************
2019-08-20 15:21:21,854 p=27956 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:21:21,869 p=27956 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] *************************************************************************************************************************************
2019-08-20 15:21:30,593 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:21:30,614 p=27956 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] **********************************************************************************************************************************************
2019-08-20 15:21:30,634 p=27956 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:21:30,656 p=27956 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *********************************************************************************************************************************
2019-08-20 15:21:40,470 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:21:40,486 p=27956 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] *************************************************************************************************************************************
2019-08-20 15:21:48,522 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:21:48,562 p=27956 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] *************************************************************************************************************
2019-08-20 15:21:56,665 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:21:56,680 p=27956 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] *****************************************************************************************************************************************
2019-08-20 15:22:05,567 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:22:05,605 p=27956 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] ****************************************************************************************************************************
2019-08-20 15:22:13,975 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:22:14,014 p=27956 u=aar |  TASK [swarm : Init swarm state=present] ***********************************************************************************************************************************************************************
2019-08-20 15:22:22,374 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:22:22,408 p=27956 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-20 15:22:30,600 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:22:30,618 p=27956 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ***************************************************************************************************************
2019-08-20 15:22:38,681 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:22:38,697 p=27956 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] ***********************************************************************************
2019-08-20 15:22:46,312 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:22:46,328 p=27956 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-20 15:22:54,750 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:22:54,791 p=27956 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *****************************************
2019-08-20 15:27:21,559 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:27:21,578 p=27956 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *****************************************************
2019-08-20 15:27:28,715 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:27:28,753 p=27956 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 15:27:35,843 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:27:35,881 p=27956 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 15:27:42,998 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:27:43,040 p=27956 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 15:27:50,157 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:27:50,172 p=27956 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 15:27:57,309 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:27:57,346 p=27956 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 15:28:13,198 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:28:13,213 p=27956 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************************************
2019-08-20 15:31:07,995 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:31:08,036 p=27956 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **************
2019-08-20 15:31:15,207 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:31:15,251 p=27956 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **************************
2019-08-20 15:31:22,333 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:31:22,370 p=27956 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *****************************
2019-08-20 15:31:29,503 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:31:29,534 p=27956 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 15:31:45,276 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:31:45,293 p=27956 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *********************************************************************
2019-08-20 15:31:53,254 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:31:53,279 p=27956 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *******************************************************************************
2019-08-20 15:32:25,468 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:32:25,484 p=27956 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] *************************************************************************
2019-08-20 15:32:48,003 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:32:48,042 p=27956 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-20 15:32:56,414 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:32:56,442 p=27956 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-20 15:33:04,331 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:33:04,367 p=27956 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-20 15:33:12,266 p=27956 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:33:12,286 p=27956 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *********************************************************************
2019-08-20 15:33:20,660 p=27956 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:33:20,664 p=27956 u=aar |  PLAY RECAP ****************************************************************************************************************************************************************************************************
2019-08-20 15:33:20,665 p=27956 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-20 15:45:21,448 p=30263 u=aar |  PLAY [Install docker and deploy swarm cuslter] ****************************************************************************************************************************************************************
2019-08-20 15:45:21,518 p=30263 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ******************************************************************************************************************************************************
2019-08-20 15:45:21,540 p=30263 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:45:21,564 p=30263 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ******************************************************************************************************************************************************
2019-08-20 15:45:57,499 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:45:57,519 p=30263 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-20 15:46:06,761 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:46:06,786 p=30263 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] ************************************************************************************
2019-08-20 15:46:19,970 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:46:19,992 p=30263 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *********************************************************
2019-08-20 15:46:20,017 p=30263 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:46:20,042 p=30263 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] ************************************************************************************************
2019-08-20 15:46:20,066 p=30263 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:46:20,093 p=30263 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ***************************************************************************
2019-08-20 15:46:29,920 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:46:29,943 p=30263 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] ****************************************************
2019-08-20 15:46:29,965 p=30263 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:46:29,989 p=30263 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] *************************************************************************************************************************************
2019-08-20 15:46:38,939 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:46:38,959 p=30263 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] **********************************************************************************************************************************************
2019-08-20 15:46:38,983 p=30263 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:46:39,004 p=30263 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *********************************************************************************************************************************
2019-08-20 15:46:48,753 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:46:48,776 p=30263 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] *************************************************************************************************************************************
2019-08-20 15:46:57,397 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:46:57,427 p=30263 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] *************************************************************************************************************
2019-08-20 15:47:05,526 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:47:05,580 p=30263 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] *****************************************************************************************************************************************
2019-08-20 15:47:13,878 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:47:13,900 p=30263 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] ****************************************************************************************************************************
2019-08-20 15:47:22,392 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:47:22,429 p=30263 u=aar |  TASK [swarm : Init swarm state=present] ***********************************************************************************************************************************************************************
2019-08-20 15:47:30,880 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:47:30,902 p=30263 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-20 15:47:38,877 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:47:38,902 p=30263 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ***************************************************************************************************************
2019-08-20 15:47:46,713 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:47:46,736 p=30263 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] ***********************************************************************************
2019-08-20 15:47:54,465 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:47:54,490 p=30263 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-20 15:48:02,617 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:48:02,643 p=30263 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *****************************************
2019-08-20 15:52:20,678 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:52:20,703 p=30263 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *****************************************************
2019-08-20 15:52:27,832 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:52:27,865 p=30263 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 15:52:35,002 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:52:35,024 p=30263 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 15:52:41,833 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:52:41,856 p=30263 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 15:52:48,672 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:52:48,693 p=30263 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 15:52:55,803 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:52:55,826 p=30263 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 15:53:10,924 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:53:10,945 p=30263 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************************************
2019-08-20 15:55:59,728 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:55:59,776 p=30263 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **************
2019-08-20 15:56:06,574 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:56:06,597 p=30263 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **************************
2019-08-20 15:56:13,415 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:56:13,437 p=30263 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *****************************
2019-08-20 15:56:20,256 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:56:20,283 p=30263 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 15:56:35,437 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:56:35,461 p=30263 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *********************************************************************
2019-08-20 15:56:42,872 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:56:42,895 p=30263 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *******************************************************************************
2019-08-20 15:57:14,986 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:57:15,008 p=30263 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] *************************************************************************
2019-08-20 15:57:37,179 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:57:37,200 p=30263 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-20 15:57:45,307 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:57:45,327 p=30263 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-20 15:57:52,901 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:57:52,935 p=30263 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-20 15:58:00,526 p=30263 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:58:00,548 p=30263 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *********************************************************************
2019-08-20 15:58:08,694 p=30263 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 15:58:08,697 p=30263 u=aar |  PLAY RECAP ****************************************************************************************************************************************************************************************************
2019-08-20 15:58:08,697 p=30263 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-20 16:12:45,874 p=32274 u=aar |  PLAY [Install docker and deploy swarm cuslter] ****************************************************************************************************************************************************************
2019-08-20 16:12:45,952 p=32274 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ******************************************************************************************************************************************************
2019-08-20 16:12:45,974 p=32274 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:12:46,001 p=32274 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ******************************************************************************************************************************************************
2019-08-20 16:12:48,178 p=32274 u=aar |  fatal: [mdnssec.ri.mu.afrinic.net]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: Could not resolve hostname mdnssec.ri.mu.afrinic.net: Name or service not known", "unreachable": true}
2019-08-20 16:12:48,180 p=32274 u=aar |  PLAY RECAP ****************************************************************************************************************************************************************************************************
2019-08-20 16:12:48,180 p=32274 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=0    changed=0    unreachable=1    failed=0    skipped=1    rescued=0    ignored=0   
2019-08-20 16:12:56,230 p=32337 u=aar |  PLAY [Install docker and deploy swarm cuslter] ****************************************************************************************************************************************************************
2019-08-20 16:12:56,307 p=32337 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ******************************************************************************************************************************************************
2019-08-20 16:12:56,331 p=32337 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:12:56,356 p=32337 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ******************************************************************************************************************************************************
2019-08-20 16:13:17,265 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:13:17,290 p=32337 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-20 16:13:26,487 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:13:26,513 p=32337 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] ************************************************************************************
2019-08-20 16:13:36,349 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:13:36,371 p=32337 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *********************************************************
2019-08-20 16:13:36,393 p=32337 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:13:36,417 p=32337 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] ************************************************************************************************
2019-08-20 16:13:36,441 p=32337 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:13:36,468 p=32337 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ***************************************************************************
2019-08-20 16:13:47,259 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:13:47,282 p=32337 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] ****************************************************
2019-08-20 16:13:47,309 p=32337 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:13:47,332 p=32337 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] *************************************************************************************************************************************
2019-08-20 16:13:55,710 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:13:55,736 p=32337 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] **********************************************************************************************************************************************
2019-08-20 16:13:55,756 p=32337 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:13:55,784 p=32337 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *********************************************************************************************************************************
2019-08-20 16:14:04,258 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:14:04,281 p=32337 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] *************************************************************************************************************************************
2019-08-20 16:14:11,986 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:14:12,010 p=32337 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] *************************************************************************************************************
2019-08-20 16:14:19,724 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:14:19,747 p=32337 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] *****************************************************************************************************************************************
2019-08-20 16:14:27,423 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:14:27,447 p=32337 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] ****************************************************************************************************************************
2019-08-20 16:14:35,624 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:14:35,646 p=32337 u=aar |  TASK [swarm : Init swarm state=present] ***********************************************************************************************************************************************************************
2019-08-20 16:14:43,774 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:14:43,796 p=32337 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-20 16:14:51,778 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:14:51,802 p=32337 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ***************************************************************************************************************
2019-08-20 16:14:59,655 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:14:59,675 p=32337 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] ***********************************************************************************
2019-08-20 16:15:07,143 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:15:07,167 p=32337 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-20 16:15:15,021 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:15:15,044 p=32337 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *****************************************
2019-08-20 16:19:31,325 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:19:31,348 p=32337 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *****************************************************
2019-08-20 16:19:38,154 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:19:38,176 p=32337 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 16:19:44,977 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:19:45,003 p=32337 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 16:19:51,819 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:19:51,841 p=32337 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 16:19:58,717 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:19:58,740 p=32337 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 16:20:05,543 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:20:05,565 p=32337 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 16:20:20,677 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:20:20,696 p=32337 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************************************
2019-08-20 16:23:08,477 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:23:08,499 p=32337 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **************
2019-08-20 16:23:15,301 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:23:15,325 p=32337 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **************************
2019-08-20 16:23:22,130 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:23:22,154 p=32337 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *****************************
2019-08-20 16:23:28,963 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:23:28,985 p=32337 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 16:23:44,100 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:23:44,119 p=32337 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *********************************************************************
2019-08-20 16:23:51,842 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:23:51,868 p=32337 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *******************************************************************************
2019-08-20 16:24:24,292 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:24:24,319 p=32337 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] *************************************************************************
2019-08-20 16:24:48,123 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:24:48,148 p=32337 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-20 16:24:56,244 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:24:56,268 p=32337 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-20 16:25:03,867 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:25:03,890 p=32337 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-20 16:25:11,452 p=32337 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:25:11,475 p=32337 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *********************************************************************
2019-08-20 16:25:19,325 p=32337 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:25:19,327 p=32337 u=aar |  PLAY RECAP ****************************************************************************************************************************************************************************************************
2019-08-20 16:25:19,327 p=32337 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-20 16:35:00,068 p=1609 u=aar |  PLAY [Install docker and deploy swarm cuslter] ****************************************************************************************************************************************************************
2019-08-20 16:35:00,143 p=1609 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ******************************************************************************************************************************************************
2019-08-20 16:35:00,168 p=1609 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:35:00,197 p=1609 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ******************************************************************************************************************************************************
2019-08-20 16:35:20,227 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:35:20,279 p=1609 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-20 16:35:29,386 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:35:29,408 p=1609 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] ************************************************************************************
2019-08-20 16:35:41,299 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:35:41,324 p=1609 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *********************************************************
2019-08-20 16:35:41,349 p=1609 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:35:41,374 p=1609 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] ************************************************************************************************
2019-08-20 16:35:41,394 p=1609 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:35:41,445 p=1609 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ***************************************************************************
2019-08-20 16:35:52,139 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:35:52,159 p=1609 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] ****************************************************
2019-08-20 16:35:52,184 p=1609 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:35:52,207 p=1609 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] *************************************************************************************************************************************
2019-08-20 16:36:00,627 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:36:00,648 p=1609 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] **********************************************************************************************************************************************
2019-08-20 16:36:00,673 p=1609 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:36:00,698 p=1609 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *********************************************************************************************************************************
2019-08-20 16:36:09,219 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:36:09,241 p=1609 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] *************************************************************************************************************************************
2019-08-20 16:36:16,904 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:36:16,931 p=1609 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] *************************************************************************************************************
2019-08-20 16:36:24,707 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:36:24,730 p=1609 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] *****************************************************************************************************************************************
2019-08-20 16:36:32,708 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:36:32,731 p=1609 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] ****************************************************************************************************************************
2019-08-20 16:36:40,871 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:36:40,892 p=1609 u=aar |  TASK [swarm : Init swarm state=present] ***********************************************************************************************************************************************************************
2019-08-20 16:36:49,091 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:36:49,114 p=1609 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-20 16:36:57,117 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:36:57,142 p=1609 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ***************************************************************************************************************
2019-08-20 16:37:05,001 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:37:05,024 p=1609 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] ***********************************************************************************
2019-08-20 16:37:12,434 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:37:12,459 p=1609 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-20 16:37:20,622 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:37:20,648 p=1609 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *****************************************
2019-08-20 16:41:36,710 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:41:36,736 p=1609 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *****************************************************
2019-08-20 16:41:43,530 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:41:43,553 p=1609 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 16:41:50,355 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:41:50,376 p=1609 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 16:41:57,202 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:41:57,227 p=1609 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 16:42:04,044 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:42:04,067 p=1609 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 16:42:10,890 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:42:10,912 p=1609 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 16:42:26,004 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:42:26,025 p=1609 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************************************
2019-08-20 16:45:13,909 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:45:13,930 p=1609 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **************
2019-08-20 16:45:20,736 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:45:20,761 p=1609 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **************************
2019-08-20 16:45:27,541 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:45:27,564 p=1609 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *****************************
2019-08-20 16:45:34,356 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:45:34,380 p=1609 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 16:45:49,473 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:45:49,497 p=1609 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *********************************************************************
2019-08-20 16:45:57,210 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:45:57,236 p=1609 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *******************************************************************************
2019-08-20 16:46:22,519 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:46:22,543 p=1609 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] *************************************************************************
2019-08-20 16:46:46,100 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:46:46,123 p=1609 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-20 16:46:54,263 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:46:54,290 p=1609 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-20 16:47:01,877 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:47:01,906 p=1609 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-20 16:47:09,457 p=1609 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:47:09,479 p=1609 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *********************************************************************
2019-08-20 16:47:17,327 p=1609 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 16:47:17,329 p=1609 u=aar |  PLAY RECAP ****************************************************************************************************************************************************************************************************
2019-08-20 16:47:17,330 p=1609 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-20 19:04:20,613 p=22258 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-20 19:04:20,679 p=22258 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-20 19:04:51,873 p=22258 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:04:51,899 p=22258 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 19:04:51,919 p=22258 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:04:51,935 p=22258 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 19:05:17,384 p=22258 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:05:17,418 p=22258 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-20 19:05:31,041 p=22258 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:05:31,063 p=22258 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-20 19:05:44,058 p=22258 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:05:44,078 p=22258 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-20 19:05:44,102 p=22258 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:05:44,117 p=22258 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-20 19:05:44,141 p=22258 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:05:44,183 p=22258 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-20 19:05:56,824 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:05:56,846 p=22258 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-20 19:05:56,868 p=22258 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:05:56,887 p=22258 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-20 19:06:09,252 p=22258 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:06:09,280 p=22258 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-20 19:06:09,303 p=22258 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:06:09,331 p=22258 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-20 19:06:28,980 p=22258 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:06:29,011 p=22258 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-20 19:06:41,914 p=22258 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:06:41,941 p=22258 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-20 19:06:53,166 p=22258 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:06:53,185 p=22258 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-20 19:07:05,936 p=22258 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:07:05,970 p=22258 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-20 19:07:17,483 p=22258 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:07:17,500 p=22258 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-20 19:07:29,123 p=22258 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:07:29,151 p=22258 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-20 19:07:40,444 p=22258 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:07:40,472 p=22258 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-20 19:07:51,004 p=22258 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:07:51,023 p=22258 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-20 19:08:01,493 p=22258 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:08:01,529 p=22258 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-20 19:08:13,744 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:08:13,796 p=22258 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-20 19:14:17,568 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:14:17,601 p=22258 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-20 19:14:27,471 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:14:27,502 p=22258 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 19:14:37,789 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:14:37,807 p=22258 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 19:14:47,484 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:14:47,500 p=22258 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 19:14:56,826 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:14:56,853 p=22258 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 19:15:07,180 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:15:07,221 p=22258 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 19:15:28,903 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:15:28,932 p=22258 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-20 19:19:40,177 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:19:40,194 p=22258 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 19:19:49,388 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:19:49,427 p=22258 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-20 19:20:03,437 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:20:03,467 p=22258 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-20 19:20:14,401 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:20:14,435 p=22258 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 19:20:36,394 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:20:36,427 p=22258 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-20 19:20:48,079 p=22258 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:20:48,108 p=22258 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-20 19:36:19,296 p=22258 u=aar |   [WARNING]: Module invocation had junk after the JSON data:  ---> Running in 2ed5a26c9a04 Removing intermediate container 2ed5a26c9a04  ---> e8452a6f9411 [2K   Successfully built e8452a6f9411
Successfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0  {"services": {"api": {"stack_api": {"cmd": [], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "api", "com.docker.compose.config-hash": "cab73b9eb96f6aa39e428eeeefcdd4ca4ec665d1c6dfa0460737b3b074e8ccea", "com.docker.compose.project": "management",
"com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress":
"02:42:ac:1f:00:03", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 16, "globalIPv6": "", "IPAddress": "172.31.0.3", "aliases": ["920337e727bf", "api"]}, "db_replication_net":
{"macAddress": "02:42:0a:00:45:05", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.69.5", "aliases": ["920337e727bf", "api"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0"}}, "mysql_replication_db": {"stack_api_replication_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "mysql_replication_db", "com.docker.compose.config-hash": "7b91df0ccd396921c7cec59184e6ea742a36a04c44e808d7c9e6728edcd02dd3", "com.docker.compose.project":
"management", "com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"db_replication_net": {"macAddress":
"02:42:0a:00:45:04", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.69.4", "aliases": ["mysql_replication_db", "3b35849b4449"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0"}}, "mysql_db": {"stack_api_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "mysql_db", "com.docker.compose.config-hash": "160019e29ce36d6d936e7f442965dfd163985e45221cb926256006220f47a57c", "com.docker.compose.project": "management",
"com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress":
"02:42:ac:1f:00:02", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 16, "globalIPv6": "", "IPAddress": "172.31.0.2", "aliases": ["3b5b735c328a", "mysql_db"]}, "db_replication_net":
{"macAddress": "02:42:0a:00:45:02", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.69.2", "aliases": ["3b5b735c328a", "mysql_db"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0"}}}, "invocation": {"module_args": {"project_src": "/home/alfred/management", "hostname_check": false, "recreate": "smart",
"docker_host": "unix://var/run/docker.sock", "remove_images": null, "client_key": null, "scale": null, "nocache": false, "remove_volumes": false, "state": "present", "build": true,
"client_cert": null, "api_version": "auto", "files": null, "project_name": null, "ca_cert": null, "definition": null, "tls_hostname": "localhost", "dependencies": true, "services": null,
"tls": false, "pull": false, "remove_orphans": false, "restarted": false, "ssl_version": null, "stopped": false, "timeout": 10, "debug": false, "validate_certs": false}}, "changed": true,
"ansible_facts": {"api": {"stack_api": {"cmd": [], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "api", "com.docker.compose.config-hash":
"cab73b9eb96f6aa39e428eeeefcdd4ca4ec665d1c6dfa0460737b3b074e8ccea", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False",
"com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress": "02:42:ac:1f:00:03", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 16,
"globalIPv6": "", "IPAddress": "172.31.0.3", "aliases": ["920337e727bf", "api"]}, "db_replication_net": {"macAddress": "02:42:0a:00:45:05", "globalIPv6PrefixLen": 0, "links": null,
"IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.69.5", "aliases": ["920337e727bf", "api"]}}, "image": "registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0"}},
"mysql_replication_db": {"stack_api_replication_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "mysql_replication_db",
"com.docker.compose.config-hash": "7b91df0ccd396921c7cec59184e6ea742a36a04c44e808d7c9e6728edcd02dd3", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1",
"com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"db_replication_net": {"macAddress": "02:42:0a:00:45:04", "globalIPv6PrefixLen": 0, "links":
null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.69.4", "aliases": ["mysql_replication_db", "3b35849b4449"]}}, "image": "registry.mdnssec.ri.mu.afrinic.net:5000/mysql-
slave57:1.0"}}, "mysql_db": {"stack_api_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "mysql_db",
"com.docker.compose.config-hash": "160019e29ce36d6d936e7f442965dfd163985e45221cb926256006220f47a57c", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1",
"com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress": "02:42:ac:1f:00:02", "globalIPv6PrefixLen": 0,
"links": null, "IPPrefixLen": 16, "globalIPv6": "", "IPAddress": "172.31.0.2", "aliases": ["3b5b735c328a", "mysql_db"]}, "db_replication_net": {"macAddress": "02:42:0a:00:45:02",
"globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.69.2", "aliases": ["3b5b735c328a", "mysql_db"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0"}}}}

2019-08-20 19:39:18,987 p=22258 u=aar |  fatal: [mdnssec.ri.mu.afrinic.net]: FAILED! => {"changed": false, "module_stderr": "Shared connection to mdnssec.ri.mu.afrinic.net closed.\r\n", "module_stdout": "No handlers could be found for logger \"compose.config.config\"\r\nStep 1/12 : FROM oraclelinux:7-slim\r\n ---> 874477adb545\r\nStep 2/12 : ARG MYSQL_SERVER_PACKAGE=mysql-community-server-minimal-5.7.27\r\n ---> Running in 0aa9d19b990e\r\nRemoving intermediate container 0aa9d19b990e\r\n ---> 781ddbd677cf\r\nStep 3/12 : ARG MYSQL_SHELL_PACKAGE=mysql-shell-8.0.17\r\n ---> Running in 3f2a75ea8e94\r\nRemoving intermediate container 3f2a75ea8e94\r\n ---> c1345ce9293d\r\nStep 4/12 : RUN yum install -y https://repo.mysql.com/mysql-community-minimal-release-el7.rpm       https://repo.mysql.com/mysql-community-release-el7.rpm   && yum-config-manager --enable mysql57-server-minimal   && yum install -y       $MYSQL_SERVER_PACKAGE       $MYSQL_SHELL_PACKAGE       libpwquality   && yum clean all   && mkdir /docker-entrypoint-initdb.d\r\n ---> Running in d051281ec90f\r\nLoaded plugins: ovl\r\nExamining /var/tmp/yum-root-ka9g18/mysql-community-minimal-release-el7.rpm: mysql-community-minimal-release-el7-1.noarch\r\nMarking /var/tmp/yum-root-ka9g18/mysql-community-minimal-release-el7.rpm to be installed\r\nExamining /var/tmp/yum-root-ka9g18/mysql-community-release-el7.rpm: mysql80-community-release-el7-3.noarch\r\nMarking /var/tmp/yum-root-ka9g18/mysql-community-release-el7.rpm to be installed\r\nResolving Dependencies\r\n--> Running transaction check\r\n---> Package mysql-community-minimal-release.noarch 0:el7-1 will be installed\r\n---> Package mysql80-community-release.noarch 0:el7-3 will be installed\r\n--> Finished Dependency Resolution\r\n\r\nDependencies Resolved\r\n\r\n================================================================================\r\n Package                Arch   Version\r\n                                     Repository                            Size\r\n================================================================================\r\nInstalling:\r\n mysql-community-minimal-release\r\n                        noarch el7-1 /mysql-community-minimal-release-el7  29 k\r\n mysql80-community-release\r\n                        noarch el7-3 /mysql-community-release-el7          31 k\r\n\r\nTransaction Summary\r\n================================================================================\r\nInstall  2 Packages\r\n\r\nTotal size: 60 k\r\nInstalled size: 60 k\r\nDownloading packages:\r\nRunning transaction check\r\nRunning transaction test\r\nTransaction test succeeded\r\nRunning transaction\r\n  Installing : mysql80-community-release-el7-3.noarch                       1/2 \r\n  Installing : mysql-community-minimal-release-el7-1.noarch                 2/2 \r\n  Verifying  : mysql-community-minimal-release-el7-1.noarch                 1/2 \r\n  Verifying  : mysql80-community-release-el7-3.noarch                       2/2 \r\n\r\nInstalled:\r\n  mysql-community-minimal-release.noarch 0:el7-1                                \r\n  mysql80-community-release.noarch 0:el7-3                                      \r\n\r\nComplete!\r\nLoaded plugins: ovl\r\n========================= repo: mysql57-server-minimal =========================\r\n[mysql57-server-minimal]\r\nasync = True\r\nbandwidth = 0\r\nbase_persistdir = /var/lib/yum/repos/x86_64/7Server\r\nbaseurl = http://repo.mysql.com/yum/mysql-5.7-community/docker/x86_64/\r\ncache = 0\r\ncachedir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal\r\ncheck_config_file_age = True\r\ncompare_providers_priority = 80\r\ncost = 1000\r\ndeltarpm_metadata_percentage = 100\r\ndeltarpm_percentage = \r\nenabled = 1\r\nenablegroups = True\r\nexclude = \r\nfailovermethod = priority\r\nftp_disable_epsv = False\r\ngpgcadir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal/gpgcadir\r\ngpgcakey = \r\ngpgcheck = True\r\ngpgdir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal/gpgdir\r\ngpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\nhdrdir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal/headers\r\nhttp_caching = all\r\nincludepkgs = \r\nip_resolve = \r\nkeepalive = True\r\nkeepcache = False\r\nmddownloadpolicy = sqlite\r\nmdpolicy = group:small\r\nmediaid = \r\nmetadata_expire = 21600\r\nmetadata_expire_filter = read-only:present\r\nmetalink = \r\nminrate = 0\r\nmirrorlist = \r\nmirrorlist_expire = 86400\r\nname = MySQL 5.7 Server Minimal\r\nold_base_cache_dir = \r\npassword = \r\npersistdir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal\r\npkgdir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal/packages\r\nproxy = False\r\nproxy_dict = \r\nproxy_password = \r\nproxy_username = \r\nrepo_gpgcheck = False\r\nretries = 10\r\nskip_if_unavailable = False\r\nssl_check_cert_permissions = True\r\nsslcacert = \r\nsslclientcert = \r\nsslclientkey = \r\nsslverify = True\r\nthrottle = 0\r\ntimeout = 30.0\r\nui_id = mysql57-server-minimal/x86_64\r\nui_repoid_vars = releasever,\r\n   basearch\r\nusername = \r\n\r\nLoaded plugins: ovl\r\nResolving Dependencies\r\n--> Running transaction check\r\n---> Package libpwquality.x86_64 0:1.2.3-5.el7 will be installed\r\n--> Processing Dependency: cracklib-dicts >= 2.8 for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_EXTENSION_1.1.1)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_EXTENSION_1.0)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_1.0)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: pam(x86-64) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0()(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libcrack.so.2()(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n---> Package mysql-community-server-minimal.x86_64 0:5.7.27-1.el7 will be installed\r\n--> Processing Dependency: libnuma.so.1(libnuma_1.2)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libnuma.so.1(libnuma_1.1)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1(LIBAIO_0.4)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1(LIBAIO_0.1)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libnuma.so.1()(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1()(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n---> Package mysql-shell.x86_64 0:8.0.17-1.el7 will be installed\r\n--> Running transaction check\r\n---> Package cracklib.x86_64 0:2.9.0-11.el7 will be installed\r\n--> Processing Dependency: gzip for package: cracklib-2.9.0-11.el7.x86_64\r\n---> Package cracklib-dicts.x86_64 0:2.9.0-11.el7 will be installed\r\n---> Package libaio.x86_64 0:0.3.109-13.el7 will be installed\r\n---> Package numactl-libs.x86_64 0:2.0.12-3.el7 will be installed\r\n---> Package pam.x86_64 0:1.1.8-22.el7 will be installed\r\n--> Running transaction check\r\n---> Package gzip.x86_64 0:1.5-10.el7 will be installed\r\n--> Finished Dependency Resolution\r\n\r\nDependencies Resolved\r\n\r\n================================================================================\r\n Package                     Arch   Version        Repository              Size\r\n================================================================================\r\nInstalling:\r\n libpwquality                x86_64 1.2.3-5.el7    ol7_latest              84 k\r\n mysql-community-server-minimal\r\n                             x86_64 5.7.27-1.el7   mysql57-server-minimal  15 M\r\n mysql-shell                 x86_64 8.0.17-1.el7   mysql-tools-community   15 M\r\nInstalling for dependencies:\r\n cracklib                    x86_64 2.9.0-11.el7   ol7_latest              79 k\r\n cracklib-dicts              x86_64 2.9.0-11.el7   ol7_latest             3.6 M\r\n gzip                        x86_64 1.5-10.el7     ol7_latest             129 k\r\n libaio                      x86_64 0.3.109-13.el7 ol7_latest              24 k\r\n numactl-libs                x86_64 2.0.12-3.el7   ol7_latest              29 k\r\n pam                         x86_64 1.1.8-22.el7   ol7_latest             719 k\r\n\r\nTransaction Summary\r\n================================================================================\r\nInstall  3 Packages (+6 Dependent packages)\r\n\r\nTotal download size: 34 M\r\nInstalled size: 130 M\r\nDownloading packages:\r\n\u001b[91mwarning: /var/cache/yum/x86_64/7Server/mysql57-server-minimal/packages/mysql-community-server-minimal-5.7.27-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEY\r\n\u001b[0mPublic key for mysql-community-server-minimal-5.7.27-1.el7.x86_64.rpm is not installed\r\nPublic key for mysql-shell-8.0.17-1.el7.x86_64.rpm is not installed\r\n--------------------------------------------------------------------------------\r\nTotal                                              1.1 MB/s |  34 MB  00:31     \r\nRetrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\n\u001b[91mImporting GPG key 0x5072E1F5:\r\n Userid     : \"MySQL Release Engineering <mysql-build@oss.oracle.com>\"\r\n Fingerprint: a4a9 4068 76fc bd3c 4567 70c8 8c71 8d3b 5072 e1f5\r\n Package    : mysql80-community-release-el7-3.noarch (installed)\r\n From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\n\u001b[0mRunning transaction check\r\nRunning transaction test\r\nTransaction test succeeded\r\nRunning transaction\r\n  Installing : libaio-0.3.109-13.el7.x86_64                                 1/9 \r\n  Installing : numactl-libs-2.0.12-3.el7.x86_64                             2/9 \r\n  Installing : gzip-1.5-10.el7.x86_64                                       3/9 \r\n  Installing : cracklib-2.9.0-11.el7.x86_64                                 4/9 \r\n  Installing : cracklib-dicts-2.9.0-11.el7.x86_64                           5/9 \r\n  Installing : pam-1.1.8-22.el7.x86_64                                      6/9 \r\n  Installing : libpwquality-1.2.3-5.el7.x86_64                              7/9 \r\n  Installing : mysql-community-server-minimal-5.7.27-1.el7.x86_64           8/9 \r\n  Installing : mysql-shell-8.0.17-1.el7.x86_64                              9/9 \r\n  Verifying  : cracklib-dicts-2.9.0-11.el7.x86_64                           1/9 \r\n  Verifying  : mysql-community-server-minimal-5.7.27-1.el7.x86_64           2/9 \r\n  Verifying  : pam-1.1.8-22.el7.x86_64                                      3/9 \r\n  Verifying  : gzip-1.5-10.el7.x86_64                                       4/9 \r\n  Verifying  : numactl-libs-2.0.12-3.el7.x86_64                             5/9 \r\n  Verifying  : cracklib-2.9.0-11.el7.x86_64                                 6/9 \r\n  Verifying  : mysql-shell-8.0.17-1.el7.x86_64                              7/9 \r\n  Verifying  : libpwquality-1.2.3-5.el7.x86_64                              8/9 \r\n  Verifying  : libaio-0.3.109-13.el7.x86_64                                 9/9 \r\n\r\nInstalled:\r\n  libpwquality.x86_64 0:1.2.3-5.el7                                             \r\n  mysql-community-server-minimal.x86_64 0:5.7.27-1.el7                          \r\n  mysql-shell.x86_64 0:8.0.17-1.el7                                             \r\n\r\nDependency Installed:\r\n  cracklib.x86_64 0:2.9.0-11.el7        cracklib-dicts.x86_64 0:2.9.0-11.el7   \r\n  gzip.x86_64 0:1.5-10.el7              libaio.x86_64 0:0.3.109-13.el7         \r\n  numactl-libs.x86_64 0:2.0.12-3.el7    pam.x86_64 0:1.1.8-22.el7              \r\n\r\nComplete!\r\nLoaded plugins: ovl\r\nCleaning repos: mysql-connectors-community mysql-tools-community\r\n              : mysql57-server-minimal mysql80-community ol7_UEKR5\r\n              : ol7_developer_EPEL ol7_latest\r\nRemoving intermediate container d051281ec90f\r\n ---> e5f7a3ed8974\r\nStep 5/12 : VOLUME /var/lib/mysql\r\n ---> Running in f0cd156f28ab\r\nRemoving intermediate container f0cd156f28ab\r\n ---> 9040a4d505e4\r\nStep 6/12 : COPY docker-entrypoint.sh /entrypoint.sh\r\n ---> 051204685644\r\nStep 7/12 : COPY healthcheck.sh /healthcheck.sh\r\n ---> 9374402e414b\r\nStep 8/12 : COPY my.cnf /etc/my.cnf\r\n ---> fd4a0e440f41\r\nStep 9/12 : ENTRYPOINT [\"/entrypoint.sh\"]\r\n ---> Running in 019736cd381a\r\nRemoving intermediate container 019736cd381a\r\n ---> 7cf2db76f1d7\r\nStep 10/12 : HEALTHCHECK CMD /healthcheck.sh\r\n ---> Running in be5d773738d1\r\nRemoving intermediate container be5d773738d1\r\n ---> 5249744812f5\r\nStep 11/12 : EXPOSE 3306 33060\r\n ---> Running in c48023a713c1\r\nRemoving intermediate container c48023a713c1\r\n ---> 8e631770aec8\r\nStep 12/12 : CMD [\"mysqld\"]\r\n ---> Running in d28ed1dc73fd\r\nRemoving intermediate container d28ed1dc73fd\r\n ---> 2fd1ea393266\r\n\u001b[2K\r\r\r\nSuccessfully built 2fd1ea393266\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\r\nStep 1/12 : FROM oraclelinux:7-slim\r\n ---> 874477adb545\r\nStep 2/12 : ARG MYSQL_SERVER_PACKAGE=mysql-community-server-minimal-5.7.27\r\n ---> Using cache\r\n ---> 781ddbd677cf\r\nStep 3/12 : ARG MYSQL_SHELL_PACKAGE=mysql-shell-8.0.17\r\n ---> Using cache\r\n ---> c1345ce9293d\r\nStep 4/12 : RUN yum install -y https://repo.mysql.com/mysql-community-minimal-release-el7.rpm       https://repo.mysql.com/mysql-community-release-el7.rpm   && yum-config-manager --enable mysql57-server-minimal   && yum install -y       $MYSQL_SERVER_PACKAGE       $MYSQL_SHELL_PACKAGE       libpwquality   && yum clean all   && mkdir /docker-entrypoint-initdb.d\r\n ---> Using cache\r\n ---> e5f7a3ed8974\r\nStep 5/12 : VOLUME /var/lib/mysql\r\n ---> Using cache\r\n ---> 9040a4d505e4\r\nStep 6/12 : COPY docker-entrypoint.sh /entrypoint.sh\r\n ---> e8c4afa7787d\r\nStep 7/12 : COPY healthcheck.sh /healthcheck.sh\r\n ---> c00c04f4a9b0\r\nStep 8/12 : COPY my.cnf /etc/my.cnf\r\n ---> f966925cc782\r\nStep 9/12 : ENTRYPOINT [\"/entrypoint.sh\"]\r\n ---> Running in 6f255dcb33a4\r\nRemoving intermediate container 6f255dcb33a4\r\n ---> d03ab9c38510\r\nStep 10/12 : HEALTHCHECK CMD /healthcheck.sh\r\n ---> Running in 9251b8453b0b\r\nRemoving intermediate container 9251b8453b0b\r\n ---> 3bcba02cf58d\r\nStep 11/12 : EXPOSE 3306 33060\r\n ---> Running in bc23b247ed61\r\nRemoving intermediate container bc23b247ed61\r\n ---> a10b89641835\r\nStep 12/12 : CMD [\"mysqld\"]\r\n ---> Running in afc58c2c5936\r\nRemoving intermediate container afc58c2c5936\r\n ---> e320c085c013\r\n\u001b[2K\r\r\r\nSuccessfully built e320c085c013\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\r\nStep 1/16 : FROM python:3-alpine3.9\r\n ---> 88f1968a24d8\r\nStep 2/16 : RUN apk add --no-cache build-base\r\n ---> Running in 74d596380ebc\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/20) Upgrading musl (1.1.20-r4 -> 1.1.20-r5)\r\n(2/20) Installing binutils (2.31.1-r2)\r\n(3/20) Installing libmagic (5.36-r0)\r\n(4/20) Installing file (5.36-r0)\r\n(5/20) Installing gmp (6.1.2-r1)\r\n(6/20) Installing isl (0.18-r0)\r\n(7/20) Installing libgomp (8.3.0-r0)\r\n(8/20) Installing libatomic (8.3.0-r0)\r\n(9/20) Installing libgcc (8.3.0-r0)\r\n(10/20) Installing mpfr3 (3.1.5-r1)\r\n(11/20) Installing mpc1 (1.0.3-r1)\r\n(12/20) Installing libstdc++ (8.3.0-r0)\r\n(13/20) Installing gcc (8.3.0-r0)\r\n(14/20) Installing musl-dev (1.1.20-r5)\r\n(15/20) Installing libc-dev (0.7.1-r0)\r\n(16/20) Installing g++ (8.3.0-r0)\r\n(17/20) Installing make (4.2.1-r2)\r\n(18/20) Installing fortify-headers (1.0-r0)\r\n(19/20) Installing build-base (0.5-r1)\r\n(20/20) Upgrading musl-utils (1.1.20-r4 -> 1.1.20-r5)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 176 MiB in 53 packages\r\nRemoving intermediate container 74d596380ebc\r\n ---> a16e9e24e795\r\nStep 3/16 : RUN apk add --no-cache libffi-dev\r\n ---> Running in 12dc6c871fab\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/3) Installing linux-headers (4.18.13-r1)\r\n(2/3) Installing pkgconf (1.6.0-r0)\r\n(3/3) Installing libffi-dev (3.2.1-r6)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 183 MiB in 56 packages\r\nRemoving intermediate container 12dc6c871fab\r\n ---> 222aaca780c9\r\nStep 4/16 : RUN apk add --no-cache openssl-dev\r\n ---> Running in 13ab53c2fc1d\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/1) Installing openssl-dev (1.1.1b-r1)\r\nOK: 202 MiB in 57 packages\r\nRemoving intermediate container 13ab53c2fc1d\r\n ---> ca214df12fd0\r\nStep 5/16 : RUN pip install flask\r\n ---> Running in 7a6a4525d7dc\r\nCollecting flask\r\n  Downloading https://files.pythonhosted.org/packages/9b/93/628509b8d5dc749656a9641f4caf13540e2cdec85276964ff8f43bbb1d3b/Flask-1.1.1-py2.py3-none-any.whl (94kB)\r\nCollecting click>=5.1 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/fa/37/45185cb5abbc30d7257104c434fe0b07e5a195a6847506c074527aa599ec/Click-7.0-py2.py3-none-any.whl (81kB)\r\nCollecting Jinja2>=2.10.1 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/1d/e7/fd8b501e7a6dfe492a433deb7b9d833d39ca74916fa8bc63dd1a4947a671/Jinja2-2.10.1-py2.py3-none-any.whl (124kB)\r\nCollecting Werkzeug>=0.15 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/d1/ab/d3bed6b92042622d24decc7aadc8877badf18aeca1571045840ad4956d3f/Werkzeug-0.15.5-py2.py3-none-any.whl (328kB)\r\nCollecting itsdangerous>=0.24 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/76/ae/44b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/itsdangerous-1.1.0-py2.py3-none-any.whl\r\nCollecting MarkupSafe>=0.23 (from Jinja2>=2.10.1->flask)\r\n  Downloading https://files.pythonhosted.org/packages/b9/2e/64db92e53b86efccfaea71321f597fa2e1b2bd3853d8ce658568f7a13094/MarkupSafe-1.1.1.tar.gz\r\nBuilding wheels for collected packages: MarkupSafe\r\n  Building wheel for MarkupSafe (setup.py): started\r\n  Building wheel for MarkupSafe (setup.py): finished with status 'done'\r\n  Created wheel for MarkupSafe: filename=MarkupSafe-1.1.1-cp37-cp37m-linux_x86_64.whl size=34388 sha256=223f43f75f88ecfadc6c5bfe68c602523055c0481bdf3ee6e84de4e155caebb4\r\n  Stored in directory: /root/.cache/pip/wheels/f2/aa/04/0edf07a1b8a5f5f1aed7580fffb69ce8972edc16a505916a77\r\nSuccessfully built MarkupSafe\r\nInstalling collected packages: click, MarkupSafe, Jinja2, Werkzeug, itsdangerous, flask\r\nSuccessfully installed Jinja2-2.10.1 MarkupSafe-1.1.1 Werkzeug-0.15.5 click-7.0 flask-1.1.1 itsdangerous-1.1.0\r\nRemoving intermediate container 7a6a4525d7dc\r\n ---> 0b776cbf6147\r\nStep 6/16 : RUN pip install flask_sqlalchemy\r\n ---> Running in 7a14eab31861\r\nCollecting flask_sqlalchemy\r\n  Downloading https://files.pythonhosted.org/packages/08/ca/582442cad71504a1514a2f053006c8bb128844133d6076a4df17117545fa/Flask_SQLAlchemy-2.4.0-py2.py3-none-any.whl\r\nCollecting SQLAlchemy>=0.8.0 (from flask_sqlalchemy)\r\n  Downloading https://files.pythonhosted.org/packages/c2/75/6217c626fa22ad56ae5ccb1a36e7c4f17f5ca31543887e00179468d10464/SQLAlchemy-1.3.7.tar.gz (5.9MB)\r\nRequirement already satisfied: Flask>=0.10 in /usr/local/lib/python3.7/site-packages (from flask_sqlalchemy) (1.1.1)\r\nRequirement already satisfied: itsdangerous>=0.24 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (1.1.0)\r\nRequirement already satisfied: Jinja2>=2.10.1 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (2.10.1)\r\nRequirement already satisfied: click>=5.1 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (7.0)\r\nRequirement already satisfied: Werkzeug>=0.15 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (0.15.5)\r\nRequirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/site-packages (from Jinja2>=2.10.1->Flask>=0.10->flask_sqlalchemy) (1.1.1)\r\nBuilding wheels for collected packages: SQLAlchemy\r\n  Building wheel for SQLAlchemy (setup.py): started\r\n  Building wheel for SQLAlchemy (setup.py): finished with status 'done'\r\n  Created wheel for SQLAlchemy: filename=SQLAlchemy-1.3.7-cp37-cp37m-linux_x86_64.whl size=1196803 sha256=c6be641c335eee4ede5a5e96715bbbd53f4895f5beed41eda99047f2f1798c7e\r\n  Stored in directory: /root/.cache/pip/wheels/80/e0/68/3d11cc7209b5bd2c7d55cbb56c6bda843cc82f77c8387468ea\r\nSuccessfully built SQLAlchemy\r\nInstalling collected packages: SQLAlchemy, flask-sqlalchemy\r\nSuccessfully installed SQLAlchemy-1.3.7 flask-sqlalchemy-2.4.0\r\nRemoving intermediate container 7a14eab31861\r\n ---> cac4e5f653e9\r\nStep 7/16 : RUN pip install docker-compose\r\n ---> Running in 07df54ba0de0\r\nCollecting docker-compose\r\n  Downloading https://files.pythonhosted.org/packages/dd/e6/1521d1dfd9c0da1d1863b18e592d91c3df222e55f258b9876fa1e59bc4b5/docker_compose-1.24.1-py2.py3-none-any.whl (134kB)\r\nCollecting six<2,>=1.3.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl\r\nCollecting jsonschema<3,>=2.5.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/77/de/47e35a97b2b05c2fadbec67d44cfcdcd09b8086951b331d82de90d2912da/jsonschema-2.6.0-py2.py3-none-any.whl\r\nCollecting dockerpty<0.5,>=0.4.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/8d/ee/e9ecce4c32204a6738e0a5d5883d3413794d7498fe8b06f44becc028d3ba/dockerpty-0.4.1.tar.gz\r\nCollecting cached-property<2,>=1.2.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/3b/86/85c1be2e8db9e13ef9a350aecd6dea292bd612fa288c2f40d035bb750ded/cached_property-1.5.1-py2.py3-none-any.whl\r\nCollecting websocket-client<1.0,>=0.32.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/29/19/44753eab1fdb50770ac69605527e8859468f3c0fd7dc5a76dd9c4dbd7906/websocket_client-0.56.0-py2.py3-none-any.whl (200kB)\r\nCollecting docopt<0.7,>=0.6.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/a2/55/8f8cab2afd404cf578136ef2cc5dfb50baa1761b68c9da1fb1e4eed343c9/docopt-0.6.2.tar.gz\r\nCollecting docker[ssh]<4.0,>=3.7.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/09/da/7cc7ecdcd01145e9924a8ccbe9c1baf3a362fc75d4cb150676eb5231ea60/docker-3.7.3-py2.py3-none-any.whl (134kB)\r\nCollecting PyYAML<4.3,>=3.10 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/9e/a3/1d13970c3f36777c583f136c136f804d70f500168edc1edea6daa7200769/PyYAML-3.13.tar.gz (270kB)\r\nCollecting texttable<0.10,>=0.9.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/02/e1/2565e6b842de7945af0555167d33acfc8a615584ef7abd30d1eae00a4d80/texttable-0.9.1.tar.gz\r\nCollecting requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/ff/17/5cbb026005115301a8fb2f9b0e3e8d32313142fe8b617070e7baad20554f/requests-2.20.1-py2.py3-none-any.whl (57kB)\r\nCollecting docker-pycreds>=0.4.0 (from docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/f5/e8/f6bd1eee09314e7e6dee49cbe2c5e22314ccdb38db16c9fc72d2fa80d054/docker_pycreds-0.4.0-py2.py3-none-any.whl\r\nCollecting paramiko>=2.4.2; extra == \"ssh\" (from docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/4b/80/74dace9e48b0ef923633dfb5e48798f58a168e4734bca8ecfaf839ba051a/paramiko-2.6.0-py2.py3-none-any.whl (199kB)\r\nCollecting chardet<3.1.0,>=3.0.2 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl (133kB)\r\nCollecting certifi>=2017.4.17 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/69/1b/b853c7a9d4f6a6d00749e94eb6f3a041e342a885b87340b79c1ef73e3a78/certifi-2019.6.16-py2.py3-none-any.whl (157kB)\r\nCollecting idna<2.8,>=2.5 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/4b/2a/0276479a4b3caeb8a8c1af2f8e4355746a97fab05a372e4a2c6a6b876165/idna-2.7-py2.py3-none-any.whl (58kB)\r\nCollecting urllib3<1.25,>=1.21.1 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/01/11/525b02e4acc0c747de8b6ccdab376331597c569c42ea66ab0a1dbd36eca2/urllib3-1.24.3-py2.py3-none-any.whl (118kB)\r\nCollecting cryptography>=2.5 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/c2/95/f43d02315f4ec074219c6e3124a87eba1d2d12196c2767fadfdc07a83884/cryptography-2.7.tar.gz (495kB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting bcrypt>=3.1.3 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/fa/aa/025a3ab62469b5167bc397837c9ffc486c42a97ef12ceaa6699d8f5a5416/bcrypt-3.1.7.tar.gz (42kB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting pynacl>=1.0.1 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/61/ab/2ac6dea8489fa713e2b4c6c5b549cc962dd4a842b5998d9e80cf8440b7cd/PyNaCl-1.3.0.tar.gz (3.4MB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting asn1crypto>=0.21.0 (from cryptography>=2.5->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/ea/cd/35485615f45f30a510576f1a56d1e0a7ad7bd8ab5ed7cdc600ef7cd06222/asn1crypto-0.24.0-py2.py3-none-any.whl (101kB)\r\nCollecting cffi!=1.11.3,>=1.8 (from cryptography>=2.5->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\nCollecting pycparser (from cffi!=1.11.3,>=1.8->cryptography>=2.5->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\nBuilding wheels for collected packages: cryptography, bcrypt, pynacl\r\n  Building wheel for cryptography (PEP 517): started\r\n  Building wheel for cryptography (PEP 517): finished with status 'done'\r\n  Created wheel for cryptography: filename=cryptography-2.7-cp37-cp37m-linux_x86_64.whl size=925763 sha256=cfb506d18fe8401ff24f205bdcf4ee8c1a13fed420ace93c6c96aec8fdaea4bd\r\n  Stored in directory: /root/.cache/pip/wheels/d0/02/96/64b1439e5409591b6b0294d1da2f66a4ae4f0548d1bdb225b7\r\n  Building wheel for bcrypt (PEP 517): started\r\n  Building wheel for bcrypt (PEP 517): finished with status 'done'\r\n  Created wheel for bcrypt: filename=bcrypt-3.1.7-cp37-cp37m-linux_x86_64.whl size=64477 sha256=9e8ed56a5392a6b85318a4f4a514f778bda4cb5109d9980cbb41ccd5d3c69df3\r\n  Stored in directory: /root/.cache/pip/wheels/ae/b1/2c/dc178774d435228aff4679c4837de4d5ee1dd5568a370fc79c\r\n  Building wheel for pynacl (PEP 517): started\r\n  Building wheel for pynacl (PEP 517): still running...\r\n  Building wheel for pynacl (PEP 517): finished with status 'done'\r\n  Created wheel for pynacl: filename=PyNaCl-1.3.0-cp37-cp37m-linux_x86_64.whl size=1012181 sha256=7d0360c64ea6e86d2ddfdd6521ea1952e0f5e2879846e92e67707fe91f0c8462\r\n  Stored in directory: /root/.cache/pip/wheels/c1/10/e7/66597ff71adf8cb7403527243c4b57c66a0d1dfdd8adf2eae4\r\nSuccessfully built cryptography bcrypt pynacl\r\nBuilding wheels for collected packages: dockerpty, docopt, PyYAML, texttable\r\n  Building wheel for dockerpty (setup.py): started\r\n  Building wheel for dockerpty (setup.py): finished with status 'done'\r\n  Created wheel for dockerpty: filename=dockerpty-0.4.1-cp37-none-any.whl size=16606 sha256=f8423fdaf67253aca99ec4647712ad7d4bf67a349d66b5c2c657895eceebdab7\r\n  Stored in directory: /root/.cache/pip/wheels/e5/1e/86/bd0a97a0907c6c654af654d5875d1d4383dd1f575f77cee4aa\r\n  Building wheel for docopt (setup.py): started\r\n  Building wheel for docopt (setup.py): finished with status 'done'\r\n  Created wheel for docopt: filename=docopt-0.6.2-py2.py3-none-any.whl size=13704 sha256=f79fda88e61eb1af1380dcb5d28ba1878fcd298216d054384835423314f1bcc5\r\n  Stored in directory: /root/.cache/pip/wheels/9b/04/dd/7daf4150b6d9b12949298737de9431a324d4b797ffd63f526e\r\n  Building wheel for PyYAML (setup.py): started\r\n  Building wheel for PyYAML (setup.py): finished with status 'done'\r\n  Created wheel for PyYAML: filename=PyYAML-3.13-cp37-cp37m-linux_x86_64.whl size=43086 sha256=739a80fd7af2f3c6f75d42056b935c383d57dc9e4ace65c30fd2378e7ce1baa3\r\n  Stored in directory: /root/.cache/pip/wheels/ad/da/0c/74eb680767247273e2cf2723482cb9c924fe70af57c334513f\r\n  Building wheel for texttable (setup.py): started\r\n  Building wheel for texttable (setup.py): finished with status 'done'\r\n  Created wheel for texttable: filename=texttable-0.9.1-cp37-none-any.whl size=9970 sha256=f68722e818be50b1b5eaab3c27e4ec39e3a84f64ee95bbf32528689daf0ff192\r\n  Stored in directory: /root/.cache/pip/wheels/99/1e/2b/8452d3a48dad98632787556a0f2f90d56703b39cdf7d142dd1\r\nSuccessfully built dockerpty docopt PyYAML texttable\r\nInstalling collected packages: six, jsonschema, dockerpty, cached-property, websocket-client, docopt, docker-pycreds, chardet, certifi, idna, urllib3, requests, asn1crypto, pycparser, cffi, cryptography, bcrypt, pynacl, paramiko, docker, PyYAML, texttable, docker-compose\r\nSuccessfully installed PyYAML-3.13 asn1crypto-0.24.0 bcrypt-3.1.7 cached-property-1.5.1 certifi-2019.6.16 cffi-1.12.3 chardet-3.0.4 cryptography-2.7 docker-3.7.3 docker-compose-1.24.1 docker-pycreds-0.4.0 dockerpty-0.4.1 docopt-0.6.2 idna-2.7 jsonschema-2.6.0 paramiko-2.6.0 pycparser-2.19 pynacl-1.3.0 requests-2.20.1 six-1.12.0 texttable-0.9.1 urllib3-1.24.3 websocket-client-0.56.0\r\nRemoving intermediate container 07df54ba0de0\r\n ---> 604391466a32\r\nStep 8/16 : RUN apk add mariadb-connector-c-dev\r\n ---> Running in f4f142a24071\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/3) Installing zlib-dev (1.2.11-r1)\r\n(2/3) Installing mariadb-connector-c (3.0.8-r0)\r\n(3/3) Installing mariadb-connector-c-dev (3.0.8-r0)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 203 MiB in 60 packages\r\nRemoving intermediate container f4f142a24071\r\n ---> ef59173a3c32\r\nStep 9/16 : RUN pip install mysqlclient\r\n ---> Running in a98cc612e7e7\r\nCollecting mysqlclient\r\n  Downloading https://files.pythonhosted.org/packages/4d/38/c5f8bac9c50f3042c8f05615f84206f77f03db79781db841898fde1bb284/mysqlclient-1.4.4.tar.gz (86kB)\r\nBuilding wheels for collected packages: mysqlclient\r\n  Building wheel for mysqlclient (setup.py): started\r\n  Building wheel for mysqlclient (setup.py): finished with status 'done'\r\n  Created wheel for mysqlclient: filename=mysqlclient-1.4.4-cp37-cp37m-linux_x86_64.whl size=113704 sha256=b47d48f8a6324f1df88f9c8d943dbf2d83cef197a6d111213cd75fa92f16d53b\r\n  Stored in directory: /root/.cache/pip/wheels/a0/04/57/031b9b01df38999df7dc7f4ee998a98ecdbd2d781f73e3ffbf\r\nSuccessfully built mysqlclient\r\nInstalling collected packages: mysqlclient\r\nSuccessfully installed mysqlclient-1.4.4\r\nRemoving intermediate container a98cc612e7e7\r\n ---> d360a160efa8\r\nStep 10/16 : ARG DOCKER_CLI_VERSION=\"19.03.1\"\r\n ---> Running in 55c400575a09\r\nRemoving intermediate container 55c400575a09\r\n ---> 453c72cb1cb3\r\nStep 11/16 : ENV DOWNLOAD_URL=\"https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_CLI_VERSION.tgz\"\r\n ---> Running in 37b9e590babb\r\nRemoving intermediate container 37b9e590babb\r\n ---> f4249b861272\r\nStep 12/16 : RUN apk add curl     && mkdir -p /tmp/download     && curl -L $DOWNLOAD_URL | tar -xz -C /tmp/download     && mv /tmp/download/docker/docker /usr/local/bin/     && rm -rf /tmp/download     && rm -rf /var/cache/apk/*\r\n ---> Running in c8a0307841f8\r\n(1/4) Installing nghttp2-libs (1.35.1-r0)\r\n(2/4) Installing libssh2 (1.8.2-r0)\r\n(3/4) Installing libcurl (7.64.0-r2)\r\n(4/4) Installing curl (7.64.0-r2)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 204 MiB in 64 packages\r\n\u001b[91m  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\u001b[0m\u001b[91m\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\u001b[0m\u001b[91m\r  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\u001b[0m\u001b[91m\r  4 60.3M    4 2908k    0     0  1143k      0  0:00:54  0:00:02  0:00:52 1143k\u001b[0m\u001b[91m\r  6 60.3M    6 4154k    0     0  1171k      0  0:00:52  0:00:03  0:00:49 1171k\u001b[0m\u001b[91m\r  8 60.3M    8 5270k    0     0  1159k      0  0:00:53  0:00:04  0:00:49 1159k\u001b[0m\u001b[91m\r 10 60.3M   10 6355k    0     0  1133k      0  0:00:54  0:00:05  0:00:49 1284k\u001b[0m\u001b[91m\r 12 60.3M   12 7496k    0     0  1144k      0  0:00:53  0:00:06  0:00:47 1571k\u001b[0m\u001b[91m\r 13 60.3M   13 8464k    0     0  1122k      0  0:00:55  0:00:07  0:00:48 1111k\u001b[0m\u001b[91m\r 14 60.3M   14 9223k    0     0  1079k      0  0:00:57  0:00:08  0:00:49 1014k\u001b[0m\u001b[91m\r 16 60.3M   16  9.8M    0     0  1052k      0  0:00:58  0:00:09  0:00:49  955k\u001b[0m\u001b[91m\r 17 60.3M   17 10.6M    0     0  1038k      0  0:00:59  0:00:10  0:00:49  930k\u001b[0m\u001b[91m\r 19 60.3M   19 11.6M    0     0  1035k      0  0:00:59  0:00:11  0:00:48  892k\u001b[0m\u001b[91m\r 21 60.3M   21 12.7M    0     0  1039k      0  0:00:59  0:00:12  0:00:47  915k\u001b[0m\u001b[91m\r 23 60.3M   23 13.8M    0     0  1050k      0  0:00:58  0:00:13  0:00:45  999k\u001b[0m\u001b[91m\r 24 60.3M   24 14.7M    0     0  1040k      0  0:00:59  0:00:14  0:00:45 1018k\u001b[0m\u001b[91m\r 25 60.3M   25 15.4M    0     0  1019k      0  0:01:00  0:00:15  0:00:45  979k\u001b[0m\u001b[91m\r 26 60.3M   26 16.0M    0     0   996k      0  0:01:01  0:00:16  0:00:45  906k\u001b[0m\u001b[91m\r 27 60.3M   27 16.7M    0     0   975k      0  0:01:03  0:00:17  0:00:46  813k\u001b[0m\u001b[91m\r 28 60.3M   28 17.4M    0     0   962k      0  0:01:04  0:00:18  0:00:46  723k\u001b[0m\u001b[91m\r 30 60.3M   30 18.2M    0     0   955k      0  0:01:04  0:00:19  0:00:45  706k\u001b[0m\u001b[91m\r 31 60.3M   31 19.0M    0     0   950k      0  0:01:04  0:00:20  0:00:44  737k\u001b[0m\u001b[91m\r 33 60.3M   33 19.9M    0     0   949k      0  0:01:05  0:00:21  0:00:44  794k\u001b[0m\u001b[91m\r 34 60.3M   34 20.9M    0     0   952k      0  0:01:04  0:00:22  0:00:42  874k\u001b[0m\u001b[91m\r 36 60.3M   36 22.0M    0     0   959k      0  0:01:04  0:00:23  0:00:41  947k\u001b[0m\u001b[91m\r 38 60.3M   38 22.9M    0     0   957k      0  0:01:04  0:00:24  0:00:40  964k\u001b[0m\u001b[91m\r 39 60.3M   39 23.9M    0     0   961k      0  0:01:04  0:00:25  0:00:39 1005k\u001b[0m\u001b[91m\r 41 60.3M   41 25.1M    0     0   968k      0  0:01:03  0:00:26  0:00:37 1050k\u001b[0m\u001b[91m\r 43 60.3M   43 26.2M    0     0   975k      0  0:01:03  0:00:27  0:00:36 1080k\u001b[0m\u001b[91m\r 45 60.3M   45 27.3M    0     0   982k      0  0:01:02  0:00:28  0:00:34 1095k\u001b[0m\u001b[91m\r 47 60.3M   47 28.6M    0     0   993k      0  0:01:02  0:00:29  0:00:33 1168k\u001b[0m\u001b[91m\r 49 60.3M   49 29.9M    0     0  1005k      0  0:01:01  0:00:30  0:00:31 1229k\u001b[0m\u001b[91m\r 52 60.3M   52 31.4M    0     0  1020k      0  0:01:00  0:00:31  0:00:29 1296k\u001b[0m\u001b[91m\r 53 60.3M   53 32.3M    0     0  1015k      0  0:01:00  0:00:32  0:00:28 1233k\u001b[0m\u001b[91m\r 54 60.3M   54 33.0M    0     0  1007k      0  0:01:01  0:00:33  0:00:28 1150k\u001b[0m\u001b[91m\r 55 60.3M   55 33.5M    0     0   995k      0  0:01:02  0:00:34  0:00:28 1009k\u001b[0m\u001b[91m\r 56 60.3M   56 34.1M    0     0   984k      0  0:01:02  0:00:35  0:00:27  853k\u001b[0m\u001b[91m\r 57 60.3M   57 34.8M    0     0   975k      0  0:01:03  0:00:36  0:00:27  693k\u001b[0m\u001b[91m\r 58 60.3M   58 35.5M    0     0   970k      0  0:01:03  0:00:37  0:00:26  670k\u001b[0m\u001b[91m\r 60 60.3M   60 36.4M    0     0   967k      0  0:01:03  0:00:38  0:00:25  697k\u001b[0m\u001b[91m\r 61 60.3M   61 37.3M    0     0   967k      0  0:01:03  0:00:39  0:00:24  771k\u001b[0m\u001b[91m\r 63 60.3M   63 38.3M    0     0   968k      0  0:01:03  0:00:40  0:00:23  860k\u001b[0m\u001b[91m\r 65 60.3M   65 39.5M    0     0   974k      0  0:01:03  0:00:41  0:00:22  967k\u001b[0m\u001b[91m\r 68 60.3M   68 41.1M    0     0   990k      0  0:01:02  0:00:42  0:00:20 1142k\u001b[0m\u001b[91m\r 72 60.3M   72 43.4M    0     0  1021k      0  0:01:00  0:00:43  0:00:17 1441k\u001b[0m\u001b[91m\r 74 60.3M   74 44.7M    0     0  1029k      0  0:00:59  0:00:44  0:00:15 1526k\u001b[0m\u001b[91m\r 76 60.3M   76 45.8M    0     0  1029k      0  0:00:59  0:00:45  0:00:14 1514k\u001b[0m\u001b[91m\r 77 60.3M   77 46.7M    0     0  1028k      0  0:01:00  0:00:46  0:00:14 1476k\u001b[0m\u001b[91m\r 79 60.3M   79 47.6M    0     0  1027k      0  0:01:00  0:00:47  0:00:13 1339k\u001b[0m\u001b[91m\r 80 60.3M   80 48.7M    0     0  1027k      0  0:01:00  0:00:48  0:00:12 1074k\u001b[0m\u001b[91m\r 82 60.3M   82 49.6M    0     0  1026k      0  0:01:00  0:00:49  0:00:11  996k\u001b[0m\u001b[91m\r 83 60.3M   83 50.5M    0     0  1024k      0  0:01:00  0:00:50  0:00:10  981k\u001b[0m\u001b[91m\r 85 60.3M   85 51.3M    0     0  1020k      0  0:01:00  0:00:51  0:00:09  943k\u001b[0m\u001b[91m\r 86 60.3M   86 52.1M    0     0  1017k      0  0:01:00  0:00:52  0:00:08  919k\u001b[0m\u001b[91m\r 88 60.3M   88 53.1M    0     0  1015k      0  0:01:00  0:00:53  0:00:07  902k\u001b[0m\u001b[91m\r 89 60.3M   89 54.0M    0     0  1015k      0  0:01:00  0:00:54  0:00:06  908k\u001b[0m\u001b[91m\r 91 60.3M   91 55.2M    0     0  1017k      0  0:01:00  0:00:55  0:00:05  947k\u001b[0m\u001b[91m\r 93 60.3M   93 56.3M    0     0  1021k      0  0:01:00  0:00:56  0:00:04 1031k\u001b[0m\u001b[91m\r 95 60.3M   95 57.6M    0     0  1026k      0  0:01:00  0:00:57  0:00:03 1121k\u001b[0m\u001b[91m\r 97 60.3M   97 59.0M    0     0  1033k      0  0:00:59  0:00:58  0:00:01 1223k\u001b[0m\u001b[91m\r100 60.3M  100 60.3M    0     0  1042k      0  0:00:59  0:00:59 --:--:-- 1360k\r\n\u001b[0mRemoving intermediate container c8a0307841f8\r\n ---> c2f19f1562ed\r\nStep 13/16 : COPY src /src/\r\n ---> b1aab31f7423\r\nStep 14/16 : RUN mkdir /data\r\n ---> Running in 85cd03226424\r\nRemoving intermediate container 85cd03226424\r\n ---> dbd272b4edce\r\nStep 15/16 : EXPOSE 5000\r\n ---> Running in 9ce146a2595e\r\nRemoving intermediate container 9ce146a2595e\r\n ---> 8aa2e57e8991\r\nStep 16/16 : ENTRYPOINT [\"python\", \"/src/mdnssec.py\"]\r\n ---> Running in 2ed5a26c9a04\r\nRemoving intermediate container 2ed5a26c9a04\r\n ---> e8452a6f9411\r\n\u001b[2K\r\r\r\nSuccessfully built e8452a6f9411\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\r\n\r\n{\"services\": {\"api\": {\"stack_api\": {\"cmd\": [], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"api\", \"com.docker.compose.config-hash\": \"cab73b9eb96f6aa39e428eeeefcdd4ca4ec665d1c6dfa0460737b3b074e8ccea\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1f:00:03\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.31.0.3\", \"aliases\": [\"920337e727bf\", \"api\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:45:05\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.69.5\", \"aliases\": [\"920337e727bf\", \"api\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\"}}, \"mysql_replication_db\": {\"stack_api_replication_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_replication_db\", \"com.docker.compose.config-hash\": \"7b91df0ccd396921c7cec59184e6ea742a36a04c44e808d7c9e6728edcd02dd3\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"db_replication_net\": {\"macAddress\": \"02:42:0a:00:45:04\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.69.4\", \"aliases\": [\"mysql_replication_db\", \"3b35849b4449\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\"}}, \"mysql_db\": {\"stack_api_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_db\", \"com.docker.compose.config-hash\": \"160019e29ce36d6d936e7f442965dfd163985e45221cb926256006220f47a57c\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1f:00:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.31.0.2\", \"aliases\": [\"3b5b735c328a\", \"mysql_db\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:45:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.69.2\", \"aliases\": [\"3b5b735c328a\", \"mysql_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\"}}}, \"invocation\": {\"module_args\": {\"project_src\": \"/home/alfred/management\", \"hostname_check\": false, \"recreate\": \"smart\", \"docker_host\": \"unix://var/run/docker.sock\", \"remove_images\": null, \"client_key\": null, \"scale\": null, \"nocache\": false, \"remove_volumes\": false, \"state\": \"present\", \"build\": true, \"client_cert\": null, \"api_version\": \"auto\", \"files\": null, \"project_name\": null, \"ca_cert\": null, \"definition\": null, \"tls_hostname\": \"localhost\", \"dependencies\": true, \"services\": null, \"tls\": false, \"pull\": false, \"remove_orphans\": false, \"restarted\": false, \"ssl_version\": null, \"stopped\": false, \"timeout\": 10, \"debug\": false, \"validate_certs\": false}}, \"changed\": true, \"ansible_facts\": {\"api\": {\"stack_api\": {\"cmd\": [], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"api\", \"com.docker.compose.config-hash\": \"cab73b9eb96f6aa39e428eeeefcdd4ca4ec665d1c6dfa0460737b3b074e8ccea\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1f:00:03\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.31.0.3\", \"aliases\": [\"920337e727bf\", \"api\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:45:05\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.69.5\", \"aliases\": [\"920337e727bf\", \"api\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\"}}, \"mysql_replication_db\": {\"stack_api_replication_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_replication_db\", \"com.docker.compose.config-hash\": \"7b91df0ccd396921c7cec59184e6ea742a36a04c44e808d7c9e6728edcd02dd3\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"db_replication_net\": {\"macAddress\": \"02:42:0a:00:45:04\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.69.4\", \"aliases\": [\"mysql_replication_db\", \"3b35849b4449\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\"}}, \"mysql_db\": {\"stack_api_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_db\", \"com.docker.compose.config-hash\": \"160019e29ce36d6d936e7f442965dfd163985e45221cb926256006220f47a57c\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1f:00:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.31.0.2\", \"aliases\": [\"3b5b735c328a\", \"mysql_db\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:45:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.69.2\", \"aliases\": [\"3b5b735c328a\", \"mysql_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\"}}}}\r\n", "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error", "rc": 0}
2019-08-20 19:39:18,989 p=22258 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-20 19:39:18,990 p=22258 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=29   changed=15   unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2019-08-20 19:50:28,762 p=28903 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-20 19:50:28,839 p=28903 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 19:50:28,867 p=28903 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:50:28,900 p=28903 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 19:50:48,967 p=28903 u=aar |  fatal: [mdnssec.ri.mu.afrinic.net]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: Could not resolve hostname mdnssec.ri.mu.afrinic.net: Name or service not known", "unreachable": true}
2019-08-20 19:50:48,970 p=28903 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-20 19:50:48,993 p=28903 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=0    changed=0    unreachable=1    failed=0    skipped=1    rescued=0    ignored=0   
2019-08-20 19:53:01,529 p=29210 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-20 19:53:01,624 p=29210 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 19:53:01,656 p=29210 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:53:01,683 p=29210 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 19:53:59,184 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:53:59,220 p=29210 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-20 19:54:27,623 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:54:27,640 p=29210 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-20 19:54:57,921 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:54:57,941 p=29210 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-20 19:54:57,967 p=29210 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:54:57,988 p=29210 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-20 19:54:58,010 p=29210 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:54:58,065 p=29210 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-20 19:55:27,121 p=29210 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:55:27,146 p=29210 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-20 19:55:27,171 p=29210 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:55:27,197 p=29210 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-20 19:55:54,223 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:55:54,248 p=29210 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-20 19:55:54,279 p=29210 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:55:54,306 p=29210 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-20 19:56:20,531 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:56:20,569 p=29210 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-20 19:56:40,592 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:56:40,614 p=29210 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-20 19:56:55,172 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:56:55,207 p=29210 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-20 19:57:13,124 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:57:13,157 p=29210 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-20 19:57:33,213 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:57:33,250 p=29210 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-20 19:57:57,163 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:57:57,184 p=29210 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-20 19:58:15,521 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:58:15,539 p=29210 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-20 19:58:33,482 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:58:33,516 p=29210 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-20 19:58:48,260 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:58:48,293 p=29210 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-20 19:59:08,419 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 19:59:08,486 p=29210 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-20 20:08:04,086 p=29210 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:08:04,106 p=29210 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-20 20:08:27,637 p=29210 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:08:27,655 p=29210 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 20:08:45,781 p=29210 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:08:45,802 p=29210 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 20:09:10,539 p=29210 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:09:10,566 p=29210 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 20:09:31,984 p=29210 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:09:32,007 p=29210 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 20:09:50,142 p=29210 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:09:50,161 p=29210 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 20:10:24,393 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:10:24,411 p=29210 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-20 20:17:29,118 p=29210 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:17:29,138 p=29210 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 20:17:43,674 p=29210 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:17:43,707 p=29210 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-20 20:18:00,519 p=29210 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:18:00,544 p=29210 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-20 20:18:22,824 p=29210 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:18:22,854 p=29210 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 20:18:58,869 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:18:58,894 p=29210 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-20 20:19:20,127 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:19:20,153 p=29210 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-20 20:19:45,788 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:19:45,818 p=29210 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-20 20:20:25,325 p=29210 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:20:25,347 p=29210 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-20 20:20:52,870 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:20:52,893 p=29210 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-20 20:21:12,928 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:21:12,961 p=29210 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-20 20:21:31,220 p=29210 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:21:31,241 p=29210 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-20 20:21:53,717 p=29210 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 20:21:53,721 p=29210 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-20 20:21:53,721 p=29210 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=13   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-20 21:39:05,105 p=8796 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-20 21:39:05,177 p=8796 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 21:39:05,206 p=8796 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:39:05,244 p=8796 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-20 21:39:58,151 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:39:58,187 p=8796 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-20 21:40:22,756 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:40:22,794 p=8796 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-20 21:40:45,396 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:40:45,419 p=8796 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-20 21:40:45,445 p=8796 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:40:45,462 p=8796 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-20 21:40:45,485 p=8796 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:40:45,518 p=8796 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-20 21:41:09,051 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:41:09,078 p=8796 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-20 21:41:09,103 p=8796 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:41:09,126 p=8796 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-20 21:41:32,446 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:41:32,466 p=8796 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-20 21:41:32,486 p=8796 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:41:32,521 p=8796 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-20 21:42:01,763 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:42:01,797 p=8796 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-20 21:42:31,847 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:42:31,882 p=8796 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-20 21:42:54,591 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:42:54,613 p=8796 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-20 21:43:21,448 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:43:21,467 p=8796 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-20 21:43:44,019 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:43:44,038 p=8796 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-20 21:44:01,147 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:44:01,171 p=8796 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-20 21:44:21,298 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:44:21,341 p=8796 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-20 21:44:43,257 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:44:43,292 p=8796 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-20 21:44:59,687 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:44:59,721 p=8796 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-20 21:45:19,447 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:45:19,477 p=8796 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-20 21:54:12,865 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:54:12,900 p=8796 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-20 21:54:23,512 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:54:23,528 p=8796 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 21:54:33,509 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:54:33,545 p=8796 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 21:54:44,004 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:54:44,026 p=8796 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 21:54:54,193 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:54:54,215 p=8796 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 21:55:08,165 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:55:08,183 p=8796 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 21:55:32,731 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 21:55:32,749 p=8796 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-20 22:00:09,070 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 22:00:09,102 p=8796 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-20 22:00:19,851 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 22:00:19,885 p=8796 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-20 22:00:32,804 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 22:00:32,825 p=8796 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-20 22:00:42,661 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 22:00:42,685 p=8796 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-20 22:01:06,002 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 22:01:06,035 p=8796 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-20 22:01:18,674 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 22:01:18,694 p=8796 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-20 22:08:51,566 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 22:08:51,602 p=8796 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-20 22:09:20,498 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 22:09:20,523 p=8796 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-20 22:09:32,097 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 22:09:32,121 p=8796 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-20 22:09:42,904 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 22:09:42,933 p=8796 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-20 22:09:53,147 p=8796 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-20 22:09:53,179 p=8796 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-20 22:10:04,414 p=8796 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-20 22:10:04,418 p=8796 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-20 22:10:04,418 p=8796 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-21 09:50:09,525 p=26262 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 09:50:09,579 p=26262 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-21 09:50:25,282 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:50:25,299 p=26262 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 09:50:25,322 p=26262 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:50:25,366 p=26262 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 09:56:17,620 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:56:17,645 p=26262 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 09:56:30,198 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:56:30,221 p=26262 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 09:56:45,774 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:56:45,796 p=26262 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 09:56:45,822 p=26262 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:56:45,847 p=26262 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 09:56:45,872 p=26262 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:56:45,898 p=26262 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 09:56:58,381 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:56:58,407 p=26262 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 09:56:58,432 p=26262 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:56:58,456 p=26262 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 09:57:09,330 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:57:09,353 p=26262 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 09:57:09,376 p=26262 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:57:09,398 p=26262 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 09:57:22,669 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:57:22,694 p=26262 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 09:57:36,388 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:57:36,408 p=26262 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 09:57:48,752 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:57:48,776 p=26262 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 09:58:01,538 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:58:01,562 p=26262 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 09:58:11,682 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:58:11,705 p=26262 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 09:58:24,882 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:58:24,903 p=26262 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 09:58:38,585 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:58:38,610 p=26262 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 09:58:48,998 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:58:49,022 p=26262 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 09:59:00,294 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:59:00,315 p=26262 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 09:59:17,616 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 09:59:17,643 p=26262 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 10:05:26,588 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:05:26,609 p=26262 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 10:05:35,215 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:05:35,237 p=26262 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 10:05:44,969 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:05:44,993 p=26262 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 10:05:55,322 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:05:55,347 p=26262 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 10:06:04,251 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:06:04,279 p=26262 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 10:06:20,511 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:06:20,559 p=26262 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 10:06:56,547 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:06:56,607 p=26262 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 10:12:36,519 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:12:36,537 p=26262 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 10:12:46,117 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:12:46,135 p=26262 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 10:12:54,869 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:12:54,889 p=26262 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 10:13:04,085 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:13:04,109 p=26262 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 10:13:25,859 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:13:25,884 p=26262 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 10:13:36,128 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:13:36,148 p=26262 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 10:31:14,802 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:31:14,834 p=26262 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-21 10:31:40,153 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:31:40,178 p=26262 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-21 10:31:49,651 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:31:49,676 p=26262 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-21 10:32:01,606 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:32:01,636 p=26262 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-21 10:32:17,109 p=26262 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:32:17,134 p=26262 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-21 10:32:26,524 p=26262 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:32:26,526 p=26262 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 10:32:26,526 p=26262 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=35   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-21 10:50:11,370 p=689 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 10:50:11,448 p=689 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 10:50:11,469 p=689 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:50:11,496 p=689 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 10:50:37,509 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:50:37,553 p=689 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 10:50:47,845 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:50:47,868 p=689 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 10:51:00,077 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:51:00,100 p=689 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 10:51:00,127 p=689 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:51:00,152 p=689 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 10:51:00,179 p=689 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:51:00,232 p=689 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 10:51:11,538 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:51:11,562 p=689 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 10:51:11,596 p=689 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:51:11,626 p=689 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 10:51:20,155 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:51:20,186 p=689 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 10:51:20,208 p=689 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:51:20,232 p=689 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 10:51:29,168 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:51:29,193 p=689 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 10:51:37,088 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:51:37,116 p=689 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 10:51:44,955 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:51:44,977 p=689 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 10:51:52,811 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:51:52,835 p=689 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 10:52:04,400 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:52:04,423 p=689 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 10:52:13,105 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:52:13,124 p=689 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 10:52:21,300 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:52:21,321 p=689 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 10:52:29,445 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:52:29,472 p=689 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 10:52:37,050 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:52:37,070 p=689 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 10:52:45,377 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:52:45,408 p=689 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 10:57:29,790 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:57:29,817 p=689 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 10:57:36,798 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:57:36,818 p=689 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 10:57:43,794 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:57:43,818 p=689 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 10:57:50,839 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:57:50,886 p=689 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 10:57:57,833 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:57:57,864 p=689 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 10:58:04,894 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:58:04,918 p=689 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 10:58:21,335 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 10:58:21,381 p=689 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 11:01:15,398 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:01:15,424 p=689 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 11:01:22,420 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:01:22,441 p=689 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 11:01:29,405 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:01:29,430 p=689 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 11:01:37,312 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:01:37,335 p=689 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 11:01:52,877 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:01:52,902 p=689 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 11:02:00,855 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:02:00,884 p=689 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 11:12:47,342 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:12:47,365 p=689 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-21 11:13:13,207 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:13:13,229 p=689 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-21 11:13:21,883 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:13:21,931 p=689 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-21 11:13:30,370 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:13:30,398 p=689 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-21 11:13:38,800 p=689 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:13:38,827 p=689 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-21 11:13:47,939 p=689 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:13:47,941 p=689 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 11:13:47,942 p=689 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-21 11:25:09,061 p=3856 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 11:25:09,134 p=3856 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 11:25:09,159 p=3856 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:25:09,189 p=3856 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 11:25:28,826 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:25:28,857 p=3856 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 11:25:38,226 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:25:38,252 p=3856 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 11:25:50,532 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:25:50,555 p=3856 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 11:25:50,581 p=3856 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:25:50,605 p=3856 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 11:25:50,628 p=3856 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:25:50,656 p=3856 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 11:26:01,862 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:26:01,891 p=3856 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 11:26:01,916 p=3856 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:26:01,941 p=3856 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 11:26:10,466 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:26:10,494 p=3856 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 11:26:10,519 p=3856 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:26:10,544 p=3856 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 11:26:21,189 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:26:21,213 p=3856 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 11:26:29,765 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:26:29,793 p=3856 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 11:26:38,069 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:26:38,091 p=3856 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 11:26:48,901 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:26:48,925 p=3856 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 11:26:57,459 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:26:57,483 p=3856 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 11:27:06,105 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:27:06,131 p=3856 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 11:27:14,828 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:27:14,852 p=3856 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 11:27:26,564 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:27:26,590 p=3856 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 11:27:40,910 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:27:40,932 p=3856 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 11:27:52,189 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:27:52,210 p=3856 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 11:33:21,127 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:33:21,154 p=3856 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 11:33:28,484 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:33:28,517 p=3856 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 11:33:35,838 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:33:35,864 p=3856 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 11:33:42,884 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:33:42,905 p=3856 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 11:33:49,913 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:33:49,939 p=3856 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 11:33:56,932 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:33:56,964 p=3856 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 11:34:12,462 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:34:12,484 p=3856 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 11:37:33,998 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:37:34,023 p=3856 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 11:37:41,334 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:37:41,366 p=3856 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 11:37:48,702 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:37:48,770 p=3856 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 11:37:56,118 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:37:56,170 p=3856 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 11:38:25,981 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:38:26,003 p=3856 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 11:38:38,650 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:38:38,675 p=3856 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 11:52:16,401 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:52:16,521 p=3856 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-21 11:52:48,096 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:52:48,119 p=3856 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-21 11:52:57,106 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:52:57,170 p=3856 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-21 11:53:05,308 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:53:05,333 p=3856 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-21 11:53:13,090 p=3856 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:53:13,119 p=3856 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-21 11:53:21,725 p=3856 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:53:21,977 p=3856 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 11:53:21,980 p=3856 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-21 11:58:48,489 p=7616 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 11:58:48,567 p=7616 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 11:58:48,594 p=7616 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:58:48,615 p=7616 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 11:59:19,294 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:59:19,339 p=7616 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 11:59:28,635 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:59:28,686 p=7616 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 11:59:38,623 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:59:38,647 p=7616 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 11:59:38,675 p=7616 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:59:38,699 p=7616 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 11:59:38,727 p=7616 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:59:38,752 p=7616 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 11:59:49,364 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:59:49,391 p=7616 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 11:59:49,421 p=7616 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 11:59:49,451 p=7616 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 12:00:00,843 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:00:00,874 p=7616 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 12:00:00,896 p=7616 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:00:00,919 p=7616 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 12:00:20,369 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:00:20,408 p=7616 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 12:00:32,255 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:00:32,279 p=7616 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 12:00:40,525 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:00:40,544 p=7616 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 12:00:49,160 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:00:49,183 p=7616 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 12:00:57,790 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:00:57,816 p=7616 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 12:01:08,428 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:01:08,479 p=7616 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 12:01:18,002 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:01:18,032 p=7616 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 12:01:30,146 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:01:30,170 p=7616 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 12:01:38,926 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:01:38,970 p=7616 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 12:01:47,911 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:01:47,938 p=7616 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 12:07:09,916 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:07:09,940 p=7616 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 12:07:17,286 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:07:17,342 p=7616 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 12:07:25,223 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:07:25,246 p=7616 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 12:07:32,890 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:07:32,932 p=7616 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 12:07:40,263 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:07:40,285 p=7616 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 12:07:47,241 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:07:47,264 p=7616 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 12:08:02,782 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:08:02,806 p=7616 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 12:11:05,519 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:11:05,545 p=7616 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 12:11:12,785 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:11:12,807 p=7616 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 12:11:20,147 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:11:20,171 p=7616 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 12:11:27,466 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:11:27,523 p=7616 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 12:11:44,118 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:11:44,139 p=7616 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 12:11:52,446 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:11:52,473 p=7616 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 12:22:24,020 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:22:24,045 p=7616 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-21 12:22:48,870 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:22:48,893 p=7616 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-21 12:22:58,011 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:22:58,037 p=7616 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-21 12:23:06,063 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:23:06,088 p=7616 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-21 12:23:14,180 p=7616 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:23:14,241 p=7616 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-21 12:23:23,610 p=7616 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:23:23,623 p=7616 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 12:23:23,624 p=7616 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-21 12:33:23,630 p=10937 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 12:33:23,731 p=10937 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 12:33:23,750 p=10937 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:33:23,774 p=10937 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 12:33:55,361 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:33:55,475 p=10937 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 12:34:11,926 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:34:11,948 p=10937 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 12:34:25,344 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:34:25,378 p=10937 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 12:34:25,403 p=10937 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:34:25,424 p=10937 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 12:34:25,441 p=10937 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:34:25,497 p=10937 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 12:34:39,381 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:34:39,404 p=10937 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 12:34:39,428 p=10937 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:34:39,451 p=10937 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 12:34:48,764 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:34:48,789 p=10937 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 12:34:48,816 p=10937 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:34:48,839 p=10937 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 12:34:58,782 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:34:58,824 p=10937 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 12:35:07,169 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:35:07,193 p=10937 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 12:35:15,759 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:35:15,782 p=10937 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 12:35:24,001 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:35:24,024 p=10937 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 12:35:32,802 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:35:32,824 p=10937 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 12:35:41,533 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:35:41,558 p=10937 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 12:35:49,864 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:35:49,886 p=10937 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 12:36:01,283 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:36:01,306 p=10937 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 12:36:14,891 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:36:14,914 p=10937 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 12:36:26,757 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:36:26,815 p=10937 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 12:43:32,232 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:43:32,274 p=10937 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 12:43:39,300 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:43:39,367 p=10937 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 12:43:46,403 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:43:46,492 p=10937 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 12:43:53,948 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:43:53,968 p=10937 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 12:44:01,353 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:44:01,375 p=10937 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 12:44:08,792 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:44:08,841 p=10937 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 12:44:24,459 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:44:24,489 p=10937 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 12:47:27,026 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:47:27,050 p=10937 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 12:47:34,402 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:47:34,425 p=10937 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 12:47:41,761 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:47:41,788 p=10937 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 12:47:48,833 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:47:48,893 p=10937 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 12:48:05,346 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:48:05,409 p=10937 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 12:48:14,038 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:48:14,099 p=10937 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 12:57:38,400 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:57:38,918 p=10937 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-21 12:58:04,621 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:58:04,666 p=10937 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-21 12:58:15,245 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:58:15,284 p=10937 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-21 12:58:23,714 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:58:23,741 p=10937 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-21 12:58:32,280 p=10937 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:58:32,318 p=10937 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-21 12:58:41,841 p=10937 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 12:58:41,847 p=10937 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 12:58:41,848 p=10937 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-21 14:37:07,201 p=16980 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 14:37:07,240 p=16980 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-21 14:37:23,673 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:37:23,687 p=16980 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 14:37:23,702 p=16980 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:37:23,744 p=16980 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 14:37:51,230 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:37:51,283 p=16980 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 14:38:01,527 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:38:01,546 p=16980 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 14:38:11,816 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:38:11,834 p=16980 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 14:38:11,850 p=16980 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:38:11,875 p=16980 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 14:38:11,894 p=16980 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:38:11,914 p=16980 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 14:38:22,408 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:38:22,444 p=16980 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 14:38:22,459 p=16980 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:38:22,480 p=16980 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 14:38:30,956 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:38:30,990 p=16980 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 14:38:31,006 p=16980 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:38:31,025 p=16980 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 14:38:39,469 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:38:39,508 p=16980 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 14:38:47,602 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:38:47,619 p=16980 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 14:38:55,757 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:38:55,778 p=16980 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 14:39:04,198 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:39:04,237 p=16980 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 14:39:13,083 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:39:13,122 p=16980 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 14:39:21,743 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:39:21,782 p=16980 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 14:39:30,147 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:39:30,164 p=16980 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 14:39:38,038 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:39:38,075 p=16980 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 14:39:45,831 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:39:45,866 p=16980 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 14:39:54,057 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:39:54,118 p=16980 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 14:44:15,445 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:44:15,482 p=16980 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 14:44:22,412 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:44:22,440 p=16980 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 14:44:29,370 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:44:29,407 p=16980 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 14:44:36,633 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:44:36,674 p=16980 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 14:44:43,633 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:44:43,672 p=16980 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 14:44:50,615 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:44:50,660 p=16980 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 14:45:06,110 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:45:06,151 p=16980 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 14:47:57,683 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:47:57,718 p=16980 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 14:48:04,690 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:48:04,728 p=16980 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 14:48:12,595 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:48:12,625 p=16980 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 14:48:19,578 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:48:19,614 p=16980 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 14:48:35,016 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:48:35,056 p=16980 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 14:48:42,864 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:48:42,890 p=16980 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 14:57:15,904 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:57:15,941 p=16980 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-21 14:57:40,479 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:57:40,523 p=16980 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-21 14:57:48,665 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:57:48,713 p=16980 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-21 14:57:56,384 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:57:56,431 p=16980 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-21 14:58:04,108 p=16980 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:58:04,150 p=16980 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-21 14:58:12,317 p=16980 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 14:58:12,325 p=16980 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 14:58:12,326 p=16980 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=35   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-21 15:08:06,658 p=18663 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 15:08:06,719 p=18663 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 15:08:06,738 p=18663 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:08:06,761 p=18663 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 15:08:29,409 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:08:29,451 p=18663 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 15:08:38,676 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:08:38,712 p=18663 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 15:08:48,594 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:08:48,627 p=18663 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 15:08:48,647 p=18663 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:08:48,663 p=18663 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 15:08:48,679 p=18663 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:08:48,696 p=18663 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 15:08:59,133 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:08:59,172 p=18663 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 15:08:59,187 p=18663 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:08:59,203 p=18663 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 15:09:07,675 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:09:07,710 p=18663 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 15:09:07,725 p=18663 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:09:07,740 p=18663 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 15:09:16,160 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:09:16,195 p=18663 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 15:09:23,930 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:09:23,968 p=18663 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 15:09:31,772 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:09:31,788 p=18663 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 15:09:39,580 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:09:39,595 p=18663 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 15:09:48,435 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:09:48,469 p=18663 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 15:09:56,929 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:09:56,966 p=18663 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 15:10:04,971 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:10:05,011 p=18663 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 15:10:12,881 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:10:12,917 p=18663 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 15:10:20,331 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:10:20,370 p=18663 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 15:10:28,526 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:10:28,566 p=18663 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 15:14:47,803 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:14:47,840 p=18663 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 15:14:54,726 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:14:54,763 p=18663 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 15:15:01,657 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:15:01,694 p=18663 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 15:15:08,627 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:15:08,666 p=18663 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 15:15:15,631 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:15:15,658 p=18663 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 15:15:22,575 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:15:22,613 p=18663 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 15:15:37,993 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:15:38,030 p=18663 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 15:18:28,199 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:18:28,233 p=18663 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 15:18:35,163 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:18:35,209 p=18663 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 15:18:42,133 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:18:42,171 p=18663 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 15:18:49,086 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:18:49,123 p=18663 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 15:19:04,425 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:19:04,464 p=18663 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 15:19:11,934 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:19:11,957 p=18663 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 15:43:09,548 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:43:09,567 p=18663 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-21 15:43:34,462 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:43:34,507 p=18663 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-21 15:43:42,670 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:43:42,686 p=18663 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-21 15:43:50,406 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:43:50,437 p=18663 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-21 15:43:58,154 p=18663 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:43:58,198 p=18663 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-21 15:44:06,459 p=18663 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 15:44:06,466 p=18663 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 15:44:06,467 p=18663 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-21 16:14:32,493 p=22788 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 16:14:32,550 p=22788 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 16:14:32,572 p=22788 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:14:32,592 p=22788 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 16:15:41,942 p=22788 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:15:41,981 p=22788 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 16:15:51,774 p=22788 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:15:51,814 p=22788 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 16:16:04,779 p=22788 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:16:04,795 p=22788 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 16:16:04,811 p=22788 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:16:04,826 p=22788 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 16:16:04,842 p=22788 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:16:04,858 p=22788 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 16:16:14,430 p=22788 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:16:14,470 p=22788 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 16:16:14,486 p=22788 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:16:14,502 p=22788 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 16:16:23,252 p=22788 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:16:23,268 p=22788 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 16:16:23,285 p=22788 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:16:23,301 p=22788 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 16:16:31,756 p=22788 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:16:31,794 p=22788 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 16:16:39,630 p=22788 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:16:39,670 p=22788 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 16:16:47,520 p=22788 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:16:47,554 p=22788 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 16:16:55,644 p=22788 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:16:55,684 p=22788 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 16:17:04,553 p=22788 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:17:04,597 p=22788 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 16:17:13,088 p=22788 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:17:13,125 p=22788 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 16:17:21,113 p=22788 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:17:21,139 p=22788 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 16:17:29,015 p=22788 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:17:29,050 p=22788 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 16:17:36,498 p=22788 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:17:36,538 p=22788 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 16:17:44,431 p=22788 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:17:44,469 p=22788 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 16:22:04,145 p=22788 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:22:04,165 p=22788 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 16:22:10,964 p=22788 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:22:10,996 p=22788 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 16:22:17,908 p=22788 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:22:17,942 p=22788 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 16:22:24,845 p=22788 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:22:24,884 p=22788 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 16:22:31,764 p=22788 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:22:31,799 p=22788 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 16:22:38,708 p=22788 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:22:38,744 p=22788 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 16:22:54,108 p=22788 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:22:54,144 p=22788 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 16:25:44,090 p=22788 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:25:44,131 p=22788 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 16:25:51,061 p=22788 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:25:51,109 p=22788 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 16:25:58,058 p=22788 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:25:58,099 p=22788 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 16:26:05,030 p=22788 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:26:05,073 p=22788 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 16:26:20,412 p=22788 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:26:20,460 p=22788 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 16:26:28,262 p=22788 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:26:28,289 p=22788 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 16:48:50,103 p=22788 u=aar |   [WARNING]: Module invocation had junk after the JSON data:  ---> Running in eb4a4dfba902 Removing intermediate container eb4a4dfba902  ---> 7f6ea43517a6 [2K   Successfully built 7f6ea43517a6
Successfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0  {"services": {"api": {"stack_api": {"cmd": [], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "api", "com.docker.compose.config-hash": "4c487da52f5530b8f9dc40bd59723bd3e3edf3768e1ac6c06a28f5ef546299aa", "com.docker.compose.project": "management",
"com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress":
"02:42:ac:1b:00:03", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 16, "globalIPv6": "", "IPAddress": "172.27.0.3", "aliases": ["api", "4301c7f3e979"]}, "db_replication_net":
{"macAddress": "02:42:0a:00:64:05", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.100.5", "aliases": ["api", "4301c7f3e979"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0"}}, "mysql_replication_db": {"stack_api_replication_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "mysql_replication_db", "com.docker.compose.config-hash": "8225f4fdcb612f424ca0c1154dcb4bfcbc2e9f04002ebaaf6599d359f651612f", "com.docker.compose.project":
"management", "com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"db_replication_net": {"macAddress":
"02:42:0a:00:64:04", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.100.4", "aliases": ["7d4e4aea89b9", "mysql_replication_db"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0"}}, "mysql_db": {"stack_api_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "mysql_db", "com.docker.compose.config-hash": "1d1bdeeaa94f876c9033158837fc7ceb034a71f6a082b0230df54ff138fc4d1f", "com.docker.compose.project": "management",
"com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress":
"02:42:ac:1b:00:02", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 16, "globalIPv6": "", "IPAddress": "172.27.0.2", "aliases": ["4245d4735999", "mysql_db"]}, "db_replication_net":
{"macAddress": "02:42:0a:00:64:02", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.100.2", "aliases": ["4245d4735999", "mysql_db"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0"}}}, "invocation": {"module_args": {"project_src": "/home/alfred/management", "hostname_check": false, "recreate": "smart",
"docker_host": "unix://var/run/docker.sock", "remove_images": null, "client_key": null, "scale": null, "nocache": false, "remove_volumes": false, "state": "present", "build": true,
"client_cert": null, "api_version": "auto", "files": null, "project_name": null, "ca_cert": null, "definition": null, "tls_hostname": "localhost", "dependencies": true, "services": null,
"tls": false, "pull": false, "remove_orphans": false, "restarted": false, "ssl_version": null, "stopped": false, "timeout": 10, "debug": false, "validate_certs": false}}, "changed": true,
"ansible_facts": {"api": {"stack_api": {"cmd": [], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "api", "com.docker.compose.config-hash":
"4c487da52f5530b8f9dc40bd59723bd3e3edf3768e1ac6c06a28f5ef546299aa", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False",
"com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress": "02:42:ac:1b:00:03", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 16,
"globalIPv6": "", "IPAddress": "172.27.0.3", "aliases": ["api", "4301c7f3e979"]}, "db_replication_net": {"macAddress": "02:42:0a:00:64:05", "globalIPv6PrefixLen": 0, "links": null,
"IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.100.5", "aliases": ["api", "4301c7f3e979"]}}, "image": "registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0"}},
"mysql_replication_db": {"stack_api_replication_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "mysql_replication_db",
"com.docker.compose.config-hash": "8225f4fdcb612f424ca0c1154dcb4bfcbc2e9f04002ebaaf6599d359f651612f", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1",
"com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"db_replication_net": {"macAddress": "02:42:0a:00:64:04", "globalIPv6PrefixLen": 0, "links":
null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.100.4", "aliases": ["7d4e4aea89b9", "mysql_replication_db"]}}, "image": "registry.mdnssec.ri.mu.afrinic.net:5000/mysql-
slave57:1.0"}}, "mysql_db": {"stack_api_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "mysql_db",
"com.docker.compose.config-hash": "1d1bdeeaa94f876c9033158837fc7ceb034a71f6a082b0230df54ff138fc4d1f", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1",
"com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress": "02:42:ac:1b:00:02", "globalIPv6PrefixLen": 0,
"links": null, "IPPrefixLen": 16, "globalIPv6": "", "IPAddress": "172.27.0.2", "aliases": ["4245d4735999", "mysql_db"]}, "db_replication_net": {"macAddress": "02:42:0a:00:64:02",
"globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.100.2", "aliases": ["4245d4735999", "mysql_db"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0"}}}}

2019-08-21 16:48:50,832 p=22788 u=aar |  fatal: [mdnssec.ri.mu.afrinic.net]: FAILED! => {"changed": false, "module_stderr": "Shared connection to mdnssec.ri.mu.afrinic.net closed.\r\n", "module_stdout": "No handlers could be found for logger \"compose.config.config\"\r\nStep 1/12 : FROM oraclelinux:7-slim\r\n ---> 874477adb545\r\nStep 2/12 : ARG MYSQL_SERVER_PACKAGE=mysql-community-server-minimal-5.7.27\r\n ---> Running in fa13fab0e2ae\r\nRemoving intermediate container fa13fab0e2ae\r\n ---> 8d45b3985a1e\r\nStep 3/12 : ARG MYSQL_SHELL_PACKAGE=mysql-shell-8.0.17\r\n ---> Running in a31567cdf262\r\nRemoving intermediate container a31567cdf262\r\n ---> 616dcb3cb834\r\nStep 4/12 : RUN yum install -y https://repo.mysql.com/mysql-community-minimal-release-el7.rpm       https://repo.mysql.com/mysql-community-release-el7.rpm   && yum-config-manager --enable mysql57-server-minimal   && yum install -y       $MYSQL_SERVER_PACKAGE       $MYSQL_SHELL_PACKAGE       libpwquality   && yum clean all   && mkdir /docker-entrypoint-initdb.d\r\n ---> Running in 6cda96b8eed9\r\nLoaded plugins: ovl\r\nExamining /var/tmp/yum-root-OVJvKJ/mysql-community-minimal-release-el7.rpm: mysql-community-minimal-release-el7-1.noarch\r\nMarking /var/tmp/yum-root-OVJvKJ/mysql-community-minimal-release-el7.rpm to be installed\r\nExamining /var/tmp/yum-root-OVJvKJ/mysql-community-release-el7.rpm: mysql80-community-release-el7-3.noarch\r\nMarking /var/tmp/yum-root-OVJvKJ/mysql-community-release-el7.rpm to be installed\r\nResolving Dependencies\r\n--> Running transaction check\r\n---> Package mysql-community-minimal-release.noarch 0:el7-1 will be installed\r\n---> Package mysql80-community-release.noarch 0:el7-3 will be installed\r\n--> Finished Dependency Resolution\r\n\r\nDependencies Resolved\r\n\r\n================================================================================\r\n Package                Arch   Version\r\n                                     Repository                            Size\r\n================================================================================\r\nInstalling:\r\n mysql-community-minimal-release\r\n                        noarch el7-1 /mysql-community-minimal-release-el7  29 k\r\n mysql80-community-release\r\n                        noarch el7-3 /mysql-community-release-el7          31 k\r\n\r\nTransaction Summary\r\n================================================================================\r\nInstall  2 Packages\r\n\r\nTotal size: 60 k\r\nInstalled size: 60 k\r\nDownloading packages:\r\nRunning transaction check\r\nRunning transaction test\r\nTransaction test succeeded\r\nRunning transaction\r\n  Installing : mysql80-community-release-el7-3.noarch                       1/2 \r\n  Installing : mysql-community-minimal-release-el7-1.noarch                 2/2 \r\n  Verifying  : mysql-community-minimal-release-el7-1.noarch                 1/2 \r\n  Verifying  : mysql80-community-release-el7-3.noarch                       2/2 \r\n\r\nInstalled:\r\n  mysql-community-minimal-release.noarch 0:el7-1                                \r\n  mysql80-community-release.noarch 0:el7-3                                      \r\n\r\nComplete!\r\nLoaded plugins: ovl\r\n========================= repo: mysql57-server-minimal =========================\r\n[mysql57-server-minimal]\r\nasync = True\r\nbandwidth = 0\r\nbase_persistdir = /var/lib/yum/repos/x86_64/7Server\r\nbaseurl = http://repo.mysql.com/yum/mysql-5.7-community/docker/x86_64/\r\ncache = 0\r\ncachedir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal\r\ncheck_config_file_age = True\r\ncompare_providers_priority = 80\r\ncost = 1000\r\ndeltarpm_metadata_percentage = 100\r\ndeltarpm_percentage = \r\nenabled = 1\r\nenablegroups = True\r\nexclude = \r\nfailovermethod = priority\r\nftp_disable_epsv = False\r\ngpgcadir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal/gpgcadir\r\ngpgcakey = \r\ngpgcheck = True\r\ngpgdir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal/gpgdir\r\ngpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\nhdrdir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal/headers\r\nhttp_caching = all\r\nincludepkgs = \r\nip_resolve = \r\nkeepalive = True\r\nkeepcache = False\r\nmddownloadpolicy = sqlite\r\nmdpolicy = group:small\r\nmediaid = \r\nmetadata_expire = 21600\r\nmetadata_expire_filter = read-only:present\r\nmetalink = \r\nminrate = 0\r\nmirrorlist = \r\nmirrorlist_expire = 86400\r\nname = MySQL 5.7 Server Minimal\r\nold_base_cache_dir = \r\npassword = \r\npersistdir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal\r\npkgdir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal/packages\r\nproxy = False\r\nproxy_dict = \r\nproxy_password = \r\nproxy_username = \r\nrepo_gpgcheck = False\r\nretries = 10\r\nskip_if_unavailable = False\r\nssl_check_cert_permissions = True\r\nsslcacert = \r\nsslclientcert = \r\nsslclientkey = \r\nsslverify = True\r\nthrottle = 0\r\ntimeout = 30.0\r\nui_id = mysql57-server-minimal/x86_64\r\nui_repoid_vars = releasever,\r\n   basearch\r\nusername = \r\n\r\nLoaded plugins: ovl\r\nResolving Dependencies\r\n--> Running transaction check\r\n---> Package libpwquality.x86_64 0:1.2.3-5.el7 will be installed\r\n--> Processing Dependency: cracklib-dicts >= 2.8 for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_EXTENSION_1.1.1)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_EXTENSION_1.0)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_1.0)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: pam(x86-64) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0()(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libcrack.so.2()(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n---> Package mysql-community-server-minimal.x86_64 0:5.7.27-1.el7 will be installed\r\n--> Processing Dependency: libnuma.so.1(libnuma_1.2)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libnuma.so.1(libnuma_1.1)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1(LIBAIO_0.4)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1(LIBAIO_0.1)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libnuma.so.1()(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1()(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n---> Package mysql-shell.x86_64 0:8.0.17-1.el7 will be installed\r\n--> Running transaction check\r\n---> Package cracklib.x86_64 0:2.9.0-11.el7 will be installed\r\n--> Processing Dependency: gzip for package: cracklib-2.9.0-11.el7.x86_64\r\n---> Package cracklib-dicts.x86_64 0:2.9.0-11.el7 will be installed\r\n---> Package libaio.x86_64 0:0.3.109-13.el7 will be installed\r\n---> Package numactl-libs.x86_64 0:2.0.12-3.el7 will be installed\r\n---> Package pam.x86_64 0:1.1.8-22.el7 will be installed\r\n--> Running transaction check\r\n---> Package gzip.x86_64 0:1.5-10.el7 will be installed\r\n--> Finished Dependency Resolution\r\n\r\nDependencies Resolved\r\n\r\n================================================================================\r\n Package                     Arch   Version        Repository              Size\r\n================================================================================\r\nInstalling:\r\n libpwquality                x86_64 1.2.3-5.el7    ol7_latest              84 k\r\n mysql-community-server-minimal\r\n                             x86_64 5.7.27-1.el7   mysql57-server-minimal  15 M\r\n mysql-shell                 x86_64 8.0.17-1.el7   mysql-tools-community   15 M\r\nInstalling for dependencies:\r\n cracklib                    x86_64 2.9.0-11.el7   ol7_latest              79 k\r\n cracklib-dicts              x86_64 2.9.0-11.el7   ol7_latest             3.6 M\r\n gzip                        x86_64 1.5-10.el7     ol7_latest             129 k\r\n libaio                      x86_64 0.3.109-13.el7 ol7_latest              24 k\r\n numactl-libs                x86_64 2.0.12-3.el7   ol7_latest              29 k\r\n pam                         x86_64 1.1.8-22.el7   ol7_latest             719 k\r\n\r\nTransaction Summary\r\n================================================================================\r\nInstall  3 Packages (+6 Dependent packages)\r\n\r\nTotal download size: 34 M\r\nInstalled size: 130 M\r\nDownloading packages:\r\n\u001b[91mwarning: /var/cache/yum/x86_64/7Server/mysql57-server-minimal/packages/mysql-community-server-minimal-5.7.27-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEY\r\n\u001b[0mPublic key for mysql-community-server-minimal-5.7.27-1.el7.x86_64.rpm is not installed\r\nPublic key for mysql-shell-8.0.17-1.el7.x86_64.rpm is not installed\r\n--------------------------------------------------------------------------------\r\nTotal                                              470 kB/s |  34 MB  01:13     \r\nRetrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\n\u001b[91mImporting GPG key 0x5072E1F5:\r\n Userid     : \"MySQL Release Engineering <mysql-build@oss.oracle.com>\"\r\n Fingerprint: a4a9 4068 76fc bd3c 4567 70c8 8c71 8d3b 5072 e1f5\r\n Package    : mysql80-community-release-el7-3.noarch (installed)\r\n From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\n\u001b[0mRunning transaction check\r\nRunning transaction test\r\nTransaction test succeeded\r\nRunning transaction\r\n  Installing : libaio-0.3.109-13.el7.x86_64                                 1/9 \r\n  Installing : numactl-libs-2.0.12-3.el7.x86_64                             2/9 \r\n  Installing : gzip-1.5-10.el7.x86_64                                       3/9 \r\n  Installing : cracklib-2.9.0-11.el7.x86_64                                 4/9 \r\n  Installing : cracklib-dicts-2.9.0-11.el7.x86_64                           5/9 \r\n  Installing : pam-1.1.8-22.el7.x86_64                                      6/9 \r\n  Installing : libpwquality-1.2.3-5.el7.x86_64                              7/9 \r\n  Installing : mysql-community-server-minimal-5.7.27-1.el7.x86_64           8/9 \r\n  Installing : mysql-shell-8.0.17-1.el7.x86_64                              9/9 \r\n  Verifying  : cracklib-dicts-2.9.0-11.el7.x86_64                           1/9 \r\n  Verifying  : mysql-community-server-minimal-5.7.27-1.el7.x86_64           2/9 \r\n  Verifying  : pam-1.1.8-22.el7.x86_64                                      3/9 \r\n  Verifying  : gzip-1.5-10.el7.x86_64                                       4/9 \r\n  Verifying  : numactl-libs-2.0.12-3.el7.x86_64                             5/9 \r\n  Verifying  : cracklib-2.9.0-11.el7.x86_64                                 6/9 \r\n  Verifying  : mysql-shell-8.0.17-1.el7.x86_64                              7/9 \r\n  Verifying  : libpwquality-1.2.3-5.el7.x86_64                              8/9 \r\n  Verifying  : libaio-0.3.109-13.el7.x86_64                                 9/9 \r\n\r\nInstalled:\r\n  libpwquality.x86_64 0:1.2.3-5.el7                                             \r\n  mysql-community-server-minimal.x86_64 0:5.7.27-1.el7                          \r\n  mysql-shell.x86_64 0:8.0.17-1.el7                                             \r\n\r\nDependency Installed:\r\n  cracklib.x86_64 0:2.9.0-11.el7        cracklib-dicts.x86_64 0:2.9.0-11.el7   \r\n  gzip.x86_64 0:1.5-10.el7              libaio.x86_64 0:0.3.109-13.el7         \r\n  numactl-libs.x86_64 0:2.0.12-3.el7    pam.x86_64 0:1.1.8-22.el7              \r\n\r\nComplete!\r\nLoaded plugins: ovl\r\nCleaning repos: mysql-connectors-community mysql-tools-community\r\n              : mysql57-server-minimal mysql80-community ol7_UEKR5\r\n              : ol7_developer_EPEL ol7_latest\r\nRemoving intermediate container 6cda96b8eed9\r\n ---> 15385990f802\r\nStep 5/12 : VOLUME /var/lib/mysql\r\n ---> Running in 86ee482107ee\r\nRemoving intermediate container 86ee482107ee\r\n ---> 204a6845cf48\r\nStep 6/12 : COPY docker-entrypoint.sh /entrypoint.sh\r\n ---> 84692f9a2dc3\r\nStep 7/12 : COPY healthcheck.sh /healthcheck.sh\r\n ---> 8cc084cc1b98\r\nStep 8/12 : COPY my.cnf /etc/my.cnf\r\n ---> 90e1c29ea3ed\r\nStep 9/12 : ENTRYPOINT [\"/entrypoint.sh\"]\r\n ---> Running in baad2034e88a\r\nRemoving intermediate container baad2034e88a\r\n ---> 2c14ed2f3deb\r\nStep 10/12 : HEALTHCHECK CMD /healthcheck.sh\r\n ---> Running in 60b9123f02b2\r\nRemoving intermediate container 60b9123f02b2\r\n ---> a9d2fe202d96\r\nStep 11/12 : EXPOSE 3306 33060\r\n ---> Running in ea492faaf1f3\r\nRemoving intermediate container ea492faaf1f3\r\n ---> 94de3b125e50\r\nStep 12/12 : CMD [\"mysqld\"]\r\n ---> Running in 617172c15530\r\nRemoving intermediate container 617172c15530\r\n ---> 4e875ebc9adf\r\n\u001b[2K\r\r\r\nSuccessfully built 4e875ebc9adf\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\r\nStep 1/12 : FROM oraclelinux:7-slim\r\n ---> 874477adb545\r\nStep 2/12 : ARG MYSQL_SERVER_PACKAGE=mysql-community-server-minimal-5.7.27\r\n ---> Using cache\r\n ---> 8d45b3985a1e\r\nStep 3/12 : ARG MYSQL_SHELL_PACKAGE=mysql-shell-8.0.17\r\n ---> Using cache\r\n ---> 616dcb3cb834\r\nStep 4/12 : RUN yum install -y https://repo.mysql.com/mysql-community-minimal-release-el7.rpm       https://repo.mysql.com/mysql-community-release-el7.rpm   && yum-config-manager --enable mysql57-server-minimal   && yum install -y       $MYSQL_SERVER_PACKAGE       $MYSQL_SHELL_PACKAGE       libpwquality   && yum clean all   && mkdir /docker-entrypoint-initdb.d\r\n ---> Using cache\r\n ---> 15385990f802\r\nStep 5/12 : VOLUME /var/lib/mysql\r\n ---> Using cache\r\n ---> 204a6845cf48\r\nStep 6/12 : COPY docker-entrypoint.sh /entrypoint.sh\r\n ---> bf322bbf0238\r\nStep 7/12 : COPY healthcheck.sh /healthcheck.sh\r\n ---> 39bbf0db7382\r\nStep 8/12 : COPY my.cnf /etc/my.cnf\r\n ---> 1ba46609814b\r\nStep 9/12 : ENTRYPOINT [\"/entrypoint.sh\"]\r\n ---> Running in 444cc3f831cf\r\nRemoving intermediate container 444cc3f831cf\r\n ---> 5a0291dbd765\r\nStep 10/12 : HEALTHCHECK CMD /healthcheck.sh\r\n ---> Running in 4237f56ce462\r\nRemoving intermediate container 4237f56ce462\r\n ---> 672ba3143795\r\nStep 11/12 : EXPOSE 3306 33060\r\n ---> Running in 5cc5f762a66d\r\nRemoving intermediate container 5cc5f762a66d\r\n ---> 68a06453118d\r\nStep 12/12 : CMD [\"mysqld\"]\r\n ---> Running in bdeef9db595e\r\nRemoving intermediate container bdeef9db595e\r\n ---> fe7179f65241\r\n\u001b[2K\r\r\r\nSuccessfully built fe7179f65241\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\r\nStep 1/16 : FROM python:3-alpine3.9\r\n ---> 88f1968a24d8\r\nStep 2/16 : RUN apk add --no-cache build-base\r\n ---> Running in 60622ea64f55\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/20) Upgrading musl (1.1.20-r4 -> 1.1.20-r5)\r\n(2/20) Installing binutils (2.31.1-r2)\r\n(3/20) Installing libmagic (5.36-r0)\r\n(4/20) Installing file (5.36-r0)\r\n(5/20) Installing gmp (6.1.2-r1)\r\n(6/20) Installing isl (0.18-r0)\r\n(7/20) Installing libgomp (8.3.0-r0)\r\n(8/20) Installing libatomic (8.3.0-r0)\r\n(9/20) Installing libgcc (8.3.0-r0)\r\n(10/20) Installing mpfr3 (3.1.5-r1)\r\n(11/20) Installing mpc1 (1.0.3-r1)\r\n(12/20) Installing libstdc++ (8.3.0-r0)\r\n(13/20) Installing gcc (8.3.0-r0)\r\n(14/20) Installing musl-dev (1.1.20-r5)\r\n(15/20) Installing libc-dev (0.7.1-r0)\r\n(16/20) Installing g++ (8.3.0-r0)\r\n(17/20) Installing make (4.2.1-r2)\r\n(18/20) Installing fortify-headers (1.0-r0)\r\n(19/20) Installing build-base (0.5-r1)\r\n(20/20) Upgrading musl-utils (1.1.20-r4 -> 1.1.20-r5)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 176 MiB in 53 packages\r\nRemoving intermediate container 60622ea64f55\r\n ---> 2174a92a50b1\r\nStep 3/16 : RUN apk add --no-cache libffi-dev\r\n ---> Running in 329a975a1ec3\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/3) Installing linux-headers (4.18.13-r1)\r\n(2/3) Installing pkgconf (1.6.0-r0)\r\n(3/3) Installing libffi-dev (3.2.1-r6)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 183 MiB in 56 packages\r\nRemoving intermediate container 329a975a1ec3\r\n ---> a627fa26023f\r\nStep 4/16 : RUN apk add --no-cache openssl-dev\r\n ---> Running in fdbd92ba7580\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/1) Installing openssl-dev (1.1.1b-r1)\r\nOK: 202 MiB in 57 packages\r\nRemoving intermediate container fdbd92ba7580\r\n ---> 8df32c418ab8\r\nStep 5/16 : RUN pip install flask\r\n ---> Running in 8edd9148e33c\r\nCollecting flask\r\n  Downloading https://files.pythonhosted.org/packages/9b/93/628509b8d5dc749656a9641f4caf13540e2cdec85276964ff8f43bbb1d3b/Flask-1.1.1-py2.py3-none-any.whl (94kB)\r\nCollecting Jinja2>=2.10.1 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/1d/e7/fd8b501e7a6dfe492a433deb7b9d833d39ca74916fa8bc63dd1a4947a671/Jinja2-2.10.1-py2.py3-none-any.whl (124kB)\r\nCollecting Werkzeug>=0.15 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/d1/ab/d3bed6b92042622d24decc7aadc8877badf18aeca1571045840ad4956d3f/Werkzeug-0.15.5-py2.py3-none-any.whl (328kB)\r\nCollecting itsdangerous>=0.24 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/76/ae/44b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/itsdangerous-1.1.0-py2.py3-none-any.whl\r\nCollecting click>=5.1 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/fa/37/45185cb5abbc30d7257104c434fe0b07e5a195a6847506c074527aa599ec/Click-7.0-py2.py3-none-any.whl (81kB)\r\nCollecting MarkupSafe>=0.23 (from Jinja2>=2.10.1->flask)\r\n  Downloading https://files.pythonhosted.org/packages/b9/2e/64db92e53b86efccfaea71321f597fa2e1b2bd3853d8ce658568f7a13094/MarkupSafe-1.1.1.tar.gz\r\nBuilding wheels for collected packages: MarkupSafe\r\n  Building wheel for MarkupSafe (setup.py): started\r\n  Building wheel for MarkupSafe (setup.py): finished with status 'done'\r\n  Created wheel for MarkupSafe: filename=MarkupSafe-1.1.1-cp37-cp37m-linux_x86_64.whl size=34388 sha256=a761f9e3c8ef3db6112063673630a3c13c8dd6013cb305c062eb3c747af75be1\r\n  Stored in directory: /root/.cache/pip/wheels/f2/aa/04/0edf07a1b8a5f5f1aed7580fffb69ce8972edc16a505916a77\r\nSuccessfully built MarkupSafe\r\nInstalling collected packages: MarkupSafe, Jinja2, Werkzeug, itsdangerous, click, flask\r\nSuccessfully installed Jinja2-2.10.1 MarkupSafe-1.1.1 Werkzeug-0.15.5 click-7.0 flask-1.1.1 itsdangerous-1.1.0\r\nRemoving intermediate container 8edd9148e33c\r\n ---> bda13e4ac8ca\r\nStep 6/16 : RUN pip install flask_sqlalchemy\r\n ---> Running in 3edfb913f6b6\r\nCollecting flask_sqlalchemy\r\n  Downloading https://files.pythonhosted.org/packages/08/ca/582442cad71504a1514a2f053006c8bb128844133d6076a4df17117545fa/Flask_SQLAlchemy-2.4.0-py2.py3-none-any.whl\r\nRequirement already satisfied: Flask>=0.10 in /usr/local/lib/python3.7/site-packages (from flask_sqlalchemy) (1.1.1)\r\nCollecting SQLAlchemy>=0.8.0 (from flask_sqlalchemy)\r\n  Downloading https://files.pythonhosted.org/packages/c2/75/6217c626fa22ad56ae5ccb1a36e7c4f17f5ca31543887e00179468d10464/SQLAlchemy-1.3.7.tar.gz (5.9MB)\r\nRequirement already satisfied: click>=5.1 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (7.0)\r\nRequirement already satisfied: itsdangerous>=0.24 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (1.1.0)\r\nRequirement already satisfied: Werkzeug>=0.15 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (0.15.5)\r\nRequirement already satisfied: Jinja2>=2.10.1 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (2.10.1)\r\nRequirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/site-packages (from Jinja2>=2.10.1->Flask>=0.10->flask_sqlalchemy) (1.1.1)\r\nBuilding wheels for collected packages: SQLAlchemy\r\n  Building wheel for SQLAlchemy (setup.py): started\r\n  Building wheel for SQLAlchemy (setup.py): finished with status 'done'\r\n  Created wheel for SQLAlchemy: filename=SQLAlchemy-1.3.7-cp37-cp37m-linux_x86_64.whl size=1196811 sha256=1f1d3c94af98e664af4fb2918122e7ad7fc3d2fc466d55c8672089c98c9d9a4b\r\n  Stored in directory: /root/.cache/pip/wheels/80/e0/68/3d11cc7209b5bd2c7d55cbb56c6bda843cc82f77c8387468ea\r\nSuccessfully built SQLAlchemy\r\nInstalling collected packages: SQLAlchemy, flask-sqlalchemy\r\nSuccessfully installed SQLAlchemy-1.3.7 flask-sqlalchemy-2.4.0\r\nRemoving intermediate container 3edfb913f6b6\r\n ---> 000565917ca3\r\nStep 7/16 : RUN pip install docker-compose\r\n ---> Running in 7311f6071c6c\r\nCollecting docker-compose\r\n  Downloading https://files.pythonhosted.org/packages/dd/e6/1521d1dfd9c0da1d1863b18e592d91c3df222e55f258b9876fa1e59bc4b5/docker_compose-1.24.1-py2.py3-none-any.whl (134kB)\r\nCollecting requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/ff/17/5cbb026005115301a8fb2f9b0e3e8d32313142fe8b617070e7baad20554f/requests-2.20.1-py2.py3-none-any.whl (57kB)\r\nCollecting jsonschema<3,>=2.5.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/77/de/47e35a97b2b05c2fadbec67d44cfcdcd09b8086951b331d82de90d2912da/jsonschema-2.6.0-py2.py3-none-any.whl\r\nCollecting docopt<0.7,>=0.6.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/a2/55/8f8cab2afd404cf578136ef2cc5dfb50baa1761b68c9da1fb1e4eed343c9/docopt-0.6.2.tar.gz\r\nCollecting docker[ssh]<4.0,>=3.7.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/09/da/7cc7ecdcd01145e9924a8ccbe9c1baf3a362fc75d4cb150676eb5231ea60/docker-3.7.3-py2.py3-none-any.whl (134kB)\r\nCollecting websocket-client<1.0,>=0.32.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/29/19/44753eab1fdb50770ac69605527e8859468f3c0fd7dc5a76dd9c4dbd7906/websocket_client-0.56.0-py2.py3-none-any.whl (200kB)\r\nCollecting dockerpty<0.5,>=0.4.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/8d/ee/e9ecce4c32204a6738e0a5d5883d3413794d7498fe8b06f44becc028d3ba/dockerpty-0.4.1.tar.gz\r\nCollecting six<2,>=1.3.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl\r\nCollecting cached-property<2,>=1.2.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/3b/86/85c1be2e8db9e13ef9a350aecd6dea292bd612fa288c2f40d035bb750ded/cached_property-1.5.1-py2.py3-none-any.whl\r\nCollecting PyYAML<4.3,>=3.10 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/9e/a3/1d13970c3f36777c583f136c136f804d70f500168edc1edea6daa7200769/PyYAML-3.13.tar.gz (270kB)\r\nCollecting texttable<0.10,>=0.9.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/02/e1/2565e6b842de7945af0555167d33acfc8a615584ef7abd30d1eae00a4d80/texttable-0.9.1.tar.gz\r\nCollecting urllib3<1.25,>=1.21.1 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/01/11/525b02e4acc0c747de8b6ccdab376331597c569c42ea66ab0a1dbd36eca2/urllib3-1.24.3-py2.py3-none-any.whl (118kB)\r\nCollecting certifi>=2017.4.17 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/69/1b/b853c7a9d4f6a6d00749e94eb6f3a041e342a885b87340b79c1ef73e3a78/certifi-2019.6.16-py2.py3-none-any.whl (157kB)\r\nCollecting chardet<3.1.0,>=3.0.2 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl (133kB)\r\nCollecting idna<2.8,>=2.5 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/4b/2a/0276479a4b3caeb8a8c1af2f8e4355746a97fab05a372e4a2c6a6b876165/idna-2.7-py2.py3-none-any.whl (58kB)\r\nCollecting docker-pycreds>=0.4.0 (from docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/f5/e8/f6bd1eee09314e7e6dee49cbe2c5e22314ccdb38db16c9fc72d2fa80d054/docker_pycreds-0.4.0-py2.py3-none-any.whl\r\nCollecting paramiko>=2.4.2; extra == \"ssh\" (from docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/4b/80/74dace9e48b0ef923633dfb5e48798f58a168e4734bca8ecfaf839ba051a/paramiko-2.6.0-py2.py3-none-any.whl (199kB)\r\nCollecting bcrypt>=3.1.3 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/fa/aa/025a3ab62469b5167bc397837c9ffc486c42a97ef12ceaa6699d8f5a5416/bcrypt-3.1.7.tar.gz (42kB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting cryptography>=2.5 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/c2/95/f43d02315f4ec074219c6e3124a87eba1d2d12196c2767fadfdc07a83884/cryptography-2.7.tar.gz (495kB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting pynacl>=1.0.1 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/61/ab/2ac6dea8489fa713e2b4c6c5b549cc962dd4a842b5998d9e80cf8440b7cd/PyNaCl-1.3.0.tar.gz (3.4MB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting cffi>=1.1 (from bcrypt>=3.1.3->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\nCollecting asn1crypto>=0.21.0 (from cryptography>=2.5->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/ea/cd/35485615f45f30a510576f1a56d1e0a7ad7bd8ab5ed7cdc600ef7cd06222/asn1crypto-0.24.0-py2.py3-none-any.whl (101kB)\r\nCollecting pycparser (from cffi>=1.1->bcrypt>=3.1.3->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\nBuilding wheels for collected packages: bcrypt, cryptography, pynacl\r\n  Building wheel for bcrypt (PEP 517): started\r\n  Building wheel for bcrypt (PEP 517): finished with status 'done'\r\n  Created wheel for bcrypt: filename=bcrypt-3.1.7-cp37-cp37m-linux_x86_64.whl size=64467 sha256=45ade7eb9bc77012669df22534b68b73766a40c3be9a7710da0e9cdd3421868c\r\n  Stored in directory: /root/.cache/pip/wheels/ae/b1/2c/dc178774d435228aff4679c4837de4d5ee1dd5568a370fc79c\r\n  Building wheel for cryptography (PEP 517): started\r\n  Building wheel for cryptography (PEP 517): finished with status 'done'\r\n  Created wheel for cryptography: filename=cryptography-2.7-cp37-cp37m-linux_x86_64.whl size=925780 sha256=98b46397e4e8516d64b4eb4e41615cc8f4eb8fd57d38e0a2713b9da8fb5214df\r\n  Stored in directory: /root/.cache/pip/wheels/d0/02/96/64b1439e5409591b6b0294d1da2f66a4ae4f0548d1bdb225b7\r\n  Building wheel for pynacl (PEP 517): started\r\n  Building wheel for pynacl (PEP 517): still running...\r\n  Building wheel for pynacl (PEP 517): finished with status 'done'\r\n  Created wheel for pynacl: filename=PyNaCl-1.3.0-cp37-cp37m-linux_x86_64.whl size=1012168 sha256=9db3bc43c8b7beed83b1116cc9eef5270241967ab6839e8912e36c893fd7f0f8\r\n  Stored in directory: /root/.cache/pip/wheels/c1/10/e7/66597ff71adf8cb7403527243c4b57c66a0d1dfdd8adf2eae4\r\nSuccessfully built bcrypt cryptography pynacl\r\nBuilding wheels for collected packages: docopt, dockerpty, PyYAML, texttable\r\n  Building wheel for docopt (setup.py): started\r\n  Building wheel for docopt (setup.py): finished with status 'done'\r\n  Created wheel for docopt: filename=docopt-0.6.2-py2.py3-none-any.whl size=13704 sha256=cdf39f12bb32d6a3baf2a16104e3c0c1540813dffdd72a7f2309862d4abbeb36\r\n  Stored in directory: /root/.cache/pip/wheels/9b/04/dd/7daf4150b6d9b12949298737de9431a324d4b797ffd63f526e\r\n  Building wheel for dockerpty (setup.py): started\r\n  Building wheel for dockerpty (setup.py): finished with status 'done'\r\n  Created wheel for dockerpty: filename=dockerpty-0.4.1-cp37-none-any.whl size=16606 sha256=534173e33ed8638cd307ac9ae2b3cc12ae43576d403eb1766c4b76835e4b9b51\r\n  Stored in directory: /root/.cache/pip/wheels/e5/1e/86/bd0a97a0907c6c654af654d5875d1d4383dd1f575f77cee4aa\r\n  Building wheel for PyYAML (setup.py): started\r\n  Building wheel for PyYAML (setup.py): finished with status 'done'\r\n  Created wheel for PyYAML: filename=PyYAML-3.13-cp37-cp37m-linux_x86_64.whl size=43086 sha256=e2835ee80ed3ae77a73e994e1e8e597f1c2eb45812418cf2b4121bf1da59e5af\r\n  Stored in directory: /root/.cache/pip/wheels/ad/da/0c/74eb680767247273e2cf2723482cb9c924fe70af57c334513f\r\n  Building wheel for texttable (setup.py): started\r\n  Building wheel for texttable (setup.py): finished with status 'done'\r\n  Created wheel for texttable: filename=texttable-0.9.1-cp37-none-any.whl size=9970 sha256=7c72054709636cdb461ed4ab1062fefca7e0cb6c40146318a1057ebdf6e993bb\r\n  Stored in directory: /root/.cache/pip/wheels/99/1e/2b/8452d3a48dad98632787556a0f2f90d56703b39cdf7d142dd1\r\nSuccessfully built docopt dockerpty PyYAML texttable\r\nInstalling collected packages: urllib3, certifi, chardet, idna, requests, jsonschema, docopt, six, websocket-client, docker-pycreds, pycparser, cffi, bcrypt, asn1crypto, cryptography, pynacl, paramiko, docker, dockerpty, cached-property, PyYAML, texttable, docker-compose\r\nSuccessfully installed PyYAML-3.13 asn1crypto-0.24.0 bcrypt-3.1.7 cached-property-1.5.1 certifi-2019.6.16 cffi-1.12.3 chardet-3.0.4 cryptography-2.7 docker-3.7.3 docker-compose-1.24.1 docker-pycreds-0.4.0 dockerpty-0.4.1 docopt-0.6.2 idna-2.7 jsonschema-2.6.0 paramiko-2.6.0 pycparser-2.19 pynacl-1.3.0 requests-2.20.1 six-1.12.0 texttable-0.9.1 urllib3-1.24.3 websocket-client-0.56.0\r\nRemoving intermediate container 7311f6071c6c\r\n ---> 9854b6269aa7\r\nStep 8/16 : RUN apk add mariadb-connector-c-dev\r\n ---> Running in b70de97ac0a1\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/3) Installing zlib-dev (1.2.11-r1)\r\n(2/3) Installing mariadb-connector-c (3.0.8-r0)\r\n(3/3) Installing mariadb-connector-c-dev (3.0.8-r0)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 203 MiB in 60 packages\r\nRemoving intermediate container b70de97ac0a1\r\n ---> e9fab703a873\r\nStep 9/16 : RUN pip install mysqlclient\r\n ---> Running in 8f3d6e7785da\r\nCollecting mysqlclient\r\n  Downloading https://files.pythonhosted.org/packages/4d/38/c5f8bac9c50f3042c8f05615f84206f77f03db79781db841898fde1bb284/mysqlclient-1.4.4.tar.gz (86kB)\r\nBuilding wheels for collected packages: mysqlclient\r\n  Building wheel for mysqlclient (setup.py): started\r\n  Building wheel for mysqlclient (setup.py): finished with status 'done'\r\n  Created wheel for mysqlclient: filename=mysqlclient-1.4.4-cp37-cp37m-linux_x86_64.whl size=113699 sha256=2c3d48c9a084fc902718f321cf4910d1f448d6e6c12fcfaf6b1bc80a758edad8\r\n  Stored in directory: /root/.cache/pip/wheels/a0/04/57/031b9b01df38999df7dc7f4ee998a98ecdbd2d781f73e3ffbf\r\nSuccessfully built mysqlclient\r\nInstalling collected packages: mysqlclient\r\nSuccessfully installed mysqlclient-1.4.4\r\nRemoving intermediate container 8f3d6e7785da\r\n ---> 57330613ad20\r\nStep 10/16 : ARG DOCKER_CLI_VERSION=\"19.03.1\"\r\n ---> Running in bfb084c0732f\r\nRemoving intermediate container bfb084c0732f\r\n ---> 7e4b0be5e81a\r\nStep 11/16 : ENV DOWNLOAD_URL=\"https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_CLI_VERSION.tgz\"\r\n ---> Running in 6cd720f10fa8\r\nRemoving intermediate container 6cd720f10fa8\r\n ---> 49ce6fbfd29f\r\nStep 12/16 : RUN apk add curl     && mkdir -p /tmp/download     && curl -L $DOWNLOAD_URL | tar -xz -C /tmp/download     && mv /tmp/download/docker/docker /usr/local/bin/     && rm -rf /tmp/download     && rm -rf /var/cache/apk/*\r\n ---> Running in 1d5b4bee16c5\r\n(1/4) Installing nghttp2-libs (1.35.1-r0)\r\n(2/4) Installing libssh2 (1.8.2-r0)\r\n(3/4) Installing libcurl (7.64.0-r2)\r\n(4/4) Installing curl (7.64.0-r2)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 204 MiB in 64 packages\r\n\u001b[91m  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\u001b[0m\u001b[91m\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\u001b[0m\u001b[91m\r  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\u001b[0m\u001b[91m\r  5 60.3M    5 3184k    0     0  1315k      0  0:00:46  0:00:02  0:00:44 1315k\u001b[0m\u001b[91m\r  6 60.3M    6 4156k    0     0  1275k      0  0:00:48 \u001b[0m\u001b[91m 0:00:03  0:00:45 1274k\u001b[0m\u001b[91m\r  8 60.3M    8 5108k    0     0  1198k      0  0:00:51  0:00:04  0:00:47 1198k\u001b[0m\u001b[91m\r  9 60.3M    9 6016k    0     0  1143k      0  0:00:54  0:00:05  0:00:49 1252k\u001b[0m\u001b[91m\r 11 60.3M   11 6996k    0     0  1117k      0  0:00:55  0:00:06  0:00:49 1469k\u001b[0m\u001b[91m\r 13 60.3M   13 8085k    0     0  1113k      0  0:00:55  0:00:07  0:00:48 1012k\u001b[0m\u001b[91m\r 14 60.3M   14 9070k    0     0  1098k      0  0:00:56  0:00:08  0:00:48  982k\u001b[0m\u001b[91m\r 16 60.3M   16  9.8M    0     0  1091k      0  0:00:56  0:00:09  0:00:47  999k\u001b[0m\u001b[91m\r 17 60.3M   17 10.7M    0     0  1074k      0  0:00:57  0:00:10  0:00:47 1001k\u001b[0m\u001b[91m\r 19 60.3M   19 11.6M    0     0  1061k      0  0:00:58  0:00:11  0:00:47  991k\u001b[0m\u001b[91m\r 20 60.3M   20 12.4M    0     0  1035k      0  0:00:59  0:00:12  0:00:47  922k\u001b[0m\u001b[91m\r 21 60.3M   21 13.0M    0     0  1006k      0  0:01:01  0:00:13  0:00:48  854k\u001b[0m\u001b[91m\r 22 60.3M   22 13.7M    0     0   984k      0  0:01:02  0:00:14  0:00:48  787k\u001b[0m\u001b[91m\r 24 60.3M   24 14.5M    0     0   974k      0  0:01:03  0:00:15  0:00:48  768k\u001b[0m\u001b[91m\r 25 60.3M   25 15.4M    0     0   970k      0  0:01:03  0:00:16  0:00:47  766k\u001b[0m\u001b[91m\r 27 60.3M   27 16.4M    0     0   974k      0  0:01:03  0:00:17  0:00:46  822k\u001b[0m\u001b[91m\r 29 60.3M   29 17.5M    0     0   983k      0  0:01:02  0:00:18  0:00:44  922k\u001b[0m\u001b[91m\r 30 60.3M   30 18.4M    0     0   983k      0  0:01:02  0:00:19  0:00:43  979k\u001b[0m\u001b[91m\r 32 60.3M   32 19.5M    0     0   987k      0  0:01:02  0:00:20  0:00:42 1028k\u001b[0m\u001b[91m\r 33 60.3M   33 20.4M    0     0   986k      0  0:01:02  0:00:21  0:00:41 1037k\u001b[0m\u001b[91m\r 35 60.3M   35 21.4M    0     0   985k      0  0:01:02  0:00:22  0:00:40 1021k\u001b[0m\u001b[91m\r 37 60.3M   37 22.4M    0     0   987k      0  0:01:02  0:00:23  0:00:39 1000k\u001b[0m\u001b[91m\r 39 60.3M   39 23.5M    0     0   994k      0  0:01:02  0:00:24  0:00:38 1036k\u001b[0m\u001b[91m\r 40 60.3M   40 24.6M    0     0  1000k      0  0:01:01  0:00:25  0:00:36 1052k\u001b[0m\u001b[91m\r 42 60.3M   42 25.7M    0     0  1002k      0  0:01:01  0:00:26  0:00:35 1072k\u001b[0m\u001b[91m\r 44 60.3M   44 26.6M    0     0  1001k      0  0:01:01  0:00:27  0:00:34 1071k\u001b[0m\u001b[91m\r 45 60.3M   45 27.5M    0     0   999k      0  0:01:01  0:00:28  0:00:33 1058k\u001b[0m\u001b[91m\r 47 60.3M   47 28.6M    0     0  1001k      0  0:01:01  0:00:29  0:00:32 1033k\u001b[0m\u001b[91m\r 49 60.3M   49 29.6M    0     0  1002k      0  0:01:01  0:00:30  0:00:31 1012k\u001b[0m\u001b[91m\r 50 60.3M   50 30.3M    0     0   995k      0  0:01:02  0:00:31  0:00:31  956k\u001b[0m\u001b[91m\r 51 60.3M   51 31.0M    0     0   986k      0  0:01:02  0:00:32  0:00:30  907k\u001b[0m\u001b[91m\r 52 60.3M   52 31.8M    0     0   981k      0  0:01:02  0:00:33  0:00:29  878k\u001b[0m\u001b[91m\r 54 60.3M   54 32.7M    0     0   980k      0  0:01:03  0:00:34  0:00:29  857k\u001b[0m\u001b[91m\r 56 60.3M   56 33.7M    0     0   981k      0  0:01:02  0:00:35  0:00:27  853k\u001b[0m\u001b[91m\r 57 60.3M   57 34.9M    0     0   986k      0  0:01:02  0:00:36  0:00:26  928k\u001b[0m\u001b[91m\r 59 60.3M   59 35.9M    0     0   988k      0  0:01:02  0:00:37  0:00:25 1001k\u001b[0m\u001b[91m\r 61 60.3M   61 36.8M    0     0   986k      0  0:01:02  0:00:38  0:00:24 1020k\u001b[0m\u001b[91m\r 62 60.3M   62 37.9M    0     0   990k      0  0:01:02  0:00:39  0:00:23 1064k\u001b[0m\u001b[91m\r 64 60.3M   64 38.9M    0     0   989k      0  0:01:02  0:00:40  0:00:22 1045k\u001b[0m\u001b[91m\r 66 60.3M   66 39.8M    0     0   988k      0  0:01:02  0:00:41  0:00:21 1004k\u001b[0m\u001b[91m\r 67 60.3M   67 40.6M    0     0   983k      0  0:01:02  0:00:42  0:00:20  948k\u001b[0m\u001b[91m\r 68 60.3M   68 41.4M    0     0   981k      0  0:01:02  0:00:43  0:00:19  940k\u001b[0m\u001b[91m\r 70 60.3M   70 42.4M    0     0   981k      0  0:01:02  0:00:44  0:00:18  905k\u001b[0m\u001b[91m\r 72 60.3M   72 43.4M    0     0   983k      0  0:01:02  0:00:45  0:00:17  937k\u001b[0m\u001b[91m\r 74 60.3M   74 44.6M    0     0   988k      0  0:01:02  0:00:46  0:00:16  986k\u001b[0m\u001b[91m\r 75 60.3M   75 45.8M    0     0   992k      0  0:01:02  0:00:47  0:00:15 1069k\u001b[0m\u001b[91m\r 77 60.3M   77 46.8M    0     0   993k      0  0:01:02  0:00:48  0:00:14 1096k\u001b[0m\u001b[91m\r 79 60.3M   79 47.7M    0     0   992k      0  0:01:02  0:00:49  0:00:13 1095k\u001b[0m\u001b[91m\r 80 60.3M   80 48.7M    0     0   992k      0  0:01:02  0:00:50  0:00:12 1072k\u001b[0m\u001b[91m\r 82 60.3M   82 49.7M    0     0   993k      0  0:01:02  0:00:51  0:00:11 1048k\u001b[0m\u001b[91m\r 84 60.3M   84 50.9M    0     0   997k      0  0:01:01  0:00:52  0:00:09 1039k\u001b[0m\u001b[91m\r 85 60.3M   85 51.8M    0     0   996k      0  0:01:01  0:00:53  0:00:08 1031k\u001b[0m\u001b[91m\r 87 60.3M   87 52.8M    0     0   997k      0  0:01:01  0:00:54  0:00:07 1046k\u001b[0m\u001b[91m\r 89 60.3M   89 53.7M    0     0   996k      0  0:01:01  0:00:55  0:00:06 1037k\u001b[0m\u001b[91m\r 90 60.3M   90 54.4M    0     0   990k      0  0:01:02  0:00:56  0:00:06  954k\u001b[0m\u001b[91m\r 91 60.3M   91 54.9M    0     0   983k      0  0:01:02  0:00:57  0:00:05  837k\u001b[0m\u001b[91m\r 92 60.3M   92 55.6M    0     0   978k      0  0:01:03  0:00:58  0:00:05  779k\u001b[0m\u001b[91m\r 93 60.3M   93 56.4M    0     0   974k      0  0:01:03  0:00:59  0:00:04  727k\u001b[0m\u001b[91m\r 94 60.3M   94 57.3M    0     0   973k      0  0:01:03  0:01:00  0:00:03  720k\u001b[0m\u001b[91m\r 96 60.3M   96 58.2M    0     0   974k      0  0:01:03  0:01:01  0:00:02  795k\u001b[0m\u001b[91m\r 98 60.3M   98 59.3M    0     0   976k      0  0:01:03  0:01:02  0:00:01  900k\u001b[0m\u001b[91m\r100 60.3M  100 60.3M    0     0   979k      0  0:01:03  0:01:03 --:--:--  999k\r\n\u001b[0mRemoving intermediate container 1d5b4bee16c5\r\n ---> d63b3d64f727\r\nStep 13/16 : COPY src /src/\r\n ---> c99590fe5166\r\nStep 14/16 : RUN mkdir /data\r\n ---> Running in 0872588f2f82\r\nRemoving intermediate container 0872588f2f82\r\n ---> d7c963b940e8\r\nStep 15/16 : EXPOSE 5000\r\n ---> Running in 15ed3da367d7\r\nRemoving intermediate container 15ed3da367d7\r\n ---> 84488629c6e9\r\nStep 16/16 : ENTRYPOINT [\"python\", \"/src/mdnssec.py\"]\r\n ---> Running in eb4a4dfba902\r\nRemoving intermediate container eb4a4dfba902\r\n ---> 7f6ea43517a6\r\n\u001b[2K\r\r\r\nSuccessfully built 7f6ea43517a6\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\r\n\r\n{\"services\": {\"api\": {\"stack_api\": {\"cmd\": [], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"api\", \"com.docker.compose.config-hash\": \"4c487da52f5530b8f9dc40bd59723bd3e3edf3768e1ac6c06a28f5ef546299aa\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1b:00:03\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.27.0.3\", \"aliases\": [\"api\", \"4301c7f3e979\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:64:05\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.100.5\", \"aliases\": [\"api\", \"4301c7f3e979\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\"}}, \"mysql_replication_db\": {\"stack_api_replication_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_replication_db\", \"com.docker.compose.config-hash\": \"8225f4fdcb612f424ca0c1154dcb4bfcbc2e9f04002ebaaf6599d359f651612f\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"db_replication_net\": {\"macAddress\": \"02:42:0a:00:64:04\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.100.4\", \"aliases\": [\"7d4e4aea89b9\", \"mysql_replication_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\"}}, \"mysql_db\": {\"stack_api_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_db\", \"com.docker.compose.config-hash\": \"1d1bdeeaa94f876c9033158837fc7ceb034a71f6a082b0230df54ff138fc4d1f\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1b:00:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.27.0.2\", \"aliases\": [\"4245d4735999\", \"mysql_db\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:64:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.100.2\", \"aliases\": [\"4245d4735999\", \"mysql_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\"}}}, \"invocation\": {\"module_args\": {\"project_src\": \"/home/alfred/management\", \"hostname_check\": false, \"recreate\": \"smart\", \"docker_host\": \"unix://var/run/docker.sock\", \"remove_images\": null, \"client_key\": null, \"scale\": null, \"nocache\": false, \"remove_volumes\": false, \"state\": \"present\", \"build\": true, \"client_cert\": null, \"api_version\": \"auto\", \"files\": null, \"project_name\": null, \"ca_cert\": null, \"definition\": null, \"tls_hostname\": \"localhost\", \"dependencies\": true, \"services\": null, \"tls\": false, \"pull\": false, \"remove_orphans\": false, \"restarted\": false, \"ssl_version\": null, \"stopped\": false, \"timeout\": 10, \"debug\": false, \"validate_certs\": false}}, \"changed\": true, \"ansible_facts\": {\"api\": {\"stack_api\": {\"cmd\": [], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"api\", \"com.docker.compose.config-hash\": \"4c487da52f5530b8f9dc40bd59723bd3e3edf3768e1ac6c06a28f5ef546299aa\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1b:00:03\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.27.0.3\", \"aliases\": [\"api\", \"4301c7f3e979\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:64:05\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.100.5\", \"aliases\": [\"api\", \"4301c7f3e979\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\"}}, \"mysql_replication_db\": {\"stack_api_replication_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_replication_db\", \"com.docker.compose.config-hash\": \"8225f4fdcb612f424ca0c1154dcb4bfcbc2e9f04002ebaaf6599d359f651612f\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"db_replication_net\": {\"macAddress\": \"02:42:0a:00:64:04\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.100.4\", \"aliases\": [\"7d4e4aea89b9\", \"mysql_replication_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\"}}, \"mysql_db\": {\"stack_api_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_db\", \"com.docker.compose.config-hash\": \"1d1bdeeaa94f876c9033158837fc7ceb034a71f6a082b0230df54ff138fc4d1f\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1b:00:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.27.0.2\", \"aliases\": [\"4245d4735999\", \"mysql_db\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:64:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.100.2\", \"aliases\": [\"4245d4735999\", \"mysql_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\"}}}}\r\n", "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error", "rc": 0}
2019-08-21 16:48:50,836 p=22788 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 16:48:50,837 p=22788 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=28   changed=14   unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2019-08-21 16:50:50,396 p=25027 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 16:50:50,449 p=25027 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 16:50:50,470 p=25027 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:50:50,487 p=25027 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 16:50:55,261 p=25027 u=aar |  fatal: [mdnssec.ri.mu.afrinic.net]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: Could not resolve hostname mdnssec.ri.mu.afrinic.net: Name or service not known", "unreachable": true}
2019-08-21 16:50:55,265 p=25027 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 16:50:55,266 p=25027 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=0    changed=0    unreachable=1    failed=0    skipped=1    rescued=0    ignored=0   
2019-08-21 16:50:59,372 p=25086 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 16:50:59,427 p=25086 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 16:50:59,447 p=25086 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:50:59,463 p=25086 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 16:50:59,511 p=25086 u=aar |  fatal: [mdnssec.ri.mu.afrinic.net]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: Could not resolve hostname mdnssec.ri.mu.afrinic.net: Name or service not known", "unreachable": true}
2019-08-21 16:50:59,513 p=25086 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 16:50:59,513 p=25086 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=0    changed=0    unreachable=1    failed=0    skipped=1    rescued=0    ignored=0   
2019-08-21 16:51:06,266 p=25143 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 16:51:06,318 p=25143 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 16:51:06,339 p=25143 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:51:06,357 p=25143 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 16:51:38,646 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:51:38,686 p=25143 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 16:51:49,623 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:51:49,666 p=25143 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 16:52:02,190 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:52:02,227 p=25143 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 16:52:02,246 p=25143 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:52:02,265 p=25143 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 16:52:02,282 p=25143 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:52:02,303 p=25143 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 16:52:11,422 p=25143 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:52:11,463 p=25143 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 16:52:11,481 p=25143 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:52:11,501 p=25143 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 16:52:20,303 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:52:20,346 p=25143 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 16:52:20,363 p=25143 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:52:20,383 p=25143 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 16:52:28,811 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:52:28,851 p=25143 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 16:52:36,663 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:52:36,709 p=25143 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 16:52:44,562 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:52:44,603 p=25143 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 16:52:52,732 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:52:52,778 p=25143 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 16:53:02,523 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:53:02,558 p=25143 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 16:53:11,048 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:53:11,085 p=25143 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 16:53:19,140 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:53:19,181 p=25143 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 16:53:27,030 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:53:27,072 p=25143 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 16:53:34,511 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:53:34,551 p=25143 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 16:53:42,772 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:53:42,815 p=25143 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 16:57:01,517 p=25143 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:57:01,557 p=25143 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 16:57:08,790 p=25143 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:57:08,830 p=25143 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 16:57:18,023 p=25143 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:57:18,099 p=25143 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 16:57:31,705 p=25143 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:57:31,774 p=25143 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 16:57:41,706 p=25143 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:57:41,781 p=25143 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 16:57:49,733 p=25143 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:57:49,809 p=25143 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 16:58:08,268 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 16:58:08,304 p=25143 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 17:00:49,947 p=25143 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:00:50,014 p=25143 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 17:00:56,956 p=25143 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:00:57,023 p=25143 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 17:01:04,218 p=25143 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:01:04,242 p=25143 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 17:01:11,142 p=25143 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:01:11,232 p=25143 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 17:01:23,520 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:01:23,540 p=25143 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 17:01:31,255 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:01:31,332 p=25143 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 17:01:42,846 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:01:42,894 p=25143 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-21 17:02:07,008 p=25143 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:02:07,051 p=25143 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-21 17:02:15,112 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:02:15,156 p=25143 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-21 17:02:22,795 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:02:22,833 p=25143 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-21 17:02:30,451 p=25143 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:02:30,493 p=25143 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-21 17:02:39,273 p=25143 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:02:39,281 p=25143 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 17:02:39,281 p=25143 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=13   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-21 17:16:20,406 p=26740 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 17:16:20,462 p=26740 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 17:16:20,485 p=26740 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:16:20,511 p=26740 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 17:17:01,025 p=26740 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:17:01,042 p=26740 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 17:17:10,285 p=26740 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:17:10,317 p=26740 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 17:17:22,724 p=26740 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:17:22,762 p=26740 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 17:17:22,781 p=26740 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:17:22,797 p=26740 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 17:17:22,814 p=26740 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:17:22,829 p=26740 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 17:17:33,215 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:17:33,248 p=26740 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 17:17:33,265 p=26740 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:17:33,283 p=26740 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 17:17:41,693 p=26740 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:17:41,725 p=26740 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 17:17:41,740 p=26740 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:17:41,757 p=26740 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 17:17:49,842 p=26740 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:17:49,870 p=26740 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 17:17:57,668 p=26740 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:17:57,721 p=26740 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 17:18:05,660 p=26740 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:18:05,701 p=26740 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 17:18:13,718 p=26740 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:18:13,763 p=26740 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 17:18:21,963 p=26740 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:18:22,013 p=26740 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 17:18:30,124 p=26740 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:18:30,160 p=26740 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 17:18:38,132 p=26740 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:18:38,156 p=26740 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 17:18:45,998 p=26740 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:18:46,029 p=26740 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 17:18:53,450 p=26740 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:18:53,488 p=26740 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 17:19:01,365 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:19:01,390 p=26740 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 17:23:20,849 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:23:20,888 p=26740 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 17:23:27,812 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:23:27,843 p=26740 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 17:23:34,737 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:23:34,773 p=26740 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 17:23:41,699 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:23:41,741 p=26740 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 17:23:48,661 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:23:48,700 p=26740 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 17:23:55,596 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:23:55,619 p=26740 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 17:24:10,974 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:24:11,014 p=26740 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 17:27:01,091 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:27:01,126 p=26740 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 17:27:08,058 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:27:08,105 p=26740 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 17:27:15,001 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:27:15,039 p=26740 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 17:27:21,941 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:27:21,981 p=26740 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 17:27:37,255 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:27:37,298 p=26740 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 17:27:44,679 p=26740 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 17:27:44,706 p=26740 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 18:04:43,877 p=26651 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 18:04:43,946 p=26651 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-21 18:05:24,062 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:05:24,076 p=26651 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 18:05:24,092 p=26651 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:05:24,124 p=26651 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 18:05:53,938 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:05:53,999 p=26651 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 18:06:05,610 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:06:05,627 p=26651 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 18:06:20,357 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:06:20,393 p=26651 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 18:06:20,410 p=26651 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:06:20,424 p=26651 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 18:06:20,439 p=26651 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:06:20,456 p=26651 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 18:06:33,584 p=26651 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:06:33,618 p=26651 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 18:06:33,635 p=26651 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:06:33,650 p=26651 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 18:06:44,315 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:06:44,331 p=26651 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 18:06:44,347 p=26651 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:06:44,363 p=26651 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 18:06:55,895 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:06:55,910 p=26651 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 18:07:06,753 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:07:06,767 p=26651 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 18:07:17,472 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:07:17,486 p=26651 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 18:07:28,352 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:07:28,368 p=26651 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 18:07:38,373 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:07:38,390 p=26651 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 18:07:48,377 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:07:48,413 p=26651 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 18:08:00,456 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:08:00,473 p=26651 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 18:08:09,980 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:08:09,996 p=26651 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 18:08:19,534 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:08:19,548 p=26651 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 18:08:29,654 p=26651 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:08:29,692 p=26651 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 18:12:48,501 p=26651 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:12:48,519 p=26651 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 18:12:57,515 p=26651 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:12:57,531 p=26651 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 18:13:06,330 p=26651 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:13:06,348 p=26651 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 18:13:15,237 p=26651 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:13:15,256 p=26651 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 18:13:24,139 p=26651 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:13:24,159 p=26651 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 18:13:33,257 p=26651 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:13:33,278 p=26651 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 18:13:48,417 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:13:48,436 p=26651 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 18:16:34,295 p=26651 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:16:34,314 p=26651 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 18:16:43,210 p=26651 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:16:43,230 p=26651 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 18:16:52,127 p=26651 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:16:52,146 p=26651 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 18:17:00,924 p=26651 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:17:00,969 p=26651 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 18:17:16,187 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:17:16,230 p=26651 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 18:17:25,830 p=26651 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:17:25,860 p=26651 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 18:31:38,581 p=11944 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 18:31:38,622 p=11944 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-21 18:32:12,368 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:32:12,384 p=11944 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 18:32:12,402 p=11944 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:32:12,420 p=11944 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 18:32:47,964 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:32:48,032 p=11944 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 18:32:59,747 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:32:59,783 p=11944 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 18:33:14,729 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:33:14,769 p=11944 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 18:33:14,785 p=11944 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:33:14,800 p=11944 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 18:33:14,815 p=11944 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:33:14,832 p=11944 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 18:33:28,142 p=11944 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:33:28,157 p=11944 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 18:33:28,174 p=11944 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:33:28,189 p=11944 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 18:33:39,189 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:33:39,203 p=11944 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 18:33:39,220 p=11944 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:33:39,237 p=11944 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 18:33:50,531 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:33:50,549 p=11944 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 18:34:01,488 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:34:01,504 p=11944 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 18:34:11,939 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:34:11,953 p=11944 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 18:34:22,796 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:34:22,826 p=11944 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 18:34:33,030 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:34:33,068 p=11944 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 18:34:42,615 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:34:42,629 p=11944 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 18:34:53,084 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:34:53,100 p=11944 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 18:35:02,792 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:35:02,807 p=11944 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 18:35:12,359 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:35:12,391 p=11944 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 18:35:22,765 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:35:22,804 p=11944 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 18:39:37,842 p=11944 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:39:37,858 p=11944 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 18:39:48,282 p=11944 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:39:48,320 p=11944 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 18:39:57,432 p=11944 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:39:57,448 p=11944 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 18:40:06,324 p=11944 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:40:06,362 p=11944 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 18:40:15,330 p=11944 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:40:15,345 p=11944 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 18:40:24,349 p=11944 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:40:24,366 p=11944 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 18:40:39,712 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:40:39,747 p=11944 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 18:43:27,229 p=11944 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:43:27,267 p=11944 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 18:43:36,550 p=11944 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:43:36,594 p=11944 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 18:43:45,665 p=11944 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:43:45,708 p=11944 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 18:43:54,668 p=11944 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:43:54,707 p=11944 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 18:44:10,018 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:44:10,057 p=11944 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 18:44:19,668 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 18:44:19,702 p=11944 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 19:02:39,754 p=11944 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:02:39,794 p=11944 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-21 19:03:06,876 p=11944 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:03:06,894 p=11944 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-21 19:03:19,058 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:03:19,078 p=11944 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-21 19:03:35,239 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:03:35,260 p=11944 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-21 19:03:46,506 p=11944 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:03:46,525 p=11944 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-21 19:03:57,081 p=11944 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:03:57,083 p=11944 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 19:03:57,084 p=11944 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=35   changed=14   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-21 19:13:57,420 p=21997 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 19:13:57,474 p=21997 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 19:13:57,497 p=21997 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:13:57,516 p=21997 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 19:14:37,439 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:14:37,456 p=21997 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 19:14:51,280 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:14:51,312 p=21997 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 19:15:07,065 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:15:07,080 p=21997 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 19:15:07,097 p=21997 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:15:07,112 p=21997 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 19:15:07,128 p=21997 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:15:07,145 p=21997 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 19:15:22,144 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:15:22,175 p=21997 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 19:15:22,192 p=21997 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:15:22,209 p=21997 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 19:15:35,219 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:15:35,255 p=21997 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 19:15:35,273 p=21997 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:15:35,289 p=21997 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 19:15:48,224 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:15:48,241 p=21997 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 19:16:00,901 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:16:00,919 p=21997 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 19:16:13,002 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:16:13,033 p=21997 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 19:16:25,087 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:16:25,105 p=21997 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 19:16:37,182 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:16:37,198 p=21997 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 19:16:48,738 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:16:48,757 p=21997 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 19:17:00,449 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:17:00,469 p=21997 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 19:17:11,165 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:17:11,211 p=21997 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 19:17:22,487 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:17:22,531 p=21997 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 19:17:34,210 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:17:34,229 p=21997 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 19:23:50,240 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:23:50,259 p=21997 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 19:24:07,966 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:24:07,984 p=21997 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 19:24:24,935 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:24:24,951 p=21997 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 19:24:41,547 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:24:41,562 p=21997 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 19:24:53,913 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:24:53,931 p=21997 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 19:25:09,423 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:25:09,442 p=21997 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 19:25:36,718 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:25:36,735 p=21997 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 19:30:56,002 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:30:56,022 p=21997 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 19:31:11,155 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:31:11,176 p=21997 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 19:31:28,874 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:31:28,893 p=21997 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 19:31:48,326 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:31:48,346 p=21997 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 19:32:18,331 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:32:18,369 p=21997 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 19:32:36,765 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:32:36,785 p=21997 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 19:33:17,444 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:33:17,466 p=21997 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-21 19:33:49,992 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:33:50,010 p=21997 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-21 19:34:04,940 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:34:04,960 p=21997 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-21 19:34:21,742 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:34:21,783 p=21997 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-21 19:34:39,337 p=21997 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:34:39,356 p=21997 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-21 19:34:56,543 p=21997 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:34:56,547 p=21997 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 19:34:56,547 p=21997 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=15   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-21 19:48:55,989 p=23875 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 19:48:56,045 p=23875 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 19:48:56,067 p=23875 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:48:56,089 p=23875 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 19:49:47,442 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:49:47,479 p=23875 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 19:49:59,723 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:49:59,739 p=23875 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 19:50:16,109 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:50:16,145 p=23875 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 19:50:16,161 p=23875 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:50:16,177 p=23875 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 19:50:16,193 p=23875 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:50:16,210 p=23875 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 19:50:28,798 p=23875 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:50:28,862 p=23875 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 19:50:28,878 p=23875 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:50:28,895 p=23875 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 19:50:39,842 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:50:39,858 p=23875 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 19:50:39,873 p=23875 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:50:39,888 p=23875 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 19:50:51,542 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:50:51,575 p=23875 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 19:51:02,790 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:51:02,809 p=23875 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 19:51:15,709 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:51:15,747 p=23875 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 19:51:26,658 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:51:26,684 p=23875 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 19:51:37,197 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:51:37,213 p=23875 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 19:51:47,132 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:51:47,164 p=23875 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 19:51:57,270 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:51:57,287 p=23875 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 19:52:07,304 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:52:07,320 p=23875 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 19:52:17,145 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:52:17,161 p=23875 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 19:52:27,377 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:52:27,393 p=23875 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 19:57:12,796 p=23875 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:57:12,840 p=23875 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 19:57:22,297 p=23875 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:57:22,326 p=23875 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 19:57:31,833 p=23875 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:57:31,863 p=23875 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 19:57:41,245 p=23875 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:57:41,279 p=23875 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 19:57:50,459 p=23875 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:57:50,489 p=23875 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 19:57:59,673 p=23875 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:57:59,709 p=23875 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 19:58:15,045 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 19:58:15,078 p=23875 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 20:01:02,006 p=23875 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:01:02,023 p=23875 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 20:01:10,950 p=23875 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:01:10,990 p=23875 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 20:01:20,371 p=23875 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:01:20,413 p=23875 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 20:01:29,804 p=23875 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:01:29,841 p=23875 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 20:01:45,972 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:01:46,005 p=23875 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 20:01:57,050 p=23875 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:01:57,073 p=23875 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 20:02:22,344 p=23875 u=aar |  fatal: [mdnssec.ri.mu.afrinic.net]: FAILED! => {"changed": false, "errors": [], "module_stderr": "Creating stack_api_db ... \r\n\r\u001b[1BCreating stack_api_replication_db ... \r\n\r\u001b[1BCreating stack_api                ... \r\n\r\u001b[1B", "module_stdout": "", "msg": "Error starting project unknown cause"}
2019-08-21 20:02:22,349 p=23875 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 20:02:22,350 p=23875 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=28   changed=11   unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2019-08-21 20:12:08,269 p=25382 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 20:12:08,321 p=25382 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 20:12:08,343 p=25382 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:12:08,361 p=25382 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 20:12:55,988 p=25382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:12:56,020 p=25382 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 20:13:09,805 p=25382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:13:09,832 p=25382 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 20:13:24,651 p=25382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:13:24,685 p=25382 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 20:13:24,702 p=25382 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:13:24,724 p=25382 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 20:13:24,741 p=25382 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:13:24,761 p=25382 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 20:13:37,358 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:13:37,401 p=25382 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 20:13:37,419 p=25382 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:13:37,439 p=25382 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 20:13:48,416 p=25382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:13:48,460 p=25382 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 20:13:48,479 p=25382 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:13:48,498 p=25382 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 20:13:59,478 p=25382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:13:59,499 p=25382 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 20:14:10,325 p=25382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:14:10,365 p=25382 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 20:14:23,222 p=25382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:14:23,242 p=25382 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 20:14:34,301 p=25382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:14:34,340 p=25382 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 20:14:45,045 p=25382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:14:45,064 p=25382 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 20:14:55,484 p=25382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:14:55,521 p=25382 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 20:15:05,723 p=25382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:15:05,740 p=25382 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 20:15:15,559 p=25382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:15:15,575 p=25382 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 20:15:25,588 p=25382 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:15:25,608 p=25382 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 20:15:35,725 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:15:35,744 p=25382 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 20:21:23,001 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:21:23,020 p=25382 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 20:21:31,569 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:21:31,612 p=25382 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 20:21:40,272 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:21:40,310 p=25382 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 20:21:49,545 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:21:49,561 p=25382 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 20:21:58,346 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:21:58,383 p=25382 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 20:22:07,311 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:22:07,330 p=25382 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 20:22:26,986 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:22:27,006 p=25382 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 20:26:09,588 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:26:09,606 p=25382 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 20:26:18,596 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:26:18,615 p=25382 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 20:26:27,411 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:26:27,450 p=25382 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 20:26:36,221 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:26:36,266 p=25382 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 20:26:55,468 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:26:55,491 p=25382 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 20:27:05,206 p=25382 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:27:05,223 p=25382 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 20:46:55,502 p=25382 u=aar |   [WARNING]: Module invocation had junk after the JSON data:  ---> Running in b73b1933c140 Removing intermediate container b73b1933c140  ---> 5934929d70e6 [2K   Successfully built 5934929d70e6
Successfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0  {"services": {"api": {"stack_api": {"cmd": [], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "api", "com.docker.compose.config-hash": "80629ec10eb925320e79d2caff81b1fb277d89ec17eed130f5fb9be11c0bb539", "com.docker.compose.project": "management",
"com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress":
"02:42:c0:a8:30:03", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 20, "globalIPv6": "", "IPAddress": "192.168.48.3", "aliases": ["api", "24db50e53443"]}, "db_replication_net":
{"macAddress": "02:42:0a:00:6a:05", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.106.5", "aliases": ["api", "24db50e53443"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0"}}, "mysql_replication_db": {"stack_api_replication_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "mysql_replication_db", "com.docker.compose.config-hash": "17d7cfe6d8741224c22cc032aee25f6216ae5079f757365d8bcfb5d9b65dab5f", "com.docker.compose.project":
"management", "com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"db_replication_net": {"macAddress":
"02:42:0a:00:6a:04", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.106.4", "aliases": ["f001d1424be9", "mysql_replication_db"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0"}}, "mysql_db": {"stack_api_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "mysql_db", "com.docker.compose.config-hash": "570a58a69ef1c9b8b29901a4aaa5e82571987cadc477ed562dd2df99a9162c2a", "com.docker.compose.project": "management",
"com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress":
"02:42:c0:a8:30:02", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 20, "globalIPv6": "", "IPAddress": "192.168.48.2", "aliases": ["d35bc084c884", "mysql_db"]}, "db_replication_net":
{"macAddress": "02:42:0a:00:6a:02", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.106.2", "aliases": ["d35bc084c884", "mysql_db"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0"}}}, "invocation": {"module_args": {"project_src": "/home/alfred/management", "hostname_check": false, "recreate": "smart",
"docker_host": "unix://var/run/docker.sock", "remove_images": null, "client_key": null, "scale": null, "nocache": false, "remove_volumes": false, "state": "present", "build": true,
"client_cert": null, "api_version": "auto", "files": null, "project_name": null, "ca_cert": null, "definition": null, "tls_hostname": "localhost", "dependencies": true, "services": null,
"tls": false, "pull": false, "remove_orphans": false, "restarted": false, "ssl_version": null, "stopped": false, "timeout": 10, "debug": false, "validate_certs": false}}, "changed": true,
"ansible_facts": {"api": {"stack_api": {"cmd": [], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "api", "com.docker.compose.config-hash":
"80629ec10eb925320e79d2caff81b1fb277d89ec17eed130f5fb9be11c0bb539", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False",
"com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress": "02:42:c0:a8:30:03", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 20,
"globalIPv6": "", "IPAddress": "192.168.48.3", "aliases": ["api", "24db50e53443"]}, "db_replication_net": {"macAddress": "02:42:0a:00:6a:05", "globalIPv6PrefixLen": 0, "links": null,
"IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.106.5", "aliases": ["api", "24db50e53443"]}}, "image": "registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0"}},
"mysql_replication_db": {"stack_api_replication_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "mysql_replication_db",
"com.docker.compose.config-hash": "17d7cfe6d8741224c22cc032aee25f6216ae5079f757365d8bcfb5d9b65dab5f", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1",
"com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"db_replication_net": {"macAddress": "02:42:0a:00:6a:04", "globalIPv6PrefixLen": 0, "links":
null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.106.4", "aliases": ["f001d1424be9", "mysql_replication_db"]}}, "image": "registry.mdnssec.ri.mu.afrinic.net:5000/mysql-
slave57:1.0"}}, "mysql_db": {"stack_api_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "mysql_db",
"com.docker.compose.config-hash": "570a58a69ef1c9b8b29901a4aaa5e82571987cadc477ed562dd2df99a9162c2a", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1",
"com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress": "02:42:c0:a8:30:02", "globalIPv6PrefixLen": 0,
"links": null, "IPPrefixLen": 20, "globalIPv6": "", "IPAddress": "192.168.48.2", "aliases": ["d35bc084c884", "mysql_db"]}, "db_replication_net": {"macAddress": "02:42:0a:00:6a:02",
"globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.106.2", "aliases": ["d35bc084c884", "mysql_db"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0"}}}}

2019-08-21 20:47:00,594 p=25382 u=aar |  fatal: [mdnssec.ri.mu.afrinic.net]: FAILED! => {"changed": false, "module_stderr": "Shared connection to mdnssec.ri.mu.afrinic.net closed.\r\n", "module_stdout": "No handlers could be found for logger \"compose.config.config\"\r\nStep 1/12 : FROM oraclelinux:7-slim\r\n\u001b[2K\r7-slim: Pulling from library/oraclelinux\r\r\n\r\n\u001b[1A\u001b[2K\ra316717fc6ee: Pulling fs layer\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [>                                                  ]    440kB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==>                                                ]  1.767MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===>                                               ]   3.07MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [====>                                              ]  3.504MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [====>                                              ]  3.946MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=====>                                             ]  4.388MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=====>                                             ]  4.831MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [======>                                            ]  5.273MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [======>                                            ]  5.716MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=======>                                           ]  6.158MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=======>                                           ]    6.6MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [========>                                          ]  7.043MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [========>                                          ]  7.485MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=========>                                         ]  7.927MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=========>                                         ]   8.37MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==========>                                        ]  8.812MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==========>                                        ]  9.242MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===========>                                       ]  9.672MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===========>                                       ]  10.11MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [============>                                      ]  10.56MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [============>                                      ]     11MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=============>                                     ]  11.43MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=============>                                     ]  11.87MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==============>                                    ]  12.31MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==============>                                    ]  12.76MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===============>                                   ]  13.19MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===============>                                   ]  13.63MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [================>                                  ]  14.06MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=================>                                 ]  14.51MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=================>                                 ]  14.95MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==================>                                ]  15.38MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==================>                                ]  15.82MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===================>                               ]  16.27MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===================>                               ]   16.7MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [====================>                              ]  17.14MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [====================>                              ]  17.59MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=====================>                             ]  18.03MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=====================>                             ]  18.47MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [======================>                            ]  18.91MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [======================>                            ]  19.36MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=======================>                           ]   19.8MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=======================>                           ]  20.24MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [========================>                          ]  20.68MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [========================>                          ]  21.12MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=========================>                         ]  21.56MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=========================>                         ]  21.99MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==========================>                        ]  22.42MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==========================>                        ]  22.87MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===========================>                       ]  23.31MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===========================>                       ]  23.75MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [============================>                      ]  24.19MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [============================>                      ]  24.64MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=============================>                     ]  25.07MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=============================>                     ]  25.51MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==============================>                    ]  25.95MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==============================>                    ]  26.39MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===============================>                   ]  26.83MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===============================>                   ]  27.27MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [================================>                  ]   27.7MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=================================>                 ]  28.14MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=================================>                 ]  28.58MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==================================>                ]  29.02MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==================================>                ]  29.46MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===================================>               ]   29.9MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===================================>               ]  30.34MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [====================================>              ]  30.78MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [====================================>              ]  31.23MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=====================================>             ]  31.67MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=====================================>             ]  32.11MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [======================================>            ]  32.55MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [======================================>            ]  32.99MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=======================================>           ]  33.43MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=======================================>           ]  33.86MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [========================================>          ]   34.3MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [========================================>          ]  34.73MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=========================================>         ]  35.17MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=========================================>         ]  35.61MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==========================================>        ]  36.05MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==========================================>        ]   36.5MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===========================================>       ]  36.94MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===========================================>       ]  37.38MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [============================================>      ]  37.82MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [============================================>      ]  38.27MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=============================================>     ]  38.71MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=============================================>     ]  39.14MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==============================================>    ]  39.58MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [==============================================>    ]  40.02MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===============================================>   ]  40.46MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [===============================================>   ]   40.9MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [================================================>  ]  41.35MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=================================================> ]  41.79MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Downloading [=================================================> ]  42.23MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Verifying Checksum\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Download complete\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [>                                                  ]  458.8kB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [==>                                                ]  1.835MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [====>                                              ]   3.67MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [======>                                            ]  5.505MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [========>                                          ]   7.34MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [==========>                                        ]  8.716MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [===========>                                       ]  9.634MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [============>                                      ]  10.55MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [=============>                                     ]  11.93MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [===============>                                   ]   13.3MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [=================>                                 ]  15.14MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [===================>                               ]  16.97MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [======================>                            ]  18.81MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [========================>                          ]  20.64MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [==========================>                        ]  22.48MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [===========================>                       ]  23.86MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [==============================>                    ]  25.69MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [================================>                  ]  27.53MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [==================================>                ]  29.36MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [===================================>               ]  30.28MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [====================================>              ]   31.2MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [======================================>            ]  32.57MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [=======================================>           ]  33.49MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [========================================>          ]  34.41MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [=========================================>         ]  35.32MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [==========================================>        ]  36.24MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [============================================>      ]  38.08MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [=============================================>     ]  38.99MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [==============================================>    ]  39.91MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [===============================================>   ]  40.37MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [===============================================>   ]  40.83MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [=================================================> ]  42.21MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Extracting [==================================================>]  42.61MB/42.61MB\r\u001b[1B\u001b[1A\u001b[2K\ra316717fc6ee: Pull complete\r\u001b[1B\u001b[2K\rDigest: sha256:c5f3baff726ffd97c7e9574e803ad0e8a1e5c7de236325eed9e87f853a746e90\r\r\n\u001b[2K\rStatus: Downloaded newer image for oraclelinux:7-slim\r\r\n ---> 874477adb545\r\nStep 2/12 : ARG MYSQL_SERVER_PACKAGE=mysql-community-server-minimal-5.7.27\r\n ---> Running in 45ab93ec26b7\r\nRemoving intermediate container 45ab93ec26b7\r\n ---> 412b4698abf2\r\nStep 3/12 : ARG MYSQL_SHELL_PACKAGE=mysql-shell-8.0.17\r\n ---> Running in ee6e351422d7\r\nRemoving intermediate container ee6e351422d7\r\n ---> 1f33d5a82ff7\r\nStep 4/12 : RUN yum install -y https://repo.mysql.com/mysql-community-minimal-release-el7.rpm       https://repo.mysql.com/mysql-community-release-el7.rpm   && yum-config-manager --enable mysql57-server-minimal   && yum install -y       $MYSQL_SERVER_PACKAGE       $MYSQL_SHELL_PACKAGE       libpwquality   && yum clean all   && mkdir /docker-entrypoint-initdb.d\r\n ---> Running in 46f6ac921474\r\nLoaded plugins: ovl\r\nExamining /var/tmp/yum-root-h8Uek5/mysql-community-minimal-release-el7.rpm: mysql-community-minimal-release-el7-1.noarch\r\nMarking /var/tmp/yum-root-h8Uek5/mysql-community-minimal-release-el7.rpm to be installed\r\nExamining /var/tmp/yum-root-h8Uek5/mysql-community-release-el7.rpm: mysql80-community-release-el7-3.noarch\r\nMarking /var/tmp/yum-root-h8Uek5/mysql-community-release-el7.rpm to be installed\r\nResolving Dependencies\r\n--> Running transaction check\r\n---> Package mysql-community-minimal-release.noarch 0:el7-1 will be installed\r\n---> Package mysql80-community-release.noarch 0:el7-3 will be installed\r\n--> Finished Dependency Resolution\r\n\r\nDependencies Resolved\r\n\r\n================================================================================\r\n Package                Arch   Version\r\n                                     Repository                            Size\r\n================================================================================\r\nInstalling:\r\n mysql-community-minimal-release\r\n                        noarch el7-1 /mysql-community-minimal-release-el7  29 k\r\n mysql80-community-release\r\n                        noarch el7-3 /mysql-community-release-el7          31 k\r\n\r\nTransaction Summary\r\n================================================================================\r\nInstall  2 Packages\r\n\r\nTotal size: 60 k\r\nInstalled size: 60 k\r\nDownloading packages:\r\nRunning transaction check\r\nRunning transaction test\r\nTransaction test succeeded\r\nRunning transaction\r\n  Installing : mysql80-community-release-el7-3.noarch                       1/2 \r\n  Installing : mysql-community-minimal-release-el7-1.noarch                 2/2 \r\n  Verifying  : mysql-community-minimal-release-el7-1.noarch                 1/2 \r\n  Verifying  : mysql80-community-release-el7-3.noarch                       2/2 \r\n\r\nInstalled:\r\n  mysql-community-minimal-release.noarch 0:el7-1                                \r\n  mysql80-community-release.noarch 0:el7-3                                      \r\n\r\nComplete!\r\nLoaded plugins: ovl\r\n========================= repo: mysql57-server-minimal =========================\r\n[mysql57-server-minimal]\r\nasync = True\r\nbandwidth = 0\r\nbase_persistdir = /var/lib/yum/repos/x86_64/7Server\r\nbaseurl = http://repo.mysql.com/yum/mysql-5.7-community/docker/x86_64/\r\ncache = 0\r\ncachedir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal\r\ncheck_config_file_age = True\r\ncompare_providers_priority = 80\r\ncost = 1000\r\ndeltarpm_metadata_percentage = 100\r\ndeltarpm_percentage = \r\nenabled = 1\r\nenablegroups = True\r\nexclude = \r\nfailovermethod = priority\r\nftp_disable_epsv = False\r\ngpgcadir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal/gpgcadir\r\ngpgcakey = \r\ngpgcheck = True\r\ngpgdir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal/gpgdir\r\ngpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\nhdrdir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal/headers\r\nhttp_caching = all\r\nincludepkgs = \r\nip_resolve = \r\nkeepalive = True\r\nkeepcache = False\r\nmddownloadpolicy = sqlite\r\nmdpolicy = group:small\r\nmediaid = \r\nmetadata_expire = 21600\r\nmetadata_expire_filter = read-only:present\r\nmetalink = \r\nminrate = 0\r\nmirrorlist = \r\nmirrorlist_expire = 86400\r\nname = MySQL 5.7 Server Minimal\r\nold_base_cache_dir = \r\npassword = \r\npersistdir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal\r\npkgdir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal/packages\r\nproxy = False\r\nproxy_dict = \r\nproxy_password = \r\nproxy_username = \r\nrepo_gpgcheck = False\r\nretries = 10\r\nskip_if_unavailable = False\r\nssl_check_cert_permissions = True\r\nsslcacert = \r\nsslclientcert = \r\nsslclientkey = \r\nsslverify = True\r\nthrottle = 0\r\ntimeout = 30.0\r\nui_id = mysql57-server-minimal/x86_64\r\nui_repoid_vars = releasever,\r\n   basearch\r\nusername = \r\n\r\nLoaded plugins: ovl\r\nResolving Dependencies\r\n--> Running transaction check\r\n---> Package libpwquality.x86_64 0:1.2.3-5.el7 will be installed\r\n--> Processing Dependency: cracklib-dicts >= 2.8 for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_EXTENSION_1.1.1)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_EXTENSION_1.0)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_1.0)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: pam(x86-64) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0()(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libcrack.so.2()(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n---> Package mysql-community-server-minimal.x86_64 0:5.7.27-1.el7 will be installed\r\n--> Processing Dependency: libnuma.so.1(libnuma_1.2)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libnuma.so.1(libnuma_1.1)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1(LIBAIO_0.4)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1(LIBAIO_0.1)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libnuma.so.1()(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1()(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n---> Package mysql-shell.x86_64 0:8.0.17-1.el7 will be installed\r\n--> Running transaction check\r\n---> Package cracklib.x86_64 0:2.9.0-11.el7 will be installed\r\n--> Processing Dependency: gzip for package: cracklib-2.9.0-11.el7.x86_64\r\n---> Package cracklib-dicts.x86_64 0:2.9.0-11.el7 will be installed\r\n---> Package libaio.x86_64 0:0.3.109-13.el7 will be installed\r\n---> Package numactl-libs.x86_64 0:2.0.12-3.el7 will be installed\r\n---> Package pam.x86_64 0:1.1.8-22.el7 will be installed\r\n--> Running transaction check\r\n---> Package gzip.x86_64 0:1.5-10.el7 will be installed\r\n--> Finished Dependency Resolution\r\n\r\nDependencies Resolved\r\n\r\n================================================================================\r\n Package                     Arch   Version        Repository              Size\r\n================================================================================\r\nInstalling:\r\n libpwquality                x86_64 1.2.3-5.el7    ol7_latest              84 k\r\n mysql-community-server-minimal\r\n                             x86_64 5.7.27-1.el7   mysql57-server-minimal  15 M\r\n mysql-shell                 x86_64 8.0.17-1.el7   mysql-tools-community   15 M\r\nInstalling for dependencies:\r\n cracklib                    x86_64 2.9.0-11.el7   ol7_latest              79 k\r\n cracklib-dicts              x86_64 2.9.0-11.el7   ol7_latest             3.6 M\r\n gzip                        x86_64 1.5-10.el7     ol7_latest             129 k\r\n libaio                      x86_64 0.3.109-13.el7 ol7_latest              24 k\r\n numactl-libs                x86_64 2.0.12-3.el7   ol7_latest              29 k\r\n pam                         x86_64 1.1.8-22.el7   ol7_latest             719 k\r\n\r\nTransaction Summary\r\n================================================================================\r\nInstall  3 Packages (+6 Dependent packages)\r\n\r\nTotal download size: 34 M\r\nInstalled size: 130 M\r\nDownloading packages:\r\n\u001b[91mwarning: /var/cache/yum/x86_64/7Server/mysql57-server-minimal/packages/mysql-community-server-minimal-5.7.27-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEY\r\n\u001b[0mPublic key for mysql-community-server-minimal-5.7.27-1.el7.x86_64.rpm is not installed\r\nPublic key for mysql-shell-8.0.17-1.el7.x86_64.rpm is not installed\r\n--------------------------------------------------------------------------------\r\nTotal                                              694 kB/s |  34 MB  00:49     \r\nRetrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\n\u001b[91mImporting GPG key 0x5072E1F5:\r\n Userid     : \"MySQL Release Engineering <mysql-build@oss.oracle.com>\"\r\n Fingerprint: a4a9 4068 76fc bd3c 4567 70c8 8c71 8d3b 5072 e1f5\r\n Package    : mysql80-community-release-el7-3.noarch (installed)\r\n From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\n\u001b[0mRunning transaction check\r\nRunning transaction test\r\nTransaction test succeeded\r\nRunning transaction\r\n  Installing : libaio-0.3.109-13.el7.x86_64                                 1/9 \r\n  Installing : numactl-libs-2.0.12-3.el7.x86_64                             2/9 \r\n  Installing : gzip-1.5-10.el7.x86_64                                       3/9 \r\n  Installing : cracklib-2.9.0-11.el7.x86_64                                 4/9 \r\n  Installing : cracklib-dicts-2.9.0-11.el7.x86_64                           5/9 \r\n  Installing : pam-1.1.8-22.el7.x86_64                                      6/9 \r\n  Installing : libpwquality-1.2.3-5.el7.x86_64                              7/9 \r\n  Installing : mysql-community-server-minimal-5.7.27-1.el7.x86_64           8/9 \r\n  Installing : mysql-shell-8.0.17-1.el7.x86_64                              9/9 \r\n  Verifying  : cracklib-dicts-2.9.0-11.el7.x86_64                           1/9 \r\n  Verifying  : mysql-community-server-minimal-5.7.27-1.el7.x86_64           2/9 \r\n  Verifying  : pam-1.1.8-22.el7.x86_64                                      3/9 \r\n  Verifying  : gzip-1.5-10.el7.x86_64                                       4/9 \r\n  Verifying  : numactl-libs-2.0.12-3.el7.x86_64                             5/9 \r\n  Verifying  : cracklib-2.9.0-11.el7.x86_64                                 6/9 \r\n  Verifying  : mysql-shell-8.0.17-1.el7.x86_64                              7/9 \r\n  Verifying  : libpwquality-1.2.3-5.el7.x86_64                              8/9 \r\n  Verifying  : libaio-0.3.109-13.el7.x86_64                                 9/9 \r\n\r\nInstalled:\r\n  libpwquality.x86_64 0:1.2.3-5.el7                                             \r\n  mysql-community-server-minimal.x86_64 0:5.7.27-1.el7                          \r\n  mysql-shell.x86_64 0:8.0.17-1.el7                                             \r\n\r\nDependency Installed:\r\n  cracklib.x86_64 0:2.9.0-11.el7        cracklib-dicts.x86_64 0:2.9.0-11.el7   \r\n  gzip.x86_64 0:1.5-10.el7              libaio.x86_64 0:0.3.109-13.el7         \r\n  numactl-libs.x86_64 0:2.0.12-3.el7    pam.x86_64 0:1.1.8-22.el7              \r\n\r\nComplete!\r\nLoaded plugins: ovl\r\nCleaning repos: mysql-connectors-community mysql-tools-community\r\n              : mysql57-server-minimal mysql80-community ol7_UEKR5\r\n              : ol7_developer_EPEL ol7_latest\r\nRemoving intermediate container 46f6ac921474\r\n ---> dbb91b6734b1\r\nStep 5/12 : VOLUME /var/lib/mysql\r\n ---> Running in c307d8b0b416\r\nRemoving intermediate container c307d8b0b416\r\n ---> 73aa58a9650e\r\nStep 6/12 : COPY docker-entrypoint.sh /entrypoint.sh\r\n ---> a2f0c2eccf72\r\nStep 7/12 : COPY healthcheck.sh /healthcheck.sh\r\n ---> 2b56a38288db\r\nStep 8/12 : COPY my.cnf /etc/my.cnf\r\n ---> 82426a4062fa\r\nStep 9/12 : ENTRYPOINT [\"/entrypoint.sh\"]\r\n ---> Running in 3e6eb6a9dc78\r\nRemoving intermediate container 3e6eb6a9dc78\r\n ---> 76c7fa1bfc37\r\nStep 10/12 : HEALTHCHECK CMD /healthcheck.sh\r\n ---> Running in 70a98cf7c37b\r\nRemoving intermediate container 70a98cf7c37b\r\n ---> f2c66a7f3b86\r\nStep 11/12 : EXPOSE 3306 33060\r\n ---> Running in c09f3ecd970c\r\nRemoving intermediate container c09f3ecd970c\r\n ---> aa5a6b03af0a\r\nStep 12/12 : CMD [\"mysqld\"]\r\n ---> Running in 6cf3fe7eefe6\r\nRemoving intermediate container 6cf3fe7eefe6\r\n ---> d154eaad6fff\r\n\u001b[2K\r\r\r\nSuccessfully built d154eaad6fff\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\r\nStep 1/12 : FROM oraclelinux:7-slim\r\n ---> 874477adb545\r\nStep 2/12 : ARG MYSQL_SERVER_PACKAGE=mysql-community-server-minimal-5.7.27\r\n ---> Using cache\r\n ---> 412b4698abf2\r\nStep 3/12 : ARG MYSQL_SHELL_PACKAGE=mysql-shell-8.0.17\r\n ---> Using cache\r\n ---> 1f33d5a82ff7\r\nStep 4/12 : RUN yum install -y https://repo.mysql.com/mysql-community-minimal-release-el7.rpm       https://repo.mysql.com/mysql-community-release-el7.rpm   && yum-config-manager --enable mysql57-server-minimal   && yum install -y       $MYSQL_SERVER_PACKAGE       $MYSQL_SHELL_PACKAGE       libpwquality   && yum clean all   && mkdir /docker-entrypoint-initdb.d\r\n ---> Using cache\r\n ---> dbb91b6734b1\r\nStep 5/12 : VOLUME /var/lib/mysql\r\n ---> Using cache\r\n ---> 73aa58a9650e\r\nStep 6/12 : COPY docker-entrypoint.sh /entrypoint.sh\r\n ---> 349e1ba7173e\r\nStep 7/12 : COPY healthcheck.sh /healthcheck.sh\r\n ---> 11e0f2262976\r\nStep 8/12 : COPY my.cnf /etc/my.cnf\r\n ---> 0260992710e6\r\nStep 9/12 : ENTRYPOINT [\"/entrypoint.sh\"]\r\n ---> Running in 68ad0be35020\r\nRemoving intermediate container 68ad0be35020\r\n ---> cd2281591ff7\r\nStep 10/12 : HEALTHCHECK CMD /healthcheck.sh\r\n ---> Running in 46d8743cf8cf\r\nRemoving intermediate container 46d8743cf8cf\r\n ---> 014b38ee294b\r\nStep 11/12 : EXPOSE 3306 33060\r\n ---> Running in 20fd9323fe9d\r\nRemoving intermediate container 20fd9323fe9d\r\n ---> 579a6135b2b7\r\nStep 12/12 : CMD [\"mysqld\"]\r\n ---> Running in 25aabb532b5e\r\nRemoving intermediate container 25aabb532b5e\r\n ---> 8cb6e03488fd\r\n\u001b[2K\r\r\r\nSuccessfully built 8cb6e03488fd\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\r\nStep 1/16 : FROM python:3-alpine3.9\r\n\u001b[2K\r3-alpine3.9: Pulling from library/python\r\r\n\r\n\u001b[1A\u001b[2K\re7c96db7181b: Pulling fs layer\r\u001b[1B\r\n\u001b[1A\u001b[2K\r799a5534f213: Pulling fs layer\r\u001b[1B\r\n\u001b[1A\u001b[2K\r2ff5941e0247: Pulling fs layer\r\u001b[1B\r\n\u001b[1A\u001b[2K\r1b4faa35956d: Pulling fs layer\r\u001b[1B\r\n\u001b[1A\u001b[2K\r305af50196cd: Pulling fs layer\r\u001b[1B\u001b[2A\u001b[2K\r1b4faa35956d: Waiting\r\u001b[2B\u001b[1A\u001b[2K\r305af50196cd: Waiting\r\u001b[1B\u001b[4A\u001b[2K\r799a5534f213: Downloading [>                                                  ]  3.224kB/301.9kB\r\u001b[4B\u001b[5A\u001b[2K\re7c96db7181b: Downloading [>                                                  ]  27.86kB/2.757MB\r\u001b[5B\u001b[4A\u001b[2K\r799a5534f213: Downloading [===============>                                   ]  94.26kB/301.9kB\r\u001b[4B\u001b[5A\u001b[2K\re7c96db7181b: Downloading [===>                                               ]  175.6kB/2.757MB\r\u001b[5B\u001b[4A\u001b[2K\r799a5534f213: Downloading [========================================>          ]  244.9kB/301.9kB\r\u001b[4B\u001b[4A\u001b[2K\r799a5534f213: Downloading [==================================================>]  301.9kB/301.9kB\r\u001b[4B\u001b[4A\u001b[2K\r799a5534f213: Verifying Checksum\r\u001b[4B\u001b[4A\u001b[2K\r799a5534f213: Download complete\r\u001b[4B\u001b[5A\u001b[2K\re7c96db7181b: Downloading [=============>                                     ]  744.2kB/2.757MB\r\u001b[5B\u001b[5A\u001b[2K\re7c96db7181b: Downloading [=============================>                     ]  1.629MB/2.757MB\r\u001b[5B\u001b[5A\u001b[2K\re7c96db7181b: Downloading [==============================================>    ]  2.555MB/2.757MB\r\u001b[5B\u001b[5A\u001b[2K\re7c96db7181b: Downloading [==============================================>    ]  2.587MB/2.757MB\r\u001b[5B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [>                                                  ]  300.8kB/28.81MB\r\u001b[3B\u001b[5A\u001b[2K\re7c96db7181b: Downloading [================================================>  ]  2.653MB/2.757MB\r\u001b[5B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=>                                                 ]  603.9kB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==>                                                ]  1.202MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==>                                                ]  1.505MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===>                                               ]    1.8MB/28.81MB\r\u001b[3B\u001b[5A\u001b[2K\re7c96db7181b: Downloading [================================================>  ]  2.686MB/2.757MB\r\u001b[5B\u001b[5A\u001b[2K\re7c96db7181b: Downloading [=================================================> ]  2.718MB/2.757MB\r\u001b[5B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===>                                               ]  2.095MB/28.81MB\r\u001b[3B\u001b[5A\u001b[2K\re7c96db7181b: Verifying Checksum\r\u001b[5B\u001b[5A\u001b[2K\re7c96db7181b: Download complete\r\u001b[5B\u001b[5A\u001b[2K\re7c96db7181b: Extracting [>                                                  ]  32.77kB/2.757MB\r\u001b[5B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [====>                                              ]  2.398MB/28.81MB\r\u001b[3B\u001b[5A\u001b[2K\re7c96db7181b: Extracting [=>                                                 ]   98.3kB/2.757MB\r\u001b[5B\u001b[5A\u001b[2K\re7c96db7181b: Extracting [==========================>                        ]  1.475MB/2.757MB\r\u001b[5B\u001b[2A\u001b[2K\r1b4faa35956d: Downloading [==================================================>]     230B/230B\r\u001b[2B\u001b[2A\u001b[2K\r1b4faa35956d: Verifying Checksum\r\u001b[2B\u001b[2A\u001b[2K\r1b4faa35956d: Download complete\r\u001b[2B\u001b[5A\u001b[2K\re7c96db7181b: Extracting [==================================================>]  2.757MB/2.757MB\r\u001b[5B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [====>                                              ]  2.693MB/28.81MB\r\u001b[3B\u001b[5A\u001b[2K\re7c96db7181b: Pull complete\r\u001b[5B\u001b[4A\u001b[2K\r799a5534f213: Extracting [=====>                                             ]  32.77kB/301.9kB\r\u001b[4B\u001b[4A\u001b[2K\r799a5534f213: Extracting [==========>                                        ]  65.54kB/301.9kB\r\u001b[4B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=====>                                             ]  2.988MB/28.81MB\r\u001b[3B\u001b[4A\u001b[2K\r799a5534f213: Extracting [==================================================>]  301.9kB/301.9kB\r\u001b[4B\u001b[4A\u001b[2K\r799a5534f213: Pull complete\r\u001b[4B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=====>                                             ]  3.283MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [======>                                            ]  3.578MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [======>                                            ]  3.872MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=======>                                           ]  4.167MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [>                                                  ]  19.66kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=======>                                           ]  4.462MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [========>                                          ]  4.757MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [=>                                                 ]  59.25kB/1.863MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Downloading [==>                                                ]  79.58kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [========>                                          ]  5.052MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [==>                                                ]  100.7kB/1.863MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Downloading [===>                                               ]  121.1kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=========>                                         ]  5.343MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=========>                                         ]  5.642MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [====>                                              ]  162.3kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==========>                                        ]  5.937MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [=====>                                             ]  202.7kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==========>                                        ]  6.232MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [======>                                            ]  259.8kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===========>                                       ]  6.523MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [========>                                          ]  317.1kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===========>                                       ]  6.817MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [=========>                                         ]  349.9kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [============>                                      ]  7.112MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [============>                                      ]  7.411MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [==========>                                        ]  382.7kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=============>                                     ]  7.706MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [============>                                      ]  448.2kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=============>                                     ]  7.997MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [============>                                      ]    481kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==============>                                    ]  8.296MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [=============>                                     ]  501.5kB/1.863MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Downloading [==============>                                    ]  530.1kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==============>                                    ]  8.591MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [==============>                                    ]  550.6kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===============>                                   ]   8.89MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [===============>                                   ]  579.3kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===============>                                   ]  9.181MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [================>                                  ]  9.472MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [================>                                  ]  612.1kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [================>                                  ]  9.771MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=================>                                 ]  10.07MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [=================>                                 ]  644.8kB/1.863MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Downloading [==================>                                ]  673.5kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=================>                                 ]  10.36MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [==================>                                ]    694kB/1.863MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Downloading [====================>                              ]  759.5kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==================>                                ]  10.66MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [=====================>                             ]  792.3kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===================>                               ]  10.95MB/28.81MB\r\u001b[3B\u001b[1A\u001b[2K\r305af50196cd: Downloading [======================>                            ]    825kB/1.863MB\r\u001b[1B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===================>                               ]  11.25MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [====================>                              ]  11.54MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [====================>                              ]  11.84MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=====================>                             ]  12.13MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=====================>                             ]  12.42MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [======================>                            ]  12.72MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [======================>                            ]  13.02MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=======================>                           ]  13.32MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=======================>                           ]  13.61MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [========================>                          ]  13.91MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [========================>                          ]   14.2MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=========================>                         ]   14.5MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=========================>                         ]  14.79MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==========================>                        ]  15.08MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==========================>                        ]  15.38MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===========================>                       ]  15.67MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===========================>                       ]  15.97MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [============================>                      ]  16.26MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [============================>                      ]  16.56MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=============================>                     ]  16.85MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=============================>                     ]  17.15MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==============================>                    ]  17.44MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==============================>                    ]  17.74MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===============================>                   ]  18.03MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===============================>                   ]  18.33MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [================================>                  ]  18.63MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [================================>                  ]  18.92MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=================================>                 ]  19.21MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=================================>                 ]  19.51MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==================================>                ]   19.8MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==================================>                ]   20.1MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===================================>               ]   20.4MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===================================>               ]  20.69MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [====================================>              ]  20.99MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [====================================>              ]  21.28MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=====================================>             ]  21.58MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=====================================>             ]  21.87MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [======================================>            ]  22.17MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [======================================>            ]  22.46MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=======================================>           ]  22.76MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=======================================>           ]  23.05MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [========================================>          ]  23.34MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=========================================>         ]  23.64MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=========================================>         ]  23.94MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==========================================>        ]  24.23MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==========================================>        ]  24.53MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===========================================>       ]  24.83MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===========================================>       ]  25.13MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [============================================>      ]  25.42MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [============================================>      ]  25.72MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=============================================>     ]  26.01MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=============================================>     ]  26.31MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==============================================>    ]   26.6MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [==============================================>    ]  26.89MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===============================================>   ]  27.19MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [===============================================>   ]  27.48MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [================================================>  ]  27.78MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [================================================>  ]  28.08MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=================================================> ]  28.37MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Downloading [=================================================> ]  28.68MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Verifying Checksum\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Download complete\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [>                                                  ]  294.9kB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [===>                                               ]  1.769MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [=====>                                             ]  3.244MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [========>                                          ]  4.719MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [==========>                                        ]  6.193MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [============>                                      ]  7.373MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [==============>                                    ]  8.552MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [=================>                                 ]  10.03MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [===================>                               ]   11.5MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [======================>                            ]  12.98MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [=========================>                         ]  14.45MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [===========================>                       ]  15.93MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [==============================>                    ]   17.4MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [================================>                  ]  18.87MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [===================================>               ]  20.64MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [=====================================>             ]  21.82MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [========================================>          ]   23.3MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [==========================================>        ]  24.77MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [=============================================>     ]  26.25MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [===============================================>   ]  27.43MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [=================================================> ]  28.31MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [=================================================> ]  28.61MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Extracting [==================================================>]  28.81MB/28.81MB\r\u001b[3B\u001b[3A\u001b[2K\r2ff5941e0247: Pull complete\r\u001b[3B\u001b[2A\u001b[2K\r1b4faa35956d: Extracting [==================================================>]     230B/230B\r\u001b[2B\u001b[2A\u001b[2K\r1b4faa35956d: Extracting [==================================================>]     230B/230B\r\u001b[2B\u001b[2A\u001b[2K\r1b4faa35956d: Pull complete\r\u001b[2B\u001b[1A\u001b[2K\r305af50196cd: Downloading [==================================================>]  1.863MB/1.863MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Retrying in 5 seconds\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Retrying in 4 seconds\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Retrying in 3 seconds\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Retrying in 2 seconds\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Retrying in 1 second\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Downloading [>                                                  ]   11.4kB/1.022MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Downloading [====>                                              ]  94.22kB/1.022MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Downloading [===========>                                       ]  244.8kB/1.022MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Downloading [================================>                  ]  670.8kB/1.022MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Downloading [==================================================>]  1.022MB/1.022MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Verifying Checksum\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Download complete\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Extracting [>                                                  ]  32.77kB/1.863MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Extracting [=>                                                 ]  65.54kB/1.863MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Extracting [=======================>                           ]  884.7kB/1.863MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Extracting [====================================>              ]  1.376MB/1.863MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Extracting [==================================================>]  1.863MB/1.863MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Extracting [==================================================>]  1.863MB/1.863MB\r\u001b[1B\u001b[1A\u001b[2K\r305af50196cd: Pull complete\r\u001b[1B\u001b[2K\rDigest: sha256:e44a651b83916a1d1a22bec6cdc59095f51892be82d5099d4c9de74403df3c23\r\r\n\u001b[2K\rStatus: Downloaded newer image for python:3-alpine3.9\r\r\n ---> 88f1968a24d8\r\nStep 2/16 : RUN apk add --no-cache build-base\r\n ---> Running in 5106fa9c1d8c\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/20) Upgrading musl (1.1.20-r4 -> 1.1.20-r5)\r\n(2/20) Installing binutils (2.31.1-r2)\r\n(3/20) Installing libmagic (5.36-r0)\r\n(4/20) Installing file (5.36-r0)\r\n(5/20) Installing gmp (6.1.2-r1)\r\n(6/20) Installing isl (0.18-r0)\r\n(7/20) Installing libgomp (8.3.0-r0)\r\n(8/20) Installing libatomic (8.3.0-r0)\r\n(9/20) Installing libgcc (8.3.0-r0)\r\n(10/20) Installing mpfr3 (3.1.5-r1)\r\n(11/20) Installing mpc1 (1.0.3-r1)\r\n(12/20) Installing libstdc++ (8.3.0-r0)\r\n(13/20) Installing gcc (8.3.0-r0)\r\n(14/20) Installing musl-dev (1.1.20-r5)\r\n(15/20) Installing libc-dev (0.7.1-r0)\r\n(16/20) Installing g++ (8.3.0-r0)\r\n(17/20) Installing make (4.2.1-r2)\r\n(18/20) Installing fortify-headers (1.0-r0)\r\n(19/20) Installing build-base (0.5-r1)\r\n(20/20) Upgrading musl-utils (1.1.20-r4 -> 1.1.20-r5)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 176 MiB in 53 packages\r\nRemoving intermediate container 5106fa9c1d8c\r\n ---> ea34ac378fee\r\nStep 3/16 : RUN apk add --no-cache libffi-dev\r\n ---> Running in 51d0914f0233\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/3) Installing linux-headers (4.18.13-r1)\r\n(2/3) Installing pkgconf (1.6.0-r0)\r\n(3/3) Installing libffi-dev (3.2.1-r6)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 183 MiB in 56 packages\r\nRemoving intermediate container 51d0914f0233\r\n ---> 7afa819e2469\r\nStep 4/16 : RUN apk add --no-cache openssl-dev\r\n ---> Running in 0cdd38cb4e6a\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/1) Installing openssl-dev (1.1.1b-r1)\r\nOK: 202 MiB in 57 packages\r\nRemoving intermediate container 0cdd38cb4e6a\r\n ---> 1210386e84f4\r\nStep 5/16 : RUN pip install flask\r\n ---> Running in 5ad6dcffd05d\r\nCollecting flask\r\n  Downloading https://files.pythonhosted.org/packages/9b/93/628509b8d5dc749656a9641f4caf13540e2cdec85276964ff8f43bbb1d3b/Flask-1.1.1-py2.py3-none-any.whl (94kB)\r\nCollecting click>=5.1 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/fa/37/45185cb5abbc30d7257104c434fe0b07e5a195a6847506c074527aa599ec/Click-7.0-py2.py3-none-any.whl (81kB)\r\nCollecting Werkzeug>=0.15 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/d1/ab/d3bed6b92042622d24decc7aadc8877badf18aeca1571045840ad4956d3f/Werkzeug-0.15.5-py2.py3-none-any.whl (328kB)\r\nCollecting itsdangerous>=0.24 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/76/ae/44b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/itsdangerous-1.1.0-py2.py3-none-any.whl\r\nCollecting Jinja2>=2.10.1 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/1d/e7/fd8b501e7a6dfe492a433deb7b9d833d39ca74916fa8bc63dd1a4947a671/Jinja2-2.10.1-py2.py3-none-any.whl (124kB)\r\nCollecting MarkupSafe>=0.23 (from Jinja2>=2.10.1->flask)\r\n  Downloading https://files.pythonhosted.org/packages/b9/2e/64db92e53b86efccfaea71321f597fa2e1b2bd3853d8ce658568f7a13094/MarkupSafe-1.1.1.tar.gz\r\nBuilding wheels for collected packages: MarkupSafe\r\n  Building wheel for MarkupSafe (setup.py): started\r\n  Building wheel for MarkupSafe (setup.py): finished with status 'done'\r\n  Created wheel for MarkupSafe: filename=MarkupSafe-1.1.1-cp37-cp37m-linux_x86_64.whl size=34388 sha256=38b75e1be1d8319f88b1f03e7b05308c2073aaeae073507759b5d0ba0902f79a\r\n  Stored in directory: /root/.cache/pip/wheels/f2/aa/04/0edf07a1b8a5f5f1aed7580fffb69ce8972edc16a505916a77\r\nSuccessfully built MarkupSafe\r\nInstalling collected packages: click, Werkzeug, itsdangerous, MarkupSafe, Jinja2, flask\r\nSuccessfully installed Jinja2-2.10.1 MarkupSafe-1.1.1 Werkzeug-0.15.5 click-7.0 flask-1.1.1 itsdangerous-1.1.0\r\nRemoving intermediate container 5ad6dcffd05d\r\n ---> 799768b354ef\r\nStep 6/16 : RUN pip install flask_sqlalchemy\r\n ---> Running in 8bc00f702d41\r\nCollecting flask_sqlalchemy\r\n  Downloading https://files.pythonhosted.org/packages/08/ca/582442cad71504a1514a2f053006c8bb128844133d6076a4df17117545fa/Flask_SQLAlchemy-2.4.0-py2.py3-none-any.whl\r\nRequirement already satisfied: Flask>=0.10 in /usr/local/lib/python3.7/site-packages (from flask_sqlalchemy) (1.1.1)\r\nCollecting SQLAlchemy>=0.8.0 (from flask_sqlalchemy)\r\n  Downloading https://files.pythonhosted.org/packages/c2/75/6217c626fa22ad56ae5ccb1a36e7c4f17f5ca31543887e00179468d10464/SQLAlchemy-1.3.7.tar.gz (5.9MB)\r\nRequirement already satisfied: click>=5.1 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (7.0)\r\nRequirement already satisfied: itsdangerous>=0.24 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (1.1.0)\r\nRequirement already satisfied: Werkzeug>=0.15 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (0.15.5)\r\nRequirement already satisfied: Jinja2>=2.10.1 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (2.10.1)\r\nRequirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/site-packages (from Jinja2>=2.10.1->Flask>=0.10->flask_sqlalchemy) (1.1.1)\r\nBuilding wheels for collected packages: SQLAlchemy\r\n  Building wheel for SQLAlchemy (setup.py): started\r\n  Building wheel for SQLAlchemy (setup.py): finished with status 'done'\r\n  Created wheel for SQLAlchemy: filename=SQLAlchemy-1.3.7-cp37-cp37m-linux_x86_64.whl size=1196817 sha256=dc0fd25c223e33e2fa9913884ddd4edd8a3fd94e7669a1b05dae3812cd299132\r\n  Stored in directory: /root/.cache/pip/wheels/80/e0/68/3d11cc7209b5bd2c7d55cbb56c6bda843cc82f77c8387468ea\r\nSuccessfully built SQLAlchemy\r\nInstalling collected packages: SQLAlchemy, flask-sqlalchemy\r\nSuccessfully installed SQLAlchemy-1.3.7 flask-sqlalchemy-2.4.0\r\nRemoving intermediate container 8bc00f702d41\r\n ---> ad9b5c358309\r\nStep 7/16 : RUN pip install docker-compose\r\n ---> Running in 4410b85043d7\r\nCollecting docker-compose\r\n  Downloading https://files.pythonhosted.org/packages/dd/e6/1521d1dfd9c0da1d1863b18e592d91c3df222e55f258b9876fa1e59bc4b5/docker_compose-1.24.1-py2.py3-none-any.whl (134kB)\r\nCollecting requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/ff/17/5cbb026005115301a8fb2f9b0e3e8d32313142fe8b617070e7baad20554f/requests-2.20.1-py2.py3-none-any.whl (57kB)\r\nCollecting websocket-client<1.0,>=0.32.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/29/19/44753eab1fdb50770ac69605527e8859468f3c0fd7dc5a76dd9c4dbd7906/websocket_client-0.56.0-py2.py3-none-any.whl (200kB)\r\nCollecting dockerpty<0.5,>=0.4.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/8d/ee/e9ecce4c32204a6738e0a5d5883d3413794d7498fe8b06f44becc028d3ba/dockerpty-0.4.1.tar.gz\r\nCollecting PyYAML<4.3,>=3.10 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/9e/a3/1d13970c3f36777c583f136c136f804d70f500168edc1edea6daa7200769/PyYAML-3.13.tar.gz (270kB)\r\nCollecting jsonschema<3,>=2.5.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/77/de/47e35a97b2b05c2fadbec67d44cfcdcd09b8086951b331d82de90d2912da/jsonschema-2.6.0-py2.py3-none-any.whl\r\nCollecting six<2,>=1.3.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl\r\nCollecting cached-property<2,>=1.2.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/3b/86/85c1be2e8db9e13ef9a350aecd6dea292bd612fa288c2f40d035bb750ded/cached_property-1.5.1-py2.py3-none-any.whl\r\nCollecting docopt<0.7,>=0.6.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/a2/55/8f8cab2afd404cf578136ef2cc5dfb50baa1761b68c9da1fb1e4eed343c9/docopt-0.6.2.tar.gz\r\nCollecting texttable<0.10,>=0.9.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/02/e1/2565e6b842de7945af0555167d33acfc8a615584ef7abd30d1eae00a4d80/texttable-0.9.1.tar.gz\r\nCollecting docker[ssh]<4.0,>=3.7.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/09/da/7cc7ecdcd01145e9924a8ccbe9c1baf3a362fc75d4cb150676eb5231ea60/docker-3.7.3-py2.py3-none-any.whl (134kB)\r\nCollecting certifi>=2017.4.17 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/69/1b/b853c7a9d4f6a6d00749e94eb6f3a041e342a885b87340b79c1ef73e3a78/certifi-2019.6.16-py2.py3-none-any.whl (157kB)\r\nCollecting idna<2.8,>=2.5 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/4b/2a/0276479a4b3caeb8a8c1af2f8e4355746a97fab05a372e4a2c6a6b876165/idna-2.7-py2.py3-none-any.whl (58kB)\r\nCollecting urllib3<1.25,>=1.21.1 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/01/11/525b02e4acc0c747de8b6ccdab376331597c569c42ea66ab0a1dbd36eca2/urllib3-1.24.3-py2.py3-none-any.whl (118kB)\r\nCollecting chardet<3.1.0,>=3.0.2 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl (133kB)\r\nCollecting docker-pycreds>=0.4.0 (from docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/f5/e8/f6bd1eee09314e7e6dee49cbe2c5e22314ccdb38db16c9fc72d2fa80d054/docker_pycreds-0.4.0-py2.py3-none-any.whl\r\nCollecting paramiko>=2.4.2; extra == \"ssh\" (from docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/4b/80/74dace9e48b0ef923633dfb5e48798f58a168e4734bca8ecfaf839ba051a/paramiko-2.6.0-py2.py3-none-any.whl (199kB)\r\nCollecting cryptography>=2.5 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/c2/95/f43d02315f4ec074219c6e3124a87eba1d2d12196c2767fadfdc07a83884/cryptography-2.7.tar.gz (495kB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting bcrypt>=3.1.3 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/fa/aa/025a3ab62469b5167bc397837c9ffc486c42a97ef12ceaa6699d8f5a5416/bcrypt-3.1.7.tar.gz (42kB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting pynacl>=1.0.1 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/61/ab/2ac6dea8489fa713e2b4c6c5b549cc962dd4a842b5998d9e80cf8440b7cd/PyNaCl-1.3.0.tar.gz (3.4MB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting asn1crypto>=0.21.0 (from cryptography>=2.5->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/ea/cd/35485615f45f30a510576f1a56d1e0a7ad7bd8ab5ed7cdc600ef7cd06222/asn1crypto-0.24.0-py2.py3-none-any.whl (101kB)\r\nCollecting cffi!=1.11.3,>=1.8 (from cryptography>=2.5->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\nCollecting pycparser (from cffi!=1.11.3,>=1.8->cryptography>=2.5->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\nBuilding wheels for collected packages: cryptography, bcrypt, pynacl\r\n  Building wheel for cryptography (PEP 517): started\r\n  Building wheel for cryptography (PEP 517): finished with status 'done'\r\n  Created wheel for cryptography: filename=cryptography-2.7-cp37-cp37m-linux_x86_64.whl size=925756 sha256=6c0145d3f98342dcc06225e199d12608f5d210907701add64919dfb0fa8575d7\r\n  Stored in directory: /root/.cache/pip/wheels/d0/02/96/64b1439e5409591b6b0294d1da2f66a4ae4f0548d1bdb225b7\r\n  Building wheel for bcrypt (PEP 517): started\r\n  Building wheel for bcrypt (PEP 517): finished with status 'done'\r\n  Created wheel for bcrypt: filename=bcrypt-3.1.7-cp37-cp37m-linux_x86_64.whl size=64473 sha256=34e32177b11846e9125d9e174f68f9632788dbd8da18989cee6499479d1f5d55\r\n  Stored in directory: /root/.cache/pip/wheels/ae/b1/2c/dc178774d435228aff4679c4837de4d5ee1dd5568a370fc79c\r\n  Building wheel for pynacl (PEP 517): started\r\n  Building wheel for pynacl (PEP 517): still running...\r\n  Building wheel for pynacl (PEP 517): finished with status 'done'\r\n  Created wheel for pynacl: filename=PyNaCl-1.3.0-cp37-cp37m-linux_x86_64.whl size=1012181 sha256=31fda48d8bf790769323c93f646b865c63a590367fcf20b83748f522b550b032\r\n  Stored in directory: /root/.cache/pip/wheels/c1/10/e7/66597ff71adf8cb7403527243c4b57c66a0d1dfdd8adf2eae4\r\nSuccessfully built cryptography bcrypt pynacl\r\nBuilding wheels for collected packages: dockerpty, PyYAML, docopt, texttable\r\n  Building wheel for dockerpty (setup.py): started\r\n  Building wheel for dockerpty (setup.py): finished with status 'done'\r\n  Created wheel for dockerpty: filename=dockerpty-0.4.1-cp37-none-any.whl size=16606 sha256=7dfa5ba3b9c6f8759d55a903f90aa33e22a5de93a265a1953eac0233e2e66795\r\n  Stored in directory: /root/.cache/pip/wheels/e5/1e/86/bd0a97a0907c6c654af654d5875d1d4383dd1f575f77cee4aa\r\n  Building wheel for PyYAML (setup.py): started\r\n  Building wheel for PyYAML (setup.py): finished with status 'done'\r\n  Created wheel for PyYAML: filename=PyYAML-3.13-cp37-cp37m-linux_x86_64.whl size=43086 sha256=3d107eb17d6a0d917badb852517667b43188843c47622d4025e39a2160f4d4be\r\n  Stored in directory: /root/.cache/pip/wheels/ad/da/0c/74eb680767247273e2cf2723482cb9c924fe70af57c334513f\r\n  Building wheel for docopt (setup.py): started\r\n  Building wheel for docopt (setup.py): finished with status 'done'\r\n  Created wheel for docopt: filename=docopt-0.6.2-py2.py3-none-any.whl size=13704 sha256=992dc3d12a08826663ac37997ec895ebb719981c434cb4cb3cb7b38f6c16b1a7\r\n  Stored in directory: /root/.cache/pip/wheels/9b/04/dd/7daf4150b6d9b12949298737de9431a324d4b797ffd63f526e\r\n  Building wheel for texttable (setup.py): started\r\n  Building wheel for texttable (setup.py): finished with status 'done'\r\n  Created wheel for texttable: filename=texttable-0.9.1-cp37-none-any.whl size=9970 sha256=f275e5643f9e1f07c454100cf7f68220c9a2f5c6b2767dc82c43632dab0b0d89\r\n  Stored in directory: /root/.cache/pip/wheels/99/1e/2b/8452d3a48dad98632787556a0f2f90d56703b39cdf7d142dd1\r\nSuccessfully built dockerpty PyYAML docopt texttable\r\nInstalling collected packages: certifi, idna, urllib3, chardet, requests, six, websocket-client, dockerpty, PyYAML, jsonschema, cached-property, docopt, texttable, docker-pycreds, asn1crypto, pycparser, cffi, cryptography, bcrypt, pynacl, paramiko, docker, docker-compose\r\nSuccessfully installed PyYAML-3.13 asn1crypto-0.24.0 bcrypt-3.1.7 cached-property-1.5.1 certifi-2019.6.16 cffi-1.12.3 chardet-3.0.4 cryptography-2.7 docker-3.7.3 docker-compose-1.24.1 docker-pycreds-0.4.0 dockerpty-0.4.1 docopt-0.6.2 idna-2.7 jsonschema-2.6.0 paramiko-2.6.0 pycparser-2.19 pynacl-1.3.0 requests-2.20.1 six-1.12.0 texttable-0.9.1 urllib3-1.24.3 websocket-client-0.56.0\r\nRemoving intermediate container 4410b85043d7\r\n ---> 4ea6961f9477\r\nStep 8/16 : RUN apk add mariadb-connector-c-dev\r\n ---> Running in 237cf9a54e77\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/3) Installing zlib-dev (1.2.11-r1)\r\n(2/3) Installing mariadb-connector-c (3.0.8-r0)\r\n(3/3) Installing mariadb-connector-c-dev (3.0.8-r0)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 203 MiB in 60 packages\r\nRemoving intermediate container 237cf9a54e77\r\n ---> 9630c88e8a5f\r\nStep 9/16 : RUN pip install mysqlclient\r\n ---> Running in 972a021116c8\r\nCollecting mysqlclient\r\n  Downloading https://files.pythonhosted.org/packages/4d/38/c5f8bac9c50f3042c8f05615f84206f77f03db79781db841898fde1bb284/mysqlclient-1.4.4.tar.gz (86kB)\r\nBuilding wheels for collected packages: mysqlclient\r\n  Building wheel for mysqlclient (setup.py): started\r\n  Building wheel for mysqlclient (setup.py): finished with status 'done'\r\n  Created wheel for mysqlclient: filename=mysqlclient-1.4.4-cp37-cp37m-linux_x86_64.whl size=113718 sha256=f396f55f098912c5061927f7dbc43fd40d955e4ea6555c83815643b606fed669\r\n  Stored in directory: /root/.cache/pip/wheels/a0/04/57/031b9b01df38999df7dc7f4ee998a98ecdbd2d781f73e3ffbf\r\nSuccessfully built mysqlclient\r\nInstalling collected packages: mysqlclient\r\nSuccessfully installed mysqlclient-1.4.4\r\nRemoving intermediate container 972a021116c8\r\n ---> 8b77a560762a\r\nStep 10/16 : ARG DOCKER_CLI_VERSION=\"19.03.1\"\r\n ---> Running in c2f0f1f949b8\r\nRemoving intermediate container c2f0f1f949b8\r\n ---> 98916d397e69\r\nStep 11/16 : ENV DOWNLOAD_URL=\"https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_CLI_VERSION.tgz\"\r\n ---> Running in 767736c4834b\r\nRemoving intermediate container 767736c4834b\r\n ---> 0497c6539543\r\nStep 12/16 : RUN apk add curl     && mkdir -p /tmp/download     && curl -L $DOWNLOAD_URL | tar -xz -C /tmp/download     && mv /tmp/download/docker/docker /usr/local/bin/     && rm -rf /tmp/download     && rm -rf /var/cache/apk/*\r\n ---> Running in a00d5ddb61d6\r\n(1/4) Installing nghttp2-libs (1.35.1-r0)\r\n(2/4) Installing libssh2 (1.8.2-r0)\r\n(3/4) Installing libcurl (7.64.0-r2)\r\n(4/4) Installing curl (7.64.0-r2)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 204 MiB in 64 packages\r\n\u001b[91m  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\u001b[0m\u001b[91m\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\u001b[0m\u001b[91m\r  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\u001b[0m\u001b[91m\r  3 60.3M    3 2254k    0     0   894k      0  0:01:09  0:00:02  0:01:07  893k\u001b[0m\u001b[91m\r  7 60.3M    7 4382k    0     0  1219k      0  0:00:50  0:00:03  0:00:47 1219k\u001b[0m\u001b[91m\r  8 60.3M    8 5262k    0     0  1163k      0  0:00:53  0:00:04  0:00:49 1163k\u001b[0m\u001b[91m\r  9 60.3M    9 6158k    0     0  1114k      0  0:00:55  0:00:05  0:00:50 1265k\u001b[0m\u001b[91m\r 11 60.3M   11 7150k    0     0  1096k      0  0:00:56  0:00:06  0:00:50 1469k\u001b[0m\u001b[91m\r 13 60.3M   13 8238k    0     0  1095k      0  0:00:56  0:00:07  0:00:49 1196k\u001b[0m\u001b[91m\r 15 60.3M   15 9438k    0     0  1107k      0  0:00:55  0:00:08  0:00:47 1025k\u001b[0m\u001b[91m\r 16 60.3M   16 10.0M    0     0  1079k      0  0:00:57  0:00:09  0:00:48 1004k\u001b[0m\u001b[91m\r 17 60.3M   17 10.5M    0     0  1024k      0  0:01:00  0:00:10  0:00:50  924k\u001b[0m\u001b[91m\r 18 60.3M   18 11.1M    0     0   986k      0  0:01:02  0:00:11  0:00:51  844k\u001b[0m\u001b[91m\r 19 60.3M   19 11.7M    0     0   964k      0  0:01:04  0:00:12  0:00:52  767k\u001b[0m\u001b[91m\r 20 60.3M   20 12.5M    0     0   952k      0  0:01:04  0:00:13  0:00:51  688k\u001b[0m\u001b[91m\r 22 60.3M   22 13.4M    0     0   950k      0  0:01:04  0:00:14  0:00:50  704k\u001b[0m\u001b[91m\r 23 60.3M   23 14.4M    0     0   954k      0  0:01:04  0:00:15  0:00:49  806k\u001b[0m\u001b[91m\r 25 60.3M   25 15.5M    0     0   965k      0  0:01:03  0:00:16  0:00:47  915k\u001b[0m\u001b[91m\r 28 60.3M   28 17.0M    0     0   994k      0  0:01:02  0:00:17  0:00:45 1069k\u001b[0m\u001b[91m\r 31 60.3M   31 18.7M    0     0  1034k      0  0:00:59  0:00:18  0:00:41 1257k\u001b[0m\u001b[91m\r 32 60.3M   32 19.5M    0     0  1023k      0  0:01:00  0:00:19  0:00:41 1234k\u001b[0m\u001b[91m\r 33 60.3M   33 20.1M    0     0  1005k      0  0:01:01  0:00:20  0:00:41 1163k\u001b[0m\u001b[91m\r 34 60.3M   34 20.8M    0     0   993k      0  0:01:02  0:00:21  0:00:41 1088k\u001b[0m\u001b[91m\r 36 60.3M   36 21.7M    0     0   987k      0  0:01:02  0:00:22  0:00:40  962k\u001b[0m\u001b[91m\r 37 60.3M   37 22.5M    0     0   982k      0  0:01:02  0:00:23  0:00:39  786k\u001b[0m\u001b[91m\r 38 60.3M   38 23.2M    0     0   971k      0  0:01:03  0:00:24  0:00:39  771k\u001b[0m\u001b[91m\r 39 60.3M   39 23.9M    0     0   960k      0  0:01:04  0:00:25  0:00:39  778k\u001b[0m\u001b[91m\r 40 60.3M   40 24.4M    0     0   943k      0  0:01:05  0:00:26  0:00:39  729k\u001b[0m\u001b[91m\r 41 60.3M   41 24.8M    0     0   925k      0  0:01:06  0:00:27  0:00:39  649k\u001b[0m\u001b[91m\r 42 60.3M   42 25.4M    0     0   912k      0  0:01:07  0:00:28  0:00:39  585k\u001b[0m\u001b[91m\r 43 60.3M   43 26.0M    0     0   903k      0  0:01:08  0:00:29  0:00:39  569k\u001b[0m\u001b[91m\r 44 60.3M   44 26.7M    0     0   898k      0  0:01:08  0:00:30  0:00:38  582k\u001b[0m\u001b[91m\r 45 60.3M   45 27.6M    0     0   897k      0  0:01:08  0:00:31  0:00:37  653k\u001b[0m\u001b[91m\r 47 60.3M   47 28.6M    0     0   900k      0  0:01:08  0:00:32  0:00:36  761k\u001b[0m\u001b[91m\r 49 60.3M   49 29.7M    0     0   907k      0  0:01:08  0:00:33  0:00:35  880k\u001b[0m\u001b[91m\r 51 60.3M   51 31.3M    0     0   929k      0  0:01:06  0:00:34  0:00:32 1081k\u001b[0m\u001b[91m\r 54 60.3M   54 32.7M    0     0   943k      0  0:01:05  0:00:35  0:00:30 1212k\u001b[0m\u001b[91m\r 55 60.3M   55 33.5M    0     0   941k      0  0:01:05  0:00:36  0:00:29 1216k\u001b[0m\u001b[91m\r 57 60.3M   57 34.5M    0     0   941k      0  0:01:05  0:00:37  0:00:28 1209k\u001b[0m\u001b[91m\r 58 60.3M   58 35.5M    0     0   944k      0  0:01:05  0:00:38  0:00:27 1190k\u001b[0m\u001b[91m\r 60 60.3M   60 36.6M    0     0   950k      0  0:01:05  0:00:39  0:00:26 1091k\u001b[0m\u001b[91m\r 62 60.3M   62 37.6M    0     0   951k      0  0:01:04  0:00:40  0:00:24 1010k\u001b[0m\u001b[91m\r 64 60.3M   64 38.7M    0     0   954k      0  0:01:04  0:00:41  0:00:23 1052k\u001b[0m\u001b[91m\r 65 60.3M   65 39.7M    0     0   956k      0  0:01:04  0:00:42  0:00:22 1068k\u001b[0m\u001b[91m\r 67 60.3M   67 40.6M    0     0   956k      0  0:01:04  0:00:43  0:00:21 1052k\u001b[0m\u001b[91m\r 69 60.3M   69 41.6M    0     0   958k      0  0:01:04  0:00:44  0:00:20 1027k\u001b[0m\u001b[91m\r 70 60.3M   70 42.7M    0     0   962k      0  0:01:04  0:00:45  0:00:19 1053k\u001b[0m\u001b[91m\r 72 60.3M   72 44.0M    0     0   968k      0  0:01:03  0:00:46  0:00:17 1085k\u001b[0m\u001b[91m\r 74 60.3M   74 45.1M    0     0   971k      0  0:01:03  0:00:47  0:00:16 1100k\u001b[0m\u001b[91m\r 76 60.3M   76 46.2M    0     0   975k      0  0:01:03  0:00:48  0:00:15 1139k\u001b[0m\u001b[91m\r 78 60.3M   78 47.1M    0     0   975k      0  0:01:03  0:00:49  0:00:14 1123k\u001b[0m\u001b[91m\r 79 60.3M   79 48.1M    0     0   976k      0  0:01:03  0:00:50  0:00:13 1104k\u001b[0m\u001b[91m\r 81 60.3M   81 49.0M    0     0   974k      0  0:01:03  0:00:51  0:00:12 1030k\u001b[0m\u001b[91m\r 82 60.3M   82 49.9M    0     0   973k      0  0:01:03  0:00:52  0:00:11  992k\u001b[0m\u001b[91m\r 84 60.3M   84 50.7M    0     0   970k      0  0:01:03  0:00:53  0:00:10  918k\u001b[0m\u001b[91m\r 85 60.3M   85 51.5M    0     0   968k      0  0:01:03  0:00:54  0:00:09  902k\u001b[0m\u001b[91m\r 87 60.3M   87 52.5M    0     0   968k      0  0:01:03  0:00:55  0:00:08  886k\u001b[0m\u001b[91m\r 88 60.3M   88 53.5M    0     0   970k      0  0:01:03  0:00:56  0:00:07  928k\u001b[0m\u001b[91m\r 90 60.3M   90 54.7M    0     0   974k      0  0:01:03  0:00:57  0:00:06  979k\u001b[0m\u001b[91m\r 92 60.3M   92 55.6M    0     0   974k      0  0:01:03  0:00:58  0:00:05 1014k\u001b[0m\u001b[91m\r 94 60.3M   94 56.7M    0     0   975k      0  0:01:03  0:00:59  0:00:04 1046k\u001b[0m\u001b[91m\r 95 60.3M   95 57.6M    0     0   975k      0  0:01:03  0:01:00  0:00:03 1052k\u001b[0m\u001b[91m\r 97 60.3M   97 58.6M    0     0   975k      0  0:01:03  0:01:01  0:00:02 1033k\u001b[0m\u001b[91m\r 98 60.3M   98 59.6M    0     0   977k      0  0:01:03  0:01:02  0:00:01 1011k\u001b[0m\u001b[91m\r100 60.3M  100 60.3M    0     0   978k      0  0:01:03  0:01:03 --:--:-- 1041k\r\n\u001b[0mRemoving intermediate container a00d5ddb61d6\r\n ---> 6fa2b538eb28\r\nStep 13/16 : COPY src /src/\r\n ---> fa2eeae22f61\r\nStep 14/16 : RUN mkdir /data\r\n ---> Running in b80bf19c0615\r\nRemoving intermediate container b80bf19c0615\r\n ---> ee30158024eb\r\nStep 15/16 : EXPOSE 5000\r\n ---> Running in a4986b080858\r\nRemoving intermediate container a4986b080858\r\n ---> eaee927b5da2\r\nStep 16/16 : ENTRYPOINT [\"python\", \"/src/mdnssec.py\"]\r\n ---> Running in b73b1933c140\r\nRemoving intermediate container b73b1933c140\r\n ---> 5934929d70e6\r\n\u001b[2K\r\r\r\nSuccessfully built 5934929d70e6\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\r\n\r\n{\"services\": {\"api\": {\"stack_api\": {\"cmd\": [], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"api\", \"com.docker.compose.config-hash\": \"80629ec10eb925320e79d2caff81b1fb277d89ec17eed130f5fb9be11c0bb539\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:c0:a8:30:03\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 20, \"globalIPv6\": \"\", \"IPAddress\": \"192.168.48.3\", \"aliases\": [\"api\", \"24db50e53443\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:6a:05\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.106.5\", \"aliases\": [\"api\", \"24db50e53443\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\"}}, \"mysql_replication_db\": {\"stack_api_replication_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_replication_db\", \"com.docker.compose.config-hash\": \"17d7cfe6d8741224c22cc032aee25f6216ae5079f757365d8bcfb5d9b65dab5f\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"db_replication_net\": {\"macAddress\": \"02:42:0a:00:6a:04\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.106.4\", \"aliases\": [\"f001d1424be9\", \"mysql_replication_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\"}}, \"mysql_db\": {\"stack_api_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_db\", \"com.docker.compose.config-hash\": \"570a58a69ef1c9b8b29901a4aaa5e82571987cadc477ed562dd2df99a9162c2a\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:c0:a8:30:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 20, \"globalIPv6\": \"\", \"IPAddress\": \"192.168.48.2\", \"aliases\": [\"d35bc084c884\", \"mysql_db\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:6a:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.106.2\", \"aliases\": [\"d35bc084c884\", \"mysql_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\"}}}, \"invocation\": {\"module_args\": {\"project_src\": \"/home/alfred/management\", \"hostname_check\": false, \"recreate\": \"smart\", \"docker_host\": \"unix://var/run/docker.sock\", \"remove_images\": null, \"client_key\": null, \"scale\": null, \"nocache\": false, \"remove_volumes\": false, \"state\": \"present\", \"build\": true, \"client_cert\": null, \"api_version\": \"auto\", \"files\": null, \"project_name\": null, \"ca_cert\": null, \"definition\": null, \"tls_hostname\": \"localhost\", \"dependencies\": true, \"services\": null, \"tls\": false, \"pull\": false, \"remove_orphans\": false, \"restarted\": false, \"ssl_version\": null, \"stopped\": false, \"timeout\": 10, \"debug\": false, \"validate_certs\": false}}, \"changed\": true, \"ansible_facts\": {\"api\": {\"stack_api\": {\"cmd\": [], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"api\", \"com.docker.compose.config-hash\": \"80629ec10eb925320e79d2caff81b1fb277d89ec17eed130f5fb9be11c0bb539\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:c0:a8:30:03\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 20, \"globalIPv6\": \"\", \"IPAddress\": \"192.168.48.3\", \"aliases\": [\"api\", \"24db50e53443\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:6a:05\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.106.5\", \"aliases\": [\"api\", \"24db50e53443\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\"}}, \"mysql_replication_db\": {\"stack_api_replication_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_replication_db\", \"com.docker.compose.config-hash\": \"17d7cfe6d8741224c22cc032aee25f6216ae5079f757365d8bcfb5d9b65dab5f\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"db_replication_net\": {\"macAddress\": \"02:42:0a:00:6a:04\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.106.4\", \"aliases\": [\"f001d1424be9\", \"mysql_replication_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\"}}, \"mysql_db\": {\"stack_api_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_db\", \"com.docker.compose.config-hash\": \"570a58a69ef1c9b8b29901a4aaa5e82571987cadc477ed562dd2df99a9162c2a\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:c0:a8:30:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 20, \"globalIPv6\": \"\", \"IPAddress\": \"192.168.48.2\", \"aliases\": [\"d35bc084c884\", \"mysql_db\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:6a:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.106.2\", \"aliases\": [\"d35bc084c884\", \"mysql_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\"}}}}\r\n", "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error", "rc": 0}
2019-08-21 20:47:00,624 p=25382 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 20:47:00,625 p=25382 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=28   changed=15   unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2019-08-21 20:47:04,374 p=26668 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-21 20:47:04,428 p=26668 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 20:47:04,452 p=26668 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:47:04,470 p=26668 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-21 20:47:51,407 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:47:51,455 p=26668 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-21 20:48:58,581 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:48:58,599 p=26668 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-21 20:49:55,314 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:49:55,334 p=26668 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-21 20:49:55,354 p=26668 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:49:55,372 p=26668 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-21 20:49:55,393 p=26668 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:49:55,415 p=26668 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-21 20:50:34,541 p=26668 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:50:34,558 p=26668 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-21 20:50:34,579 p=26668 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:50:34,596 p=26668 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-21 20:51:53,277 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:51:53,320 p=26668 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-21 20:51:53,338 p=26668 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:51:53,358 p=26668 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-21 20:52:57,588 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:52:57,609 p=26668 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-21 20:53:53,501 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:53:53,523 p=26668 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-21 20:54:24,729 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:54:24,750 p=26668 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-21 20:55:14,493 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:55:14,514 p=26668 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-21 20:56:03,657 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:56:03,672 p=26668 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-21 20:56:35,490 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:56:35,512 p=26668 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-21 20:57:16,041 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:57:16,059 p=26668 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-21 20:58:01,519 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:58:01,560 p=26668 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-21 20:58:39,399 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 20:58:39,428 p=26668 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-21 21:00:43,511 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 21:00:43,558 p=26668 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-21 21:26:22,390 p=26668 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 21:26:22,406 p=26668 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-21 21:27:12,220 p=26668 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 21:27:12,240 p=26668 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 21:28:51,373 p=26668 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 21:28:51,393 p=26668 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 21:29:30,083 p=26668 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 21:29:30,103 p=26668 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 21:30:06,046 p=26668 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 21:30:06,075 p=26668 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 21:31:16,654 p=26668 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 21:31:16,683 p=26668 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 21:33:21,291 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 21:33:21,307 p=26668 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-21 22:04:18,436 p=26668 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 22:04:18,457 p=26668 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-21 22:04:27,075 p=26668 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 22:04:27,116 p=26668 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-21 22:04:35,560 p=26668 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 22:04:35,578 p=26668 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-21 22:04:44,191 p=26668 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 22:04:44,209 p=26668 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-21 22:05:01,062 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 22:05:01,105 p=26668 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-21 22:05:18,163 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 22:05:18,182 p=26668 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-21 22:05:29,920 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 22:05:29,941 p=26668 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-21 22:05:56,346 p=26668 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 22:05:56,366 p=26668 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-21 22:06:10,696 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 22:06:10,743 p=26668 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-21 22:06:24,211 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 22:06:24,231 p=26668 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-21 22:06:34,148 p=26668 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-21 22:06:34,166 p=26668 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-21 22:06:47,553 p=26668 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-21 22:06:47,556 p=26668 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-21 22:06:47,556 p=26668 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=13   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-27 15:36:13,146 p=32643 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-27 15:36:13,185 p=32643 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-27 15:36:32,196 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:36:32,211 p=32643 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-27 15:36:32,227 p=32643 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:36:32,243 p=32643 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-27 15:44:13,171 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:44:13,198 p=32643 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-27 15:44:24,157 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:44:24,195 p=32643 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-27 15:44:33,245 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:44:33,288 p=32643 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-27 15:44:33,307 p=32643 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:44:33,325 p=32643 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-27 15:44:33,345 p=32643 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:44:33,361 p=32643 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-27 15:44:42,840 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:44:42,880 p=32643 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-27 15:44:42,899 p=32643 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:44:42,916 p=32643 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-27 15:44:51,436 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:44:51,473 p=32643 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-27 15:44:51,492 p=32643 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:44:51,513 p=32643 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-27 15:44:59,970 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:45:00,013 p=32643 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-27 15:45:07,849 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:45:07,887 p=32643 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-27 15:45:15,765 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:45:15,792 p=32643 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-27 15:45:23,632 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:45:23,672 p=32643 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-27 15:45:34,519 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:45:34,561 p=32643 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-27 15:45:43,259 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:45:43,300 p=32643 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-27 15:45:51,669 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:45:51,715 p=32643 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-27 15:46:00,654 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:46:00,698 p=32643 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-27 15:46:08,844 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:46:08,884 p=32643 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-27 15:46:17,153 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:46:17,192 p=32643 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-27 15:50:37,288 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:50:37,324 p=32643 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-27 15:50:44,255 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:50:44,296 p=32643 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 15:50:51,246 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:50:51,290 p=32643 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 15:50:58,232 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:50:58,267 p=32643 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 15:51:05,130 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:51:05,172 p=32643 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 15:51:12,073 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:51:12,112 p=32643 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-27 15:51:27,501 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:51:27,543 p=32643 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-27 15:54:18,503 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:54:18,545 p=32643 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 15:54:25,534 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:54:25,574 p=32643 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-27 15:54:32,527 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:54:32,563 p=32643 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-27 15:54:39,507 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:54:39,549 p=32643 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-27 15:54:54,914 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:54:54,955 p=32643 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-27 15:55:02,463 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:55:02,491 p=32643 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-27 15:55:38,738 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:55:38,762 p=32643 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-27 15:56:01,266 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:56:01,309 p=32643 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-27 15:56:09,416 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:56:09,459 p=32643 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-27 15:56:17,162 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:56:17,205 p=32643 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-27 15:56:24,890 p=32643 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:56:24,930 p=32643 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-27 15:56:32,823 p=32643 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 15:56:32,830 p=32643 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-27 15:56:32,831 p=32643 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=35   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-27 16:01:21,861 p=2756 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-27 16:01:21,919 p=2756 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-27 16:01:21,939 p=2756 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:01:21,961 p=2756 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-27 16:01:38,289 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:01:38,319 p=2756 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-27 16:01:47,643 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:01:47,685 p=2756 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-27 16:01:56,662 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:01:56,702 p=2756 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-27 16:01:56,720 p=2756 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:01:56,735 p=2756 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-27 16:01:56,753 p=2756 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:01:56,769 p=2756 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-27 16:02:06,937 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:02:06,978 p=2756 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-27 16:02:06,997 p=2756 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:02:07,015 p=2756 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-27 16:02:15,509 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:02:15,547 p=2756 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-27 16:02:15,563 p=2756 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:02:15,578 p=2756 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-27 16:02:24,039 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:02:24,075 p=2756 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-27 16:02:31,895 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:02:31,915 p=2756 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-27 16:02:39,668 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:02:39,709 p=2756 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-27 16:02:47,570 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:02:47,611 p=2756 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-27 16:02:55,876 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:02:55,918 p=2756 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-27 16:03:04,127 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:03:04,169 p=2756 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-27 16:03:12,234 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:03:12,271 p=2756 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-27 16:03:20,167 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:03:20,212 p=2756 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-27 16:03:27,735 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:03:27,761 p=2756 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-27 16:03:36,019 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:03:36,065 p=2756 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-27 16:07:56,757 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:07:56,803 p=2756 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-27 16:08:03,757 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:08:03,798 p=2756 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 16:08:10,744 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:08:10,785 p=2756 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 16:08:17,725 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:08:17,762 p=2756 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 16:08:24,738 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:08:24,770 p=2756 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 16:08:31,725 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:08:31,764 p=2756 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-27 16:08:47,191 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:08:47,227 p=2756 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-27 16:11:38,354 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:11:38,397 p=2756 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 16:11:45,368 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:11:45,406 p=2756 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-27 16:11:52,325 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:11:52,360 p=2756 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-27 16:11:59,327 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:11:59,358 p=2756 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-27 16:12:14,754 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:12:14,795 p=2756 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-27 16:12:22,282 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:12:22,316 p=2756 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-27 16:12:44,667 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:12:44,695 p=2756 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-27 16:13:06,763 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:13:06,800 p=2756 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-27 16:13:14,983 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:13:15,022 p=2756 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-27 16:13:22,747 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:13:22,765 p=2756 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-27 16:13:30,473 p=2756 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:13:30,513 p=2756 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-27 16:13:38,358 p=2756 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:13:38,366 p=2756 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-27 16:13:38,367 p=2756 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-27 16:27:37,521 p=5644 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-27 16:27:37,575 p=5644 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-27 16:27:37,596 p=5644 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:27:37,617 p=5644 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-27 16:27:54,099 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:27:54,144 p=5644 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-27 16:28:03,676 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:28:03,722 p=5644 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-27 16:28:12,698 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:28:12,737 p=5644 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-27 16:28:12,754 p=5644 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:28:12,770 p=5644 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-27 16:28:12,789 p=5644 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:28:12,805 p=5644 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-27 16:28:23,378 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:28:23,417 p=5644 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-27 16:28:23,434 p=5644 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:28:23,450 p=5644 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-27 16:28:31,951 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:28:31,990 p=5644 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-27 16:28:32,006 p=5644 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:28:32,022 p=5644 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-27 16:28:40,424 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:28:40,457 p=5644 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-27 16:28:48,261 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:28:48,328 p=5644 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-27 16:28:56,212 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:28:56,244 p=5644 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-27 16:29:04,351 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:29:04,377 p=5644 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-27 16:29:12,569 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:29:12,601 p=5644 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-27 16:29:20,763 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:29:20,800 p=5644 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-27 16:29:28,813 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:29:28,850 p=5644 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-27 16:29:36,733 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:29:36,753 p=5644 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-27 16:29:44,148 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:29:44,186 p=5644 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-27 16:29:52,442 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:29:52,480 p=5644 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-27 16:34:12,115 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:34:12,152 p=5644 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-27 16:34:19,060 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:34:19,078 p=5644 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 16:34:26,014 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:34:26,057 p=5644 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 16:34:33,047 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:34:33,065 p=5644 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 16:34:40,032 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:34:40,066 p=5644 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 16:34:47,000 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:34:47,016 p=5644 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-27 16:35:02,289 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:35:02,330 p=5644 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-27 16:37:51,736 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:37:51,759 p=5644 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 16:37:58,673 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:37:58,711 p=5644 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-27 16:38:05,616 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:38:05,634 p=5644 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-27 16:38:12,499 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:38:12,517 p=5644 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-27 16:38:27,881 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:38:27,901 p=5644 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-27 16:38:35,379 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:38:35,412 p=5644 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-27 16:39:00,310 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:39:00,325 p=5644 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-27 16:39:17,086 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:39:17,103 p=5644 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-27 16:39:25,267 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:39:25,305 p=5644 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-27 16:39:32,986 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:39:33,009 p=5644 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-27 16:39:40,714 p=5644 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:39:40,755 p=5644 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-27 16:39:48,621 p=5644 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:39:48,623 p=5644 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-27 16:39:48,623 p=5644 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-27 16:52:45,257 p=7624 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-27 16:52:45,318 p=7624 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-27 16:52:45,340 p=7624 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:52:45,361 p=7624 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-27 16:53:04,301 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:53:04,344 p=7624 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-27 16:53:13,816 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:53:13,850 p=7624 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-27 16:53:22,805 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:53:22,823 p=7624 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-27 16:53:22,841 p=7624 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:53:22,856 p=7624 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-27 16:53:22,873 p=7624 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:53:22,890 p=7624 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-27 16:53:34,359 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:53:34,392 p=7624 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-27 16:53:34,408 p=7624 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:53:34,424 p=7624 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-27 16:53:42,868 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:53:42,909 p=7624 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-27 16:53:42,927 p=7624 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:53:42,944 p=7624 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-27 16:53:51,494 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:53:51,513 p=7624 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-27 16:53:59,311 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:53:59,351 p=7624 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-27 16:54:07,102 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:54:07,165 p=7624 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-27 16:54:16,861 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:54:16,900 p=7624 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-27 16:54:24,926 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:54:24,970 p=7624 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-27 16:54:33,101 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:54:33,122 p=7624 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-27 16:54:41,103 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:54:41,136 p=7624 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-27 16:54:48,979 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:54:48,997 p=7624 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-27 16:54:56,386 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:54:56,424 p=7624 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-27 16:55:05,163 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:55:05,197 p=7624 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-27 16:59:25,621 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:59:25,662 p=7624 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-27 16:59:32,550 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:59:32,590 p=7624 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 16:59:39,430 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:59:39,461 p=7624 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 16:59:46,399 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:59:46,443 p=7624 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 16:59:53,393 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 16:59:53,427 p=7624 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 17:00:00,334 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:00:00,369 p=7624 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-27 17:00:15,682 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:00:15,725 p=7624 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-27 17:03:06,123 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:03:06,166 p=7624 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 17:03:13,100 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:03:13,141 p=7624 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-27 17:03:20,097 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:03:20,137 p=7624 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-27 17:03:27,053 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:03:27,095 p=7624 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-27 17:03:42,456 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:03:42,498 p=7624 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-27 17:03:49,946 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:03:49,976 p=7624 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-27 17:04:12,640 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:04:12,668 p=7624 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-27 17:04:29,262 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:04:29,307 p=7624 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-27 17:04:37,478 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:04:37,524 p=7624 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-27 17:04:45,240 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:04:45,265 p=7624 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-27 17:04:52,927 p=7624 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:04:52,973 p=7624 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-27 17:05:01,208 p=7624 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:05:01,217 p=7624 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-27 17:05:01,217 p=7624 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-27 17:07:46,625 p=9316 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-27 17:07:46,683 p=9316 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-27 17:07:46,704 p=9316 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:07:46,725 p=9316 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-27 17:08:03,031 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:08:03,066 p=9316 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-27 17:08:12,769 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:08:12,810 p=9316 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-27 17:08:21,819 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:08:21,850 p=9316 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-27 17:08:21,895 p=9316 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:08:21,939 p=9316 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-27 17:08:21,972 p=9316 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:08:22,000 p=9316 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-27 17:08:32,190 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:08:32,228 p=9316 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-27 17:08:32,247 p=9316 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:08:32,267 p=9316 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-27 17:08:40,772 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:08:40,816 p=9316 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-27 17:08:40,838 p=9316 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:08:40,857 p=9316 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-27 17:08:49,325 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:08:49,362 p=9316 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-27 17:08:57,171 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:08:57,211 p=9316 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-27 17:09:05,089 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:09:05,129 p=9316 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-27 17:09:13,238 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:09:13,274 p=9316 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-27 17:09:21,449 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:09:21,485 p=9316 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-27 17:09:29,704 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:09:29,728 p=9316 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-27 17:09:37,717 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:09:37,744 p=9316 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-27 17:09:45,706 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:09:45,784 p=9316 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-27 17:09:53,279 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:09:53,319 p=9316 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-27 17:10:01,184 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:10:01,232 p=9316 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-27 17:14:21,899 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:14:21,943 p=9316 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-27 17:14:28,904 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:14:28,945 p=9316 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 17:14:35,890 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:14:35,925 p=9316 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 17:14:42,879 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:14:42,913 p=9316 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 17:14:49,861 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:14:49,899 p=9316 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 17:14:56,817 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:14:56,858 p=9316 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-27 17:15:12,227 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:15:12,268 p=9316 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-27 17:18:02,979 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:18:03,024 p=9316 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-27 17:18:09,991 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:18:10,037 p=9316 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-27 17:18:16,995 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:18:17,039 p=9316 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-27 17:18:23,995 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:18:24,021 p=9316 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-27 17:18:39,407 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:18:39,452 p=9316 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-27 17:18:46,938 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:18:46,969 p=9316 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-27 17:19:10,441 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:19:10,467 p=9316 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-27 17:19:34,593 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:19:34,635 p=9316 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-27 17:19:42,788 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:19:42,832 p=9316 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-27 17:19:50,571 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:19:50,605 p=9316 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-27 17:19:58,851 p=9316 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:19:58,899 p=9316 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-27 17:20:07,452 p=9316 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-27 17:20:07,461 p=9316 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-27 17:20:07,463 p=9316 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-28 09:09:22,130 p=20752 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-28 09:09:22,174 p=20752 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-28 09:09:37,605 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:09:37,645 p=20752 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-28 09:09:37,684 p=20752 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:09:37,727 p=20752 u=aar |  TASK [swarm : Upgrade all packages name=*, state=latest] ****************************************************************************************************************************************
2019-08-28 09:10:17,694 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:10:17,728 p=20752 u=aar |  TASK [swarm : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-28 09:10:27,368 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:10:27,405 p=20752 u=aar |  TASK [swarm : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] **********************************************************************
2019-08-28 09:10:37,336 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:10:37,364 p=20752 u=aar |  TASK [swarm : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *******************************************
2019-08-28 09:10:37,398 p=20752 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:10:37,421 p=20752 u=aar |  TASK [swarm : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] **********************************************************************************
2019-08-28 09:10:37,449 p=20752 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:10:37,477 p=20752 u=aar |  TASK [swarm : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] *************************************************************
2019-08-28 09:10:46,829 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:10:46,876 p=20752 u=aar |  TASK [swarm : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] **************************************
2019-08-28 09:10:46,906 p=20752 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:10:46,933 p=20752 u=aar |  TASK [swarm : Install iptables name=['iptables-services'], state=present] ***********************************************************************************************************************
2019-08-28 09:10:55,433 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:10:55,478 p=20752 u=aar |  TASK [swarm : Install iptables name=['iptables'], state=present] ********************************************************************************************************************************
2019-08-28 09:10:55,523 p=20752 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:10:55,569 p=20752 u=aar |  TASK [swarm : Disable firewalld state=stopped, name=firewalld, enabled=False] *******************************************************************************************************************
2019-08-28 09:11:04,247 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:11:04,303 p=20752 u=aar |  TASK [swarm : Enable iptables state=started, name=iptables, enabled=True] ***********************************************************************************************************************
2019-08-28 09:11:12,154 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:11:12,194 p=20752 u=aar |  TASK [swarm : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] ***********************************************************************************************
2019-08-28 09:11:20,042 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:11:20,088 p=20752 u=aar |  TASK [swarm : Enable docker state=started, name=docker, enabled=True] ***************************************************************************************************************************
2019-08-28 09:11:28,172 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:11:28,214 p=20752 u=aar |  TASK [swarm : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] **************************************************************************************************************
2019-08-28 09:11:36,502 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:11:36,540 p=20752 u=aar |  TASK [swarm : Init swarm state=present] *********************************************************************************************************************************************************
2019-08-28 09:11:45,456 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:11:45,517 p=20752 u=aar |  TASK [swarm : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-28 09:11:53,633 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:11:53,680 p=20752 u=aar |  TASK [swarm : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] *************************************************************************************************
2019-08-28 09:12:07,291 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:12:07,329 p=20752 u=aar |  TASK [swarm : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *********************************************************************
2019-08-28 09:12:16,185 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:12:16,220 p=20752 u=aar |  TASK [swarm : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-28 09:12:25,840 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:12:25,901 p=20752 u=aar |  TASK [swarm : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***************************
2019-08-28 09:16:53,940 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:16:53,958 p=20752 u=aar |  TASK [swarm : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************************************
2019-08-28 09:17:01,266 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:17:01,343 p=20752 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-28 09:17:08,556 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:17:08,630 p=20752 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-28 09:17:15,893 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:17:15,922 p=20752 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-28 09:17:23,245 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:17:23,324 p=20752 u=aar |  TASK [swarm : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-28 09:17:30,554 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:17:30,584 p=20752 u=aar |  TASK [swarm : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-28 09:17:46,716 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:17:46,773 p=20752 u=aar |  TASK [swarm : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************************
2019-08-28 09:20:40,772 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:20:40,812 p=20752 u=aar |  TASK [swarm : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-28 09:20:47,721 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:20:47,811 p=20752 u=aar |  TASK [swarm : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ************
2019-08-28 09:20:54,748 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:20:54,816 p=20752 u=aar |  TASK [swarm : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***************
2019-08-28 09:21:01,765 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:21:01,795 p=20752 u=aar |  TASK [swarm : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-28 09:21:17,067 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:21:17,098 p=20752 u=aar |  TASK [swarm : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *******************************************************
2019-08-28 09:21:24,779 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:21:24,802 p=20752 u=aar |  TASK [swarm : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] *****************************************************************
2019-08-28 09:21:48,885 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:21:48,913 p=20752 u=aar |  TASK [swarm : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] ***********************************************************
2019-08-28 09:22:13,602 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:22:13,625 p=20752 u=aar |  TASK [swarm : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-28 09:22:22,081 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:22:22,117 p=20752 u=aar |  TASK [swarm : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-28 09:22:30,412 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:22:30,510 p=20752 u=aar |  TASK [swarm : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-28 09:22:38,840 p=20752 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:22:38,942 p=20752 u=aar |  TASK [swarm : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *******************************************************
2019-08-28 09:22:47,763 p=20752 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-28 09:22:47,775 p=20752 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-28 09:22:47,777 p=20752 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=35   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-29 15:15:32,184 p=32267 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-29 15:15:32,245 p=32267 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-29 15:15:55,967 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:15:55,986 p=32267 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-29 15:15:56,017 p=32267 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:15:56,058 p=32267 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-29 15:16:43,744 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:16:43,806 p=32267 u=aar |  TASK [manager : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-29 15:16:53,149 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:16:53,208 p=32267 u=aar |  TASK [manager : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] ********************************************************************
2019-08-29 15:17:04,333 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:17:04,367 p=32267 u=aar |  TASK [manager : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *****************************************
2019-08-29 15:17:04,402 p=32267 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:17:04,440 p=32267 u=aar |  TASK [manager : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] ********************************************************************************
2019-08-29 15:17:04,479 p=32267 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:17:04,515 p=32267 u=aar |  TASK [manager : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ***********************************************************
2019-08-29 15:17:13,571 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:17:13,609 p=32267 u=aar |  TASK [manager : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] ************************************
2019-08-29 15:17:13,644 p=32267 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:17:13,681 p=32267 u=aar |  TASK [manager : Install iptables name=['iptables-services'], state=present] *********************************************************************************************************************
2019-08-29 15:17:22,133 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:17:22,178 p=32267 u=aar |  TASK [manager : Install iptables name=['iptables'], state=present] ******************************************************************************************************************************
2019-08-29 15:17:22,207 p=32267 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:17:22,241 p=32267 u=aar |  TASK [manager : Disable firewalld state=stopped, name=firewalld, enabled=False] *****************************************************************************************************************
2019-08-29 15:17:30,847 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:17:30,878 p=32267 u=aar |  TASK [manager : Enable iptables state=started, name=iptables, enabled=True] *********************************************************************************************************************
2019-08-29 15:17:38,645 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:17:38,689 p=32267 u=aar |  TASK [manager : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] *********************************************************************************************
2019-08-29 15:17:46,534 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:17:46,574 p=32267 u=aar |  TASK [manager : Enable docker state=started, name=docker, enabled=True] *************************************************************************************************************************
2019-08-29 15:17:54,667 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:17:54,740 p=32267 u=aar |  TASK [manager : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] ************************************************************************************************************
2019-08-29 15:18:02,987 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:18:03,026 p=32267 u=aar |  TASK [manager : Init swarm state=present] *******************************************************************************************************************************************************
2019-08-29 15:18:11,246 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:18:11,282 p=32267 u=aar |  TASK [manager : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-29 15:18:19,426 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:18:19,463 p=32267 u=aar |  TASK [manager : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ***********************************************************************************************
2019-08-29 15:18:27,463 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:18:27,488 p=32267 u=aar |  TASK [manager : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *******************************************************************
2019-08-29 15:18:34,938 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:18:34,973 p=32267 u=aar |  TASK [manager : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-29 15:18:43,270 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:18:43,329 p=32267 u=aar |  TASK [manager : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************
2019-08-29 15:23:00,960 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:23:00,979 p=32267 u=aar |  TASK [manager : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *************************************
2019-08-29 15:23:07,800 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:23:07,823 p=32267 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 15:23:14,647 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:23:14,680 p=32267 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 15:23:21,508 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:23:21,542 p=32267 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 15:23:28,398 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:23:28,421 p=32267 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 15:23:35,262 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:23:35,285 p=32267 u=aar |  TASK [manager : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-29 15:23:50,508 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:23:50,528 p=32267 u=aar |  TASK [manager : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***********************************
2019-08-29 15:26:41,196 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:26:41,241 p=32267 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 15:26:48,149 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:26:48,171 p=32267 u=aar |  TASK [manager : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **********
2019-08-29 15:26:55,041 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:26:55,079 p=32267 u=aar |  TASK [manager : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *************
2019-08-29 15:27:01,931 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:27:01,958 p=32267 u=aar |  TASK [manager : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-29 15:27:17,206 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:27:17,250 p=32267 u=aar |  TASK [manager : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *****************************************************
2019-08-29 15:27:24,860 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:27:24,897 p=32267 u=aar |  TASK [manager : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] ***************************************************************
2019-08-29 15:27:59,033 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:27:59,066 p=32267 u=aar |  TASK [manager : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] *********************************************************
2019-08-29 15:28:23,880 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:28:23,922 p=32267 u=aar |  TASK [manager : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-29 15:28:32,224 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:28:32,288 p=32267 u=aar |  TASK [manager : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-29 15:28:39,927 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:28:39,975 p=32267 u=aar |  TASK [manager : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-29 15:28:47,660 p=32267 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:28:47,701 p=32267 u=aar |  TASK [manager : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *****************************************************
2019-08-29 15:28:55,594 p=32267 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 15:28:55,602 p=32267 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-29 15:28:55,602 p=32267 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=35   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-29 16:40:07,875 p=4376 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-29 16:40:07,944 p=4376 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-29 16:40:07,966 p=4376 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:40:07,993 p=4376 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-29 16:40:37,678 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:40:37,768 p=4376 u=aar |  TASK [manager : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-29 16:40:47,188 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:40:47,269 p=4376 u=aar |  TASK [manager : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] ********************************************************************
2019-08-29 16:40:58,697 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:40:58,784 p=4376 u=aar |  TASK [manager : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *****************************************
2019-08-29 16:40:58,807 p=4376 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:40:58,833 p=4376 u=aar |  TASK [manager : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] ********************************************************************************
2019-08-29 16:40:58,861 p=4376 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:40:58,899 p=4376 u=aar |  TASK [manager : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ***********************************************************
2019-08-29 16:41:09,459 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:41:09,521 p=4376 u=aar |  TASK [manager : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] ************************************
2019-08-29 16:41:09,550 p=4376 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:41:09,576 p=4376 u=aar |  TASK [manager : Install iptables name=['iptables-services'], state=present] *********************************************************************************************************************
2019-08-29 16:41:18,125 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:41:18,209 p=4376 u=aar |  TASK [manager : Install iptables name=['iptables'], state=present] ******************************************************************************************************************************
2019-08-29 16:41:18,235 p=4376 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:41:18,264 p=4376 u=aar |  TASK [manager : Disable firewalld state=stopped, name=firewalld, enabled=False] *****************************************************************************************************************
2019-08-29 16:41:26,847 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:41:26,890 p=4376 u=aar |  TASK [manager : Enable iptables state=started, name=iptables, enabled=True] *********************************************************************************************************************
2019-08-29 16:41:34,729 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:41:34,813 p=4376 u=aar |  TASK [manager : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] *********************************************************************************************
2019-08-29 16:41:42,671 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:41:42,735 p=4376 u=aar |  TASK [manager : Enable docker state=started, name=docker, enabled=True] *************************************************************************************************************************
2019-08-29 16:41:50,501 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:41:50,571 p=4376 u=aar |  TASK [manager : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] ************************************************************************************************************
2019-08-29 16:41:58,849 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:41:58,920 p=4376 u=aar |  TASK [manager : Init swarm state=present] *******************************************************************************************************************************************************
2019-08-29 16:42:07,378 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:42:07,448 p=4376 u=aar |  TASK [manager : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-29 16:42:15,654 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:42:15,698 p=4376 u=aar |  TASK [manager : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ***********************************************************************************************
2019-08-29 16:42:23,701 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:42:23,762 p=4376 u=aar |  TASK [manager : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *******************************************************************
2019-08-29 16:42:31,450 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:42:31,519 p=4376 u=aar |  TASK [manager : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-29 16:42:39,934 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:42:40,029 p=4376 u=aar |  TASK [manager : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************
2019-08-29 16:46:48,012 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:46:48,076 p=4376 u=aar |  TASK [manager : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *************************************
2019-08-29 16:46:55,131 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:46:55,202 p=4376 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 16:47:02,241 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:47:02,327 p=4376 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 16:47:09,391 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:47:09,426 p=4376 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 16:47:16,430 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:47:16,463 p=4376 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 16:47:23,451 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:47:23,539 p=4376 u=aar |  TASK [manager : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-29 16:47:39,079 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:47:39,116 p=4376 u=aar |  TASK [manager : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***********************************
2019-08-29 16:50:18,852 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:50:18,879 p=4376 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 16:50:25,836 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:50:25,911 p=4376 u=aar |  TASK [manager : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **********
2019-08-29 16:50:32,949 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:50:33,015 p=4376 u=aar |  TASK [manager : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *************
2019-08-29 16:50:39,960 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:50:40,050 p=4376 u=aar |  TASK [manager : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-29 16:50:55,539 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:50:55,566 p=4376 u=aar |  TASK [manager : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *****************************************************
2019-08-29 16:51:03,486 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:51:03,520 p=4376 u=aar |  TASK [manager : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] ***************************************************************
2019-08-29 16:51:36,640 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:51:36,687 p=4376 u=aar |  TASK [manager : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] *********************************************************
2019-08-29 16:52:01,148 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:52:01,182 p=4376 u=aar |  TASK [manager : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-29 16:52:09,460 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:52:09,510 p=4376 u=aar |  TASK [manager : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-29 16:52:17,332 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:52:17,417 p=4376 u=aar |  TASK [manager : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-29 16:52:25,186 p=4376 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:52:25,267 p=4376 u=aar |  TASK [manager : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *****************************************************
2019-08-29 16:52:33,700 p=4376 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 16:52:33,720 p=4376 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-29 16:52:33,722 p=4376 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-29 17:10:16,487 p=7491 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-29 17:10:16,551 p=7491 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-29 17:10:16,574 p=7491 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:10:16,601 p=7491 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-29 17:10:47,358 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:10:47,437 p=7491 u=aar |  TASK [manager : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-29 17:10:57,292 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:10:57,355 p=7491 u=aar |  TASK [manager : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] ********************************************************************
2019-08-29 17:11:08,618 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:11:08,726 p=7491 u=aar |  TASK [manager : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *****************************************
2019-08-29 17:11:08,763 p=7491 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:11:08,781 p=7491 u=aar |  TASK [manager : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] ********************************************************************************
2019-08-29 17:11:08,801 p=7491 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:11:08,823 p=7491 u=aar |  TASK [manager : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ***********************************************************
2019-08-29 17:11:19,527 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:11:19,547 p=7491 u=aar |  TASK [manager : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] ************************************
2019-08-29 17:11:19,571 p=7491 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:11:19,592 p=7491 u=aar |  TASK [manager : Install iptables name=['iptables-services'], state=present] *********************************************************************************************************************
2019-08-29 17:11:28,107 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:11:28,188 p=7491 u=aar |  TASK [manager : Install iptables name=['iptables'], state=present] ******************************************************************************************************************************
2019-08-29 17:11:28,215 p=7491 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:11:28,239 p=7491 u=aar |  TASK [manager : Disable firewalld state=stopped, name=firewalld, enabled=False] *****************************************************************************************************************
2019-08-29 17:11:36,840 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:11:36,914 p=7491 u=aar |  TASK [manager : Enable iptables state=started, name=iptables, enabled=True] *********************************************************************************************************************
2019-08-29 17:11:44,790 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:11:44,876 p=7491 u=aar |  TASK [manager : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] *********************************************************************************************
2019-08-29 17:11:52,791 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:11:52,877 p=7491 u=aar |  TASK [manager : Enable docker state=started, name=docker, enabled=True] *************************************************************************************************************************
2019-08-29 17:12:00,771 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:12:00,871 p=7491 u=aar |  TASK [manager : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] ************************************************************************************************************
2019-08-29 17:12:09,230 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:12:09,309 p=7491 u=aar |  TASK [manager : Init swarm state=present] *******************************************************************************************************************************************************
2019-08-29 17:12:17,587 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:12:17,653 p=7491 u=aar |  TASK [manager : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-29 17:12:25,838 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:12:25,922 p=7491 u=aar |  TASK [manager : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ***********************************************************************************************
2019-08-29 17:12:34,001 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:12:34,081 p=7491 u=aar |  TASK [manager : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *******************************************************************
2019-08-29 17:12:41,725 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:12:41,802 p=7491 u=aar |  TASK [manager : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-29 17:12:50,176 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:12:50,265 p=7491 u=aar |  TASK [manager : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************
2019-08-29 17:17:00,174 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:17:00,245 p=7491 u=aar |  TASK [manager : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *************************************
2019-08-29 17:17:07,238 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:17:07,260 p=7491 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 17:17:14,264 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:17:14,322 p=7491 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 17:17:21,374 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:17:21,450 p=7491 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 17:17:28,447 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:17:28,479 p=7491 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 17:17:35,568 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:17:35,651 p=7491 u=aar |  TASK [manager : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-29 17:17:51,201 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:17:51,278 p=7491 u=aar |  TASK [manager : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***********************************
2019-08-29 17:20:30,656 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:20:30,768 p=7491 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 17:20:37,831 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:20:37,919 p=7491 u=aar |  TASK [manager : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **********
2019-08-29 17:20:44,970 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:20:45,059 p=7491 u=aar |  TASK [manager : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *************
2019-08-29 17:20:52,097 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:20:52,172 p=7491 u=aar |  TASK [manager : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-29 17:21:07,771 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:21:07,815 p=7491 u=aar |  TASK [manager : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *****************************************************
2019-08-29 17:21:15,452 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:21:15,513 p=7491 u=aar |  TASK [manager : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] ***************************************************************
2019-08-29 17:21:40,096 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:21:40,133 p=7491 u=aar |  TASK [manager : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] *********************************************************
2019-08-29 17:22:04,278 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:22:04,362 p=7491 u=aar |  TASK [manager : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-29 17:22:12,617 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:22:12,691 p=7491 u=aar |  TASK [manager : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-29 17:22:20,464 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:22:20,510 p=7491 u=aar |  TASK [manager : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-29 17:22:28,293 p=7491 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:22:28,376 p=7491 u=aar |  TASK [manager : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *****************************************************
2019-08-29 17:22:36,415 p=7491 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:22:36,433 p=7491 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-29 17:22:36,434 p=7491 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-29 17:29:07,343 p=9750 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-29 17:29:07,406 p=9750 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-29 17:29:07,426 p=9750 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:29:07,457 p=9750 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-29 17:29:43,719 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:29:43,804 p=9750 u=aar |  TASK [manager : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-29 17:29:53,380 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:29:53,463 p=9750 u=aar |  TASK [manager : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] ********************************************************************
2019-08-29 17:30:04,746 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:30:04,827 p=9750 u=aar |  TASK [manager : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *****************************************
2019-08-29 17:30:04,857 p=9750 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:30:04,875 p=9750 u=aar |  TASK [manager : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] ********************************************************************************
2019-08-29 17:30:04,894 p=9750 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:30:04,913 p=9750 u=aar |  TASK [manager : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ***********************************************************
2019-08-29 17:30:15,474 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:30:15,568 p=9750 u=aar |  TASK [manager : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] ************************************
2019-08-29 17:30:15,594 p=9750 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:30:15,621 p=9750 u=aar |  TASK [manager : Install iptables name=['iptables-services'], state=present] *********************************************************************************************************************
2019-08-29 17:30:24,233 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:30:24,321 p=9750 u=aar |  TASK [manager : Install iptables name=['iptables'], state=present] ******************************************************************************************************************************
2019-08-29 17:30:24,354 p=9750 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:30:24,379 p=9750 u=aar |  TASK [manager : Disable firewalld state=stopped, name=firewalld, enabled=False] *****************************************************************************************************************
2019-08-29 17:30:33,061 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:30:33,133 p=9750 u=aar |  TASK [manager : Enable iptables state=started, name=iptables, enabled=True] *********************************************************************************************************************
2019-08-29 17:30:41,036 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:30:41,115 p=9750 u=aar |  TASK [manager : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] *********************************************************************************************
2019-08-29 17:30:49,126 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:30:49,180 p=9750 u=aar |  TASK [manager : Enable docker state=started, name=docker, enabled=True] *************************************************************************************************************************
2019-08-29 17:30:57,464 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:30:57,527 p=9750 u=aar |  TASK [manager : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] ************************************************************************************************************
2019-08-29 17:31:05,898 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:31:05,967 p=9750 u=aar |  TASK [manager : Init swarm state=present] *******************************************************************************************************************************************************
2019-08-29 17:31:14,309 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:31:14,387 p=9750 u=aar |  TASK [manager : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-29 17:31:22,605 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:31:22,686 p=9750 u=aar |  TASK [manager : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ***********************************************************************************************
2019-08-29 17:31:30,759 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:31:30,843 p=9750 u=aar |  TASK [manager : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *******************************************************************
2019-08-29 17:31:38,489 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:31:38,530 p=9750 u=aar |  TASK [manager : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-29 17:31:46,912 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:31:46,996 p=9750 u=aar |  TASK [manager : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************
2019-08-29 17:35:54,676 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:35:54,718 p=9750 u=aar |  TASK [manager : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *************************************
2019-08-29 17:36:01,646 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:36:01,683 p=9750 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 17:36:08,579 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:36:08,621 p=9750 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 17:36:15,534 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:36:15,570 p=9750 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 17:36:22,501 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:36:22,526 p=9750 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 17:36:29,460 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:36:29,487 p=9750 u=aar |  TASK [manager : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-29 17:36:44,849 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:36:44,890 p=9750 u=aar |  TASK [manager : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***********************************
2019-08-29 17:39:22,209 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:39:22,242 p=9750 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-29 17:39:29,143 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:39:29,183 p=9750 u=aar |  TASK [manager : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **********
2019-08-29 17:39:36,189 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:39:36,256 p=9750 u=aar |  TASK [manager : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *************
2019-08-29 17:39:43,159 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:39:43,185 p=9750 u=aar |  TASK [manager : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-29 17:39:58,456 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:39:58,490 p=9750 u=aar |  TASK [manager : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *****************************************************
2019-08-29 17:40:05,965 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:40:05,988 p=9750 u=aar |  TASK [manager : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] ***************************************************************
2019-08-29 17:40:22,195 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:40:22,220 p=9750 u=aar |  TASK [manager : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] *********************************************************
2019-08-29 17:40:45,959 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:40:45,997 p=9750 u=aar |  TASK [manager : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-29 17:40:54,108 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:40:54,145 p=9750 u=aar |  TASK [manager : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-29 17:41:01,871 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:41:01,902 p=9750 u=aar |  TASK [manager : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-29 17:41:09,590 p=9750 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:41:09,630 p=9750 u=aar |  TASK [manager : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *****************************************************
2019-08-29 17:41:17,453 p=9750 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-29 17:41:17,460 p=9750 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-29 17:41:17,461 p=9750 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=34   changed=17   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-30 11:22:51,742 p=25976 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-30 11:22:51,801 p=25976 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-30 11:23:14,921 p=25976 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:23:14,947 p=25976 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-30 11:23:14,970 p=25976 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:23:14,992 p=25976 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-30 11:24:20,370 p=25976 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:24:20,396 p=25976 u=aar |  TASK [manager : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-30 11:24:31,179 p=25976 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:24:31,196 p=25976 u=aar |  TASK [manager : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] ********************************************************************
2019-08-30 11:24:41,153 p=25976 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:24:41,170 p=25976 u=aar |  TASK [manager : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *****************************************
2019-08-30 11:24:41,192 p=25976 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:24:41,211 p=25976 u=aar |  TASK [manager : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] ********************************************************************************
2019-08-30 11:24:41,235 p=25976 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:24:41,254 p=25976 u=aar |  TASK [manager : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ***********************************************************
2019-08-30 11:24:50,500 p=25976 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:24:50,527 p=25976 u=aar |  TASK [manager : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] ************************************
2019-08-30 11:24:50,549 p=25976 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:24:50,568 p=25976 u=aar |  TASK [manager : Install iptables name=['iptables-services'], state=present] *********************************************************************************************************************
2019-08-30 11:24:59,378 p=25976 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:24:59,394 p=25976 u=aar |  TASK [manager : Install iptables name=['iptables'], state=present] ******************************************************************************************************************************
2019-08-30 11:24:59,416 p=25976 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:24:59,440 p=25976 u=aar |  TASK [manager : Disable firewalld state=stopped, name=firewalld, enabled=False] *****************************************************************************************************************
2019-08-30 11:25:08,542 p=25976 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:25:08,558 p=25976 u=aar |  TASK [manager : Enable iptables state=started, name=iptables, enabled=True] *********************************************************************************************************************
2019-08-30 11:25:16,423 p=25976 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:25:16,441 p=25976 u=aar |  TASK [manager : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] *********************************************************************************************
2019-08-30 11:25:24,340 p=25976 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:25:24,357 p=25976 u=aar |  TASK [manager : Enable docker state=started, name=docker, enabled=True] *************************************************************************************************************************
2019-08-30 11:25:32,201 p=25976 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:25:32,222 p=25976 u=aar |  TASK [manager : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] ************************************************************************************************************
2019-08-30 11:25:41,152 p=25976 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:25:41,172 p=25976 u=aar |  TASK [manager : Init swarm state=present] *******************************************************************************************************************************************************
2019-08-30 11:25:49,897 p=25976 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:25:49,917 p=25976 u=aar |  TASK [manager : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-30 11:25:57,984 p=25976 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:25:58,022 p=25976 u=aar |  TASK [manager : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ***********************************************************************************************
2019-08-30 11:26:06,443 p=25976 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:26:06,464 p=25976 u=aar |  TASK [manager : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *******************************************************************
2019-08-30 11:26:14,187 p=25976 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:26:14,208 p=25976 u=aar |  TASK [manager : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-30 11:26:22,399 p=25976 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:26:22,458 p=25976 u=aar |  TASK [manager : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************
2019-08-30 11:29:40,454 p=25976 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:29:40,483 p=25976 u=aar |  TASK [manager : Set execution on run.sh path={{ remote_dst_path }}/management/run.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *************************************
2019-08-30 11:29:47,455 p=25976 u=aar |  fatal: [mdnssec.ri.mu.afrinic.net]: FAILED! => {"changed": false, "msg": "file (/home/alfred/management/run.sh) is absent, cannot continue", "path": "/home/alfred/management/run.sh"}
2019-08-30 11:29:47,456 p=25976 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-30 11:29:47,457 p=25976 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=17   changed=3    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2019-08-30 11:38:46,169 p=27273 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-30 11:38:47,006 p=27273 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-30 11:38:47,271 p=27273 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:38:47,314 p=27273 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-30 11:39:11,825 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:39:11,848 p=27273 u=aar |  TASK [manager : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-30 11:39:29,146 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:39:29,187 p=27273 u=aar |  TASK [manager : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] ********************************************************************
2019-08-30 11:39:57,006 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:39:57,033 p=27273 u=aar |  TASK [manager : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *****************************************
2019-08-30 11:39:57,058 p=27273 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:39:57,081 p=27273 u=aar |  TASK [manager : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] ********************************************************************************
2019-08-30 11:39:57,103 p=27273 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:39:57,145 p=27273 u=aar |  TASK [manager : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ***********************************************************
2019-08-30 11:40:09,764 p=27273 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:40:09,787 p=27273 u=aar |  TASK [manager : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] ************************************
2019-08-30 11:40:09,808 p=27273 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:40:09,828 p=27273 u=aar |  TASK [manager : Install iptables name=['iptables-services'], state=present] *********************************************************************************************************************
2019-08-30 11:40:19,001 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:40:19,022 p=27273 u=aar |  TASK [manager : Install iptables name=['iptables'], state=present] ******************************************************************************************************************************
2019-08-30 11:40:19,044 p=27273 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:40:19,062 p=27273 u=aar |  TASK [manager : Disable firewalld state=stopped, name=firewalld, enabled=False] *****************************************************************************************************************
2019-08-30 11:40:28,855 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:40:28,882 p=27273 u=aar |  TASK [manager : Enable iptables state=started, name=iptables, enabled=True] *********************************************************************************************************************
2019-08-30 11:40:37,415 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:40:37,435 p=27273 u=aar |  TASK [manager : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] *********************************************************************************************
2019-08-30 11:40:45,602 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:40:45,622 p=27273 u=aar |  TASK [manager : Enable docker state=started, name=docker, enabled=True] *************************************************************************************************************************
2019-08-30 11:40:54,254 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:40:54,274 p=27273 u=aar |  TASK [manager : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] ************************************************************************************************************
2019-08-30 11:41:08,281 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:41:08,316 p=27273 u=aar |  TASK [manager : Init swarm state=present] *******************************************************************************************************************************************************
2019-08-30 11:41:18,554 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:41:18,714 p=27273 u=aar |  TASK [manager : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-30 11:41:29,168 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:41:29,209 p=27273 u=aar |  TASK [manager : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ***********************************************************************************************
2019-08-30 11:41:37,783 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:41:37,830 p=27273 u=aar |  TASK [manager : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *******************************************************************
2019-08-30 11:41:47,477 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:41:47,526 p=27273 u=aar |  TASK [manager : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-30 11:41:59,182 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:41:59,208 p=27273 u=aar |  TASK [manager : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************
2019-08-30 11:45:34,385 p=27273 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:45:34,406 p=27273 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 11:45:42,695 p=27273 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:45:42,714 p=27273 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 11:45:50,008 p=27273 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:45:50,050 p=27273 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 11:46:03,527 p=27273 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:46:03,550 p=27273 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 11:46:23,924 p=27273 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:46:23,989 p=27273 u=aar |  TASK [manager : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-30 11:46:55,128 p=27273 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:46:55,146 p=27273 u=aar |  TASK [manager : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***********************************
2019-08-30 11:50:26,630 p=27273 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:50:27,435 p=27273 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 11:50:38,763 p=27273 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:50:38,779 p=27273 u=aar |  TASK [manager : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **********
2019-08-30 11:50:51,116 p=27273 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:50:51,226 p=27273 u=aar |  TASK [manager : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *************
2019-08-30 11:50:59,511 p=27273 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:50:59,547 p=27273 u=aar |  TASK [manager : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-30 11:51:27,239 p=27273 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:51:27,274 p=27273 u=aar |  TASK [manager : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *****************************************************
2019-08-30 11:51:37,639 p=27273 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 11:51:37,658 p=27273 u=aar |  TASK [manager : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] ***************************************************************
2019-08-30 12:03:53,153 p=27273 u=aar |   [WARNING]: Module invocation had junk after the JSON data:  ---> Running in 819b48689268 Removing intermediate container 819b48689268  ---> 95c09c212a5e [2K   Successfully built 95c09c212a5e
Successfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0  {"services": {"api": {"stack_api": {"cmd": [], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "api", "com.docker.compose.config-hash": "5ad9b3e9336adfa5bcf4c0ce657b4eecf26b648354fdef328101030e6b2a61cf", "com.docker.compose.project": "management",
"com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress":
"02:42:ac:1a:00:03", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 16, "globalIPv6": "", "IPAddress": "172.26.0.3", "aliases": ["api", "c810fd7ff7ce"]}, "db_replication_net":
{"macAddress": "02:42:0a:00:84:05", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.132.5", "aliases": ["api", "c810fd7ff7ce"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0"}}, "mysql_replication_db": {"stack_api_replication_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "mysql_replication_db", "com.docker.compose.config-hash": "9cd9f2f499dab3038fcd29135c92100b91de4b988c0ba5c2a7b20ef5732b7ac7", "com.docker.compose.project":
"management", "com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"db_replication_net": {"macAddress":
"02:42:0a:00:84:04", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.132.4", "aliases": ["e3b2cbee7247", "mysql_replication_db"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0"}}, "mysql_db": {"stack_api_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "mysql_db", "com.docker.compose.config-hash": "b48315ada656d5149246743cd1b4fbd89e8102800c14cd74c447df66a3fce198", "com.docker.compose.project": "management",
"com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress":
"02:42:ac:1a:00:02", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 16, "globalIPv6": "", "IPAddress": "172.26.0.2", "aliases": ["e686388208ad", "mysql_db"]}, "db_replication_net":
{"macAddress": "02:42:0a:00:84:02", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.132.2", "aliases": ["e686388208ad", "mysql_db"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0"}}}, "invocation": {"module_args": {"project_src": "/home/alfred/management", "hostname_check": false, "recreate": "smart",
"docker_host": "unix://var/run/docker.sock", "remove_images": null, "client_key": null, "scale": null, "nocache": false, "remove_volumes": false, "state": "present", "build": true,
"client_cert": null, "api_version": "auto", "files": null, "project_name": null, "ca_cert": null, "definition": null, "tls_hostname": "localhost", "dependencies": true, "services": null,
"tls": false, "pull": false, "remove_orphans": false, "restarted": false, "ssl_version": null, "stopped": false, "timeout": 10, "debug": false, "validate_certs": false}}, "changed": true,
"ansible_facts": {"api": {"stack_api": {"cmd": [], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "api", "com.docker.compose.config-hash":
"5ad9b3e9336adfa5bcf4c0ce657b4eecf26b648354fdef328101030e6b2a61cf", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False",
"com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress": "02:42:ac:1a:00:03", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 16,
"globalIPv6": "", "IPAddress": "172.26.0.3", "aliases": ["api", "c810fd7ff7ce"]}, "db_replication_net": {"macAddress": "02:42:0a:00:84:05", "globalIPv6PrefixLen": 0, "links": null,
"IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.132.5", "aliases": ["api", "c810fd7ff7ce"]}}, "image": "registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0"}},
"mysql_replication_db": {"stack_api_replication_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "mysql_replication_db",
"com.docker.compose.config-hash": "9cd9f2f499dab3038fcd29135c92100b91de4b988c0ba5c2a7b20ef5732b7ac7", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1",
"com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"db_replication_net": {"macAddress": "02:42:0a:00:84:04", "globalIPv6PrefixLen": 0, "links":
null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.132.4", "aliases": ["e3b2cbee7247", "mysql_replication_db"]}}, "image": "registry.mdnssec.ri.mu.afrinic.net:5000/mysql-
slave57:1.0"}}, "mysql_db": {"stack_api_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "mysql_db",
"com.docker.compose.config-hash": "b48315ada656d5149246743cd1b4fbd89e8102800c14cd74c447df66a3fce198", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1",
"com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress": "02:42:ac:1a:00:02", "globalIPv6PrefixLen": 0,
"links": null, "IPPrefixLen": 16, "globalIPv6": "", "IPAddress": "172.26.0.2", "aliases": ["e686388208ad", "mysql_db"]}, "db_replication_net": {"macAddress": "02:42:0a:00:84:02",
"globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.132.2", "aliases": ["e686388208ad", "mysql_db"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0"}}}}

2019-08-30 12:03:54,018 p=27273 u=aar |  fatal: [mdnssec.ri.mu.afrinic.net]: FAILED! => {"changed": false, "module_stderr": "Shared connection to mdnssec.ri.mu.afrinic.net closed.\r\n", "module_stdout": "No handlers could be found for logger \"compose.config.config\"\r\nStep 1/12 : FROM oraclelinux:7-slim\r\n ---> 874477adb545\r\nStep 2/12 : ARG MYSQL_SERVER_PACKAGE=mysql-community-server-minimal-5.7.27\r\n ---> Running in a34494d626e8\r\nRemoving intermediate container a34494d626e8\r\n ---> 63075d212da0\r\nStep 3/12 : ARG MYSQL_SHELL_PACKAGE=mysql-shell-8.0.17\r\n ---> Running in fb6f30b5c5ef\r\nRemoving intermediate container fb6f30b5c5ef\r\n ---> eda5fb9c6433\r\nStep 4/12 : RUN yum install -y https://repo.mysql.com/mysql-community-minimal-release-el7.rpm     https://repo.mysql.com/mysql-community-release-el7.rpm     && yum-config-manager --enable mysql57-server-minimal     && yum install -y       $MYSQL_SERVER_PACKAGE       $MYSQL_SHELL_PACKAGE       libpwquality     && yum clean all     && mkdir /docker-entrypoint-initdb.d\r\n ---> Running in d95131009816\r\nLoaded plugins: ovl\r\nExamining /var/tmp/yum-root-m9d3zb/mysql-community-minimal-release-el7.rpm: mysql-community-minimal-release-el7-1.noarch\r\nMarking /var/tmp/yum-root-m9d3zb/mysql-community-minimal-release-el7.rpm to be installed\r\nExamining /var/tmp/yum-root-m9d3zb/mysql-community-release-el7.rpm: mysql80-community-release-el7-3.noarch\r\nMarking /var/tmp/yum-root-m9d3zb/mysql-community-release-el7.rpm to be installed\r\nResolving Dependencies\r\n--> Running transaction check\r\n---> Package mysql-community-minimal-release.noarch 0:el7-1 will be installed\r\n---> Package mysql80-community-release.noarch 0:el7-3 will be installed\r\n--> Finished Dependency Resolution\r\n\r\nDependencies Resolved\r\n\r\n================================================================================\r\n Package                Arch   Version\r\n                                     Repository                            Size\r\n================================================================================\r\nInstalling:\r\n mysql-community-minimal-release\r\n                        noarch el7-1 /mysql-community-minimal-release-el7  29 k\r\n mysql80-community-release\r\n                        noarch el7-3 /mysql-community-release-el7          31 k\r\n\r\nTransaction Summary\r\n================================================================================\r\nInstall  2 Packages\r\n\r\nTotal size: 60 k\r\nInstalled size: 60 k\r\nDownloading packages:\r\nRunning transaction check\r\nRunning transaction test\r\nTransaction test succeeded\r\nRunning transaction\r\n  Installing : mysql80-community-release-el7-3.noarch                       1/2 \r\n  Installing : mysql-community-minimal-release-el7-1.noarch                 2/2 \r\n  Verifying  : mysql-community-minimal-release-el7-1.noarch                 1/2 \r\n  Verifying  : mysql80-community-release-el7-3.noarch                       2/2 \r\n\r\nInstalled:\r\n  mysql-community-minimal-release.noarch 0:el7-1                                \r\n  mysql80-community-release.noarch 0:el7-3                                      \r\n\r\nComplete!\r\nLoaded plugins: ovl\r\n========================= repo: mysql57-server-minimal =========================\r\n[mysql57-server-minimal]\r\nasync = True\r\nbandwidth = 0\r\nbase_persistdir = /var/lib/yum/repos/x86_64/7Server\r\nbaseurl = http://repo.mysql.com/yum/mysql-5.7-community/docker/x86_64/\r\ncache = 0\r\ncachedir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal\r\ncheck_config_file_age = True\r\ncompare_providers_priority = 80\r\ncost = 1000\r\ndeltarpm_metadata_percentage = 100\r\ndeltarpm_percentage = \r\nenabled = 1\r\nenablegroups = True\r\nexclude = \r\nfailovermethod = priority\r\nftp_disable_epsv = False\r\ngpgcadir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal/gpgcadir\r\ngpgcakey = \r\ngpgcheck = True\r\ngpgdir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal/gpgdir\r\ngpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\nhdrdir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal/headers\r\nhttp_caching = all\r\nincludepkgs = \r\nip_resolve = \r\nkeepalive = True\r\nkeepcache = False\r\nmddownloadpolicy = sqlite\r\nmdpolicy = group:small\r\nmediaid = \r\nmetadata_expire = 21600\r\nmetadata_expire_filter = read-only:present\r\nmetalink = \r\nminrate = 0\r\nmirrorlist = \r\nmirrorlist_expire = 86400\r\nname = MySQL 5.7 Server Minimal\r\nold_base_cache_dir = \r\npassword = \r\npersistdir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal\r\npkgdir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal/packages\r\nproxy = False\r\nproxy_dict = \r\nproxy_password = \r\nproxy_username = \r\nrepo_gpgcheck = False\r\nretries = 10\r\nskip_if_unavailable = False\r\nssl_check_cert_permissions = True\r\nsslcacert = \r\nsslclientcert = \r\nsslclientkey = \r\nsslverify = True\r\nthrottle = 0\r\ntimeout = 30.0\r\nui_id = mysql57-server-minimal/x86_64\r\nui_repoid_vars = releasever,\r\n   basearch\r\nusername = \r\n\r\nLoaded plugins: ovl\r\nResolving Dependencies\r\n--> Running transaction check\r\n---> Package libpwquality.x86_64 0:1.2.3-5.el7 will be installed\r\n--> Processing Dependency: cracklib-dicts >= 2.8 for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_EXTENSION_1.1.1)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_EXTENSION_1.0)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_1.0)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: pam(x86-64) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0()(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libcrack.so.2()(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n---> Package mysql-community-server-minimal.x86_64 0:5.7.27-1.el7 will be installed\r\n--> Processing Dependency: libnuma.so.1(libnuma_1.2)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libnuma.so.1(libnuma_1.1)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1(LIBAIO_0.4)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1(LIBAIO_0.1)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libnuma.so.1()(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1()(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n---> Package mysql-shell.x86_64 0:8.0.17-1.el7 will be installed\r\n--> Running transaction check\r\n---> Package cracklib.x86_64 0:2.9.0-11.el7 will be installed\r\n--> Processing Dependency: gzip for package: cracklib-2.9.0-11.el7.x86_64\r\n---> Package cracklib-dicts.x86_64 0:2.9.0-11.el7 will be installed\r\n---> Package libaio.x86_64 0:0.3.109-13.el7 will be installed\r\n---> Package numactl-libs.x86_64 0:2.0.12-3.el7 will be installed\r\n---> Package pam.x86_64 0:1.1.8-22.el7 will be installed\r\n--> Running transaction check\r\n---> Package gzip.x86_64 0:1.5-10.el7 will be installed\r\n--> Finished Dependency Resolution\r\n\r\nDependencies Resolved\r\n\r\n================================================================================\r\n Package                     Arch   Version        Repository              Size\r\n================================================================================\r\nInstalling:\r\n libpwquality                x86_64 1.2.3-5.el7    ol7_latest              84 k\r\n mysql-community-server-minimal\r\n                             x86_64 5.7.27-1.el7   mysql57-server-minimal  15 M\r\n mysql-shell                 x86_64 8.0.17-1.el7   mysql-tools-community   15 M\r\nInstalling for dependencies:\r\n cracklib                    x86_64 2.9.0-11.el7   ol7_latest              79 k\r\n cracklib-dicts              x86_64 2.9.0-11.el7   ol7_latest             3.6 M\r\n gzip                        x86_64 1.5-10.el7     ol7_latest             129 k\r\n libaio                      x86_64 0.3.109-13.el7 ol7_latest              24 k\r\n numactl-libs                x86_64 2.0.12-3.el7   ol7_latest              29 k\r\n pam                         x86_64 1.1.8-22.el7   ol7_latest             719 k\r\n\r\nTransaction Summary\r\n================================================================================\r\nInstall  3 Packages (+6 Dependent packages)\r\n\r\nTotal download size: 34 M\r\nInstalled size: 130 M\r\nDownloading packages:\r\n\u001b[91mwarning: /var/cache/yum/x86_64/7Server/mysql-tools-community/packages/mysql-shell-8.0.17-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEY\r\n\u001b[0mPublic key for mysql-shell-8.0.17-1.el7.x86_64.rpm is not installed\r\nPublic key for mysql-community-server-minimal-5.7.27-1.el7.x86_64.rpm is not installed\r\n--------------------------------------------------------------------------------\r\nTotal                                              773 kB/s |  34 MB  00:44     \r\nRetrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\n\u001b[91mImporting GPG key 0x5072E1F5:\r\n Userid     : \"MySQL Release Engineering <mysql-build@oss.oracle.com>\"\r\n Fingerprint: a4a9 4068 76fc bd3c 4567 70c8 8c71 8d3b 5072 e1f5\r\n Package    : mysql80-community-release-el7-3.noarch (installed)\r\n From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\n\u001b[0mRunning transaction check\r\nRunning transaction test\r\nTransaction test succeeded\r\nRunning transaction\r\n  Installing : libaio-0.3.109-13.el7.x86_64                                 1/9 \r\n  Installing : numactl-libs-2.0.12-3.el7.x86_64                             2/9 \r\n  Installing : gzip-1.5-10.el7.x86_64                                       3/9 \r\n  Installing : cracklib-2.9.0-11.el7.x86_64                                 4/9 \r\n  Installing : cracklib-dicts-2.9.0-11.el7.x86_64                           5/9 \r\n  Installing : pam-1.1.8-22.el7.x86_64                                      6/9 \r\n  Installing : libpwquality-1.2.3-5.el7.x86_64                              7/9 \r\n  Installing : mysql-community-server-minimal-5.7.27-1.el7.x86_64           8/9 \r\n  Installing : mysql-shell-8.0.17-1.el7.x86_64                              9/9 \r\n  Verifying  : cracklib-dicts-2.9.0-11.el7.x86_64                           1/9 \r\n  Verifying  : mysql-community-server-minimal-5.7.27-1.el7.x86_64           2/9 \r\n  Verifying  : pam-1.1.8-22.el7.x86_64                                      3/9 \r\n  Verifying  : gzip-1.5-10.el7.x86_64                                       4/9 \r\n  Verifying  : numactl-libs-2.0.12-3.el7.x86_64                             5/9 \r\n  Verifying  : cracklib-2.9.0-11.el7.x86_64                                 6/9 \r\n  Verifying  : mysql-shell-8.0.17-1.el7.x86_64                              7/9 \r\n  Verifying  : libpwquality-1.2.3-5.el7.x86_64                              8/9 \r\n  Verifying  : libaio-0.3.109-13.el7.x86_64                                 9/9 \r\n\r\nInstalled:\r\n  libpwquality.x86_64 0:1.2.3-5.el7                                             \r\n  mysql-community-server-minimal.x86_64 0:5.7.27-1.el7                          \r\n  mysql-shell.x86_64 0:8.0.17-1.el7                                             \r\n\r\nDependency Installed:\r\n  cracklib.x86_64 0:2.9.0-11.el7        cracklib-dicts.x86_64 0:2.9.0-11.el7   \r\n  gzip.x86_64 0:1.5-10.el7              libaio.x86_64 0:0.3.109-13.el7         \r\n  numactl-libs.x86_64 0:2.0.12-3.el7    pam.x86_64 0:1.1.8-22.el7              \r\n\r\nComplete!\r\nLoaded plugins: ovl\r\nCleaning repos: mysql-connectors-community mysql-tools-community\r\n              : mysql57-server-minimal mysql80-community ol7_UEKR5\r\n              : ol7_developer_EPEL ol7_latest\r\nRemoving intermediate container d95131009816\r\n ---> 0052fe9a2a0c\r\nStep 5/12 : VOLUME /var/lib/mysql\r\n ---> Running in eba1ad72afba\r\nRemoving intermediate container eba1ad72afba\r\n ---> 545c8ef2e174\r\nStep 6/12 : COPY docker-entrypoint.sh /entrypoint.sh\r\n ---> 7d8642b04fa8\r\nStep 7/12 : COPY healthcheck.sh /healthcheck.sh\r\n ---> 2a08db91ad97\r\nStep 8/12 : COPY my.cnf /etc/my.cnf\r\n ---> 0f8d07059000\r\nStep 9/12 : ENTRYPOINT [\"/entrypoint.sh\"]\r\n ---> Running in 6a450e2bcc95\r\nRemoving intermediate container 6a450e2bcc95\r\n ---> 0c983815654c\r\nStep 10/12 : HEALTHCHECK CMD /healthcheck.sh\r\n ---> Running in 7b6bb3c62915\r\nRemoving intermediate container 7b6bb3c62915\r\n ---> a55a94ed2565\r\nStep 11/12 : EXPOSE 3306 33060\r\n ---> Running in 909bef313836\r\nRemoving intermediate container 909bef313836\r\n ---> a7b095ee19da\r\nStep 12/12 : CMD [\"mysqld\"]\r\n ---> Running in dc429e4ba50d\r\nRemoving intermediate container dc429e4ba50d\r\n ---> 4b7336622bec\r\n\u001b[2K\r\r\r\nSuccessfully built 4b7336622bec\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\r\nStep 1/12 : FROM oraclelinux:7-slim\r\n ---> 874477adb545\r\nStep 2/12 : ARG MYSQL_SERVER_PACKAGE=mysql-community-server-minimal-5.7.27\r\n ---> Using cache\r\n ---> 63075d212da0\r\nStep 3/12 : ARG MYSQL_SHELL_PACKAGE=mysql-shell-8.0.17\r\n ---> Using cache\r\n ---> eda5fb9c6433\r\nStep 4/12 : RUN yum install -y https://repo.mysql.com/mysql-community-minimal-release-el7.rpm     https://repo.mysql.com/mysql-community-release-el7.rpm     && yum-config-manager --enable mysql57-server-minimal     && yum install -y       $MYSQL_SERVER_PACKAGE       $MYSQL_SHELL_PACKAGE       libpwquality     && yum clean all     && mkdir /docker-entrypoint-initdb.d\r\n ---> Using cache\r\n ---> 0052fe9a2a0c\r\nStep 5/12 : VOLUME /var/lib/mysql\r\n ---> Using cache\r\n ---> 545c8ef2e174\r\nStep 6/12 : COPY docker-entrypoint.sh /entrypoint.sh\r\n ---> 10b6cd477be8\r\nStep 7/12 : COPY healthcheck.sh /healthcheck.sh\r\n ---> 8c97df6e0bd9\r\nStep 8/12 : COPY my.cnf /etc/my.cnf\r\n ---> 19aac1c024c0\r\nStep 9/12 : ENTRYPOINT [\"/entrypoint.sh\"]\r\n ---> Running in 06a6c40c71cb\r\nRemoving intermediate container 06a6c40c71cb\r\n ---> e4f35946dbce\r\nStep 10/12 : HEALTHCHECK CMD /healthcheck.sh\r\n ---> Running in 35dddcc6246b\r\nRemoving intermediate container 35dddcc6246b\r\n ---> ddaf0487ced1\r\nStep 11/12 : EXPOSE 3306 33060\r\n ---> Running in 8d994968a155\r\nRemoving intermediate container 8d994968a155\r\n ---> 93b3f0419ce8\r\nStep 12/12 : CMD [\"mysqld\"]\r\n ---> Running in dbb62b69845a\r\nRemoving intermediate container dbb62b69845a\r\n ---> 688e522148b4\r\n\u001b[2K\r\r\r\nSuccessfully built 688e522148b4\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\r\nStep 1/16 : FROM python:3-alpine3.9\r\n ---> 88f1968a24d8\r\nStep 2/16 : RUN apk add --no-cache build-base\r\n ---> Running in ed811d0d0878\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/20) Upgrading musl (1.1.20-r4 -> 1.1.20-r5)\r\n(2/20) Installing binutils (2.31.1-r2)\r\n(3/20) Installing libmagic (5.36-r0)\r\n(4/20) Installing file (5.36-r0)\r\n(5/20) Installing gmp (6.1.2-r1)\r\n(6/20) Installing isl (0.18-r0)\r\n(7/20) Installing libgomp (8.3.0-r0)\r\n(8/20) Installing libatomic (8.3.0-r0)\r\n(9/20) Installing libgcc (8.3.0-r0)\r\n(10/20) Installing mpfr3 (3.1.5-r1)\r\n(11/20) Installing mpc1 (1.0.3-r1)\r\n(12/20) Installing libstdc++ (8.3.0-r0)\r\n(13/20) Installing gcc (8.3.0-r0)\r\n(14/20) Installing musl-dev (1.1.20-r5)\r\n(15/20) Installing libc-dev (0.7.1-r0)\r\n(16/20) Installing g++ (8.3.0-r0)\r\n(17/20) Installing make (4.2.1-r2)\r\n(18/20) Installing fortify-headers (1.0-r0)\r\n(19/20) Installing build-base (0.5-r1)\r\n(20/20) Upgrading musl-utils (1.1.20-r4 -> 1.1.20-r5)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 176 MiB in 53 packages\r\nRemoving intermediate container ed811d0d0878\r\n ---> e9f8a7562df8\r\nStep 3/16 : RUN apk add --no-cache libffi-dev\r\n ---> Running in ddad337d8352\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/3) Installing linux-headers (4.18.13-r1)\r\n(2/3) Installing pkgconf (1.6.0-r0)\r\n(3/3) Installing libffi-dev (3.2.1-r6)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 183 MiB in 56 packages\r\nRemoving intermediate container ddad337d8352\r\n ---> 3aeb38117dca\r\nStep 4/16 : RUN apk add --no-cache openssl-dev\r\n ---> Running in 29cff9511398\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/1) Installing openssl-dev (1.1.1b-r1)\r\nOK: 202 MiB in 57 packages\r\nRemoving intermediate container 29cff9511398\r\n ---> 2bcd7122b9fe\r\nStep 5/16 : RUN pip install flask\r\n ---> Running in cc1f2a2107fd\r\nCollecting flask\r\n  Downloading https://files.pythonhosted.org/packages/9b/93/628509b8d5dc749656a9641f4caf13540e2cdec85276964ff8f43bbb1d3b/Flask-1.1.1-py2.py3-none-any.whl (94kB)\r\nCollecting Jinja2>=2.10.1 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/1d/e7/fd8b501e7a6dfe492a433deb7b9d833d39ca74916fa8bc63dd1a4947a671/Jinja2-2.10.1-py2.py3-none-any.whl (124kB)\r\nCollecting click>=5.1 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/fa/37/45185cb5abbc30d7257104c434fe0b07e5a195a6847506c074527aa599ec/Click-7.0-py2.py3-none-any.whl (81kB)\r\nCollecting Werkzeug>=0.15 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/d1/ab/d3bed6b92042622d24decc7aadc8877badf18aeca1571045840ad4956d3f/Werkzeug-0.15.5-py2.py3-none-any.whl (328kB)\r\nCollecting itsdangerous>=0.24 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/76/ae/44b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/itsdangerous-1.1.0-py2.py3-none-any.whl\r\nCollecting MarkupSafe>=0.23 (from Jinja2>=2.10.1->flask)\r\n  Downloading https://files.pythonhosted.org/packages/b9/2e/64db92e53b86efccfaea71321f597fa2e1b2bd3853d8ce658568f7a13094/MarkupSafe-1.1.1.tar.gz\r\nBuilding wheels for collected packages: MarkupSafe\r\n  Building wheel for MarkupSafe (setup.py): started\r\n  Building wheel for MarkupSafe (setup.py): finished with status 'done'\r\n  Created wheel for MarkupSafe: filename=MarkupSafe-1.1.1-cp37-cp37m-linux_x86_64.whl size=34397 sha256=2952251511e6024aa0ffdaed7f26e6ce9185c5e9705e80938a1f5afab2a01d9f\r\n  Stored in directory: /root/.cache/pip/wheels/f2/aa/04/0edf07a1b8a5f5f1aed7580fffb69ce8972edc16a505916a77\r\nSuccessfully built MarkupSafe\r\nInstalling collected packages: MarkupSafe, Jinja2, click, Werkzeug, itsdangerous, flask\r\nSuccessfully installed Jinja2-2.10.1 MarkupSafe-1.1.1 Werkzeug-0.15.5 click-7.0 flask-1.1.1 itsdangerous-1.1.0\r\n\u001b[91mWARNING: You are using pip version 19.2.2, however version 19.2.3 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n\u001b[0mRemoving intermediate container cc1f2a2107fd\r\n ---> 550d1611afea\r\nStep 6/16 : RUN pip install flask_sqlalchemy\r\n ---> Running in 7786c059f340\r\nCollecting flask_sqlalchemy\r\n  Downloading https://files.pythonhosted.org/packages/08/ca/582442cad71504a1514a2f053006c8bb128844133d6076a4df17117545fa/Flask_SQLAlchemy-2.4.0-py2.py3-none-any.whl\r\nRequirement already satisfied: Flask>=0.10 in /usr/local/lib/python3.7/site-packages (from flask_sqlalchemy) (1.1.1)\r\nCollecting SQLAlchemy>=0.8.0 (from flask_sqlalchemy)\r\n  Downloading https://files.pythonhosted.org/packages/fc/49/82d64d705ced344ba458197dadab30cfa745f9650ee22260ac2b275d288c/SQLAlchemy-1.3.8.tar.gz (5.9MB)\r\nRequirement already satisfied: Jinja2>=2.10.1 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (2.10.1)\r\nRequirement already satisfied: itsdangerous>=0.24 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (1.1.0)\r\nRequirement already satisfied: click>=5.1 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (7.0)\r\nRequirement already satisfied: Werkzeug>=0.15 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (0.15.5)\r\nRequirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/site-packages (from Jinja2>=2.10.1->Flask>=0.10->flask_sqlalchemy) (1.1.1)\r\nBuilding wheels for collected packages: SQLAlchemy\r\n  Building wheel for SQLAlchemy (setup.py): started\r\n  Building wheel for SQLAlchemy (setup.py): finished with status 'done'\r\n  Created wheel for SQLAlchemy: filename=SQLAlchemy-1.3.8-cp37-cp37m-linux_x86_64.whl size=1198522 sha256=441964aebf7f65419dd1285e0ba997e91debc303458e0a5de902b74f3eccdc8c\r\n  Stored in directory: /root/.cache/pip/wheels/97/b6/66/de2064d40c920adc2984ff3b8fd4f11494c8ab9e48ba87e8a2\r\nSuccessfully built SQLAlchemy\r\nInstalling collected packages: SQLAlchemy, flask-sqlalchemy\r\nSuccessfully installed SQLAlchemy-1.3.8 flask-sqlalchemy-2.4.0\r\n\u001b[91mWARNING: You are using pip version 19.2.2, however version 19.2.3 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n\u001b[0mRemoving intermediate container 7786c059f340\r\n ---> 3cbe57117cad\r\nStep 7/16 : RUN pip install docker-compose\r\n ---> Running in 6e5e8cef71ab\r\nCollecting docker-compose\r\n  Downloading https://files.pythonhosted.org/packages/dd/e6/1521d1dfd9c0da1d1863b18e592d91c3df222e55f258b9876fa1e59bc4b5/docker_compose-1.24.1-py2.py3-none-any.whl (134kB)\r\nCollecting websocket-client<1.0,>=0.32.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/29/19/44753eab1fdb50770ac69605527e8859468f3c0fd7dc5a76dd9c4dbd7906/websocket_client-0.56.0-py2.py3-none-any.whl (200kB)\r\nCollecting docker[ssh]<4.0,>=3.7.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/09/da/7cc7ecdcd01145e9924a8ccbe9c1baf3a362fc75d4cb150676eb5231ea60/docker-3.7.3-py2.py3-none-any.whl (134kB)\r\nCollecting jsonschema<3,>=2.5.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/77/de/47e35a97b2b05c2fadbec67d44cfcdcd09b8086951b331d82de90d2912da/jsonschema-2.6.0-py2.py3-none-any.whl\r\nCollecting cached-property<2,>=1.2.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/3b/86/85c1be2e8db9e13ef9a350aecd6dea292bd612fa288c2f40d035bb750ded/cached_property-1.5.1-py2.py3-none-any.whl\r\nCollecting docopt<0.7,>=0.6.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/a2/55/8f8cab2afd404cf578136ef2cc5dfb50baa1761b68c9da1fb1e4eed343c9/docopt-0.6.2.tar.gz\r\nCollecting requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/ff/17/5cbb026005115301a8fb2f9b0e3e8d32313142fe8b617070e7baad20554f/requests-2.20.1-py2.py3-none-any.whl (57kB)\r\nCollecting six<2,>=1.3.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl\r\nCollecting dockerpty<0.5,>=0.4.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/8d/ee/e9ecce4c32204a6738e0a5d5883d3413794d7498fe8b06f44becc028d3ba/dockerpty-0.4.1.tar.gz\r\nCollecting PyYAML<4.3,>=3.10 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/9e/a3/1d13970c3f36777c583f136c136f804d70f500168edc1edea6daa7200769/PyYAML-3.13.tar.gz (270kB)\r\nCollecting texttable<0.10,>=0.9.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/02/e1/2565e6b842de7945af0555167d33acfc8a615584ef7abd30d1eae00a4d80/texttable-0.9.1.tar.gz\r\nCollecting docker-pycreds>=0.4.0 (from docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/f5/e8/f6bd1eee09314e7e6dee49cbe2c5e22314ccdb38db16c9fc72d2fa80d054/docker_pycreds-0.4.0-py2.py3-none-any.whl\r\nCollecting paramiko>=2.4.2; extra == \"ssh\" (from docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/4b/80/74dace9e48b0ef923633dfb5e48798f58a168e4734bca8ecfaf839ba051a/paramiko-2.6.0-py2.py3-none-any.whl (199kB)\r\nCollecting chardet<3.1.0,>=3.0.2 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl (133kB)\r\nCollecting certifi>=2017.4.17 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/69/1b/b853c7a9d4f6a6d00749e94eb6f3a041e342a885b87340b79c1ef73e3a78/certifi-2019.6.16-py2.py3-none-any.whl (157kB)\r\nCollecting urllib3<1.25,>=1.21.1 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/01/11/525b02e4acc0c747de8b6ccdab376331597c569c42ea66ab0a1dbd36eca2/urllib3-1.24.3-py2.py3-none-any.whl (118kB)\r\nCollecting idna<2.8,>=2.5 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/4b/2a/0276479a4b3caeb8a8c1af2f8e4355746a97fab05a372e4a2c6a6b876165/idna-2.7-py2.py3-none-any.whl (58kB)\r\nCollecting pynacl>=1.0.1 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/61/ab/2ac6dea8489fa713e2b4c6c5b549cc962dd4a842b5998d9e80cf8440b7cd/PyNaCl-1.3.0.tar.gz (3.4MB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting cryptography>=2.5 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/c2/95/f43d02315f4ec074219c6e3124a87eba1d2d12196c2767fadfdc07a83884/cryptography-2.7.tar.gz (495kB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting bcrypt>=3.1.3 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/fa/aa/025a3ab62469b5167bc397837c9ffc486c42a97ef12ceaa6699d8f5a5416/bcrypt-3.1.7.tar.gz (42kB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting cffi>=1.4.1 (from pynacl>=1.0.1->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\nCollecting asn1crypto>=0.21.0 (from cryptography>=2.5->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/ea/cd/35485615f45f30a510576f1a56d1e0a7ad7bd8ab5ed7cdc600ef7cd06222/asn1crypto-0.24.0-py2.py3-none-any.whl (101kB)\r\nCollecting pycparser (from cffi>=1.4.1->pynacl>=1.0.1->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\nBuilding wheels for collected packages: pynacl, cryptography, bcrypt\r\n  Building wheel for pynacl (PEP 517): started\r\n  Building wheel for pynacl (PEP 517): still running...\r\n  Building wheel for pynacl (PEP 517): finished with status 'done'\r\n  Created wheel for pynacl: filename=PyNaCl-1.3.0-cp37-cp37m-linux_x86_64.whl size=1012150 sha256=37db13daf17986c7e545f925f08eba225459ac7c2541aacfc3d95fd6d43b83d5\r\n  Stored in directory: /root/.cache/pip/wheels/c1/10/e7/66597ff71adf8cb7403527243c4b57c66a0d1dfdd8adf2eae4\r\n  Building wheel for cryptography (PEP 517): started\r\n  Building wheel for cryptography (PEP 517): finished with status 'done'\r\n  Created wheel for cryptography: filename=cryptography-2.7-cp37-cp37m-linux_x86_64.whl size=925761 sha256=a0168ec2cb5395676970922e68fbc20a071617f5c09ee99d1154684c12fc45c2\r\n  Stored in directory: /root/.cache/pip/wheels/d0/02/96/64b1439e5409591b6b0294d1da2f66a4ae4f0548d1bdb225b7\r\n  Building wheel for bcrypt (PEP 517): started\r\n  Building wheel for bcrypt (PEP 517): finished with status 'done'\r\n  Created wheel for bcrypt: filename=bcrypt-3.1.7-cp37-cp37m-linux_x86_64.whl size=64476 sha256=270592a4bd2f9178f64f2ec7e0f53e749b1551398a5787cbe5f1db17880b4c82\r\n  Stored in directory: /root/.cache/pip/wheels/ae/b1/2c/dc178774d435228aff4679c4837de4d5ee1dd5568a370fc79c\r\nSuccessfully built pynacl cryptography bcrypt\r\nBuilding wheels for collected packages: docopt, dockerpty, PyYAML, texttable\r\n  Building wheel for docopt (setup.py): started\r\n  Building wheel for docopt (setup.py): finished with status 'done'\r\n  Created wheel for docopt: filename=docopt-0.6.2-py2.py3-none-any.whl size=13704 sha256=7d29b08c59f53705cec434c3c170359366c058ef0d52ac4bf196e4b841d33689\r\n  Stored in directory: /root/.cache/pip/wheels/9b/04/dd/7daf4150b6d9b12949298737de9431a324d4b797ffd63f526e\r\n  Building wheel for dockerpty (setup.py): started\r\n  Building wheel for dockerpty (setup.py): finished with status 'done'\r\n  Created wheel for dockerpty: filename=dockerpty-0.4.1-cp37-none-any.whl size=16606 sha256=42830a29e43f0754276a7c49248294044836c79de405f3714dd613b210975756\r\n  Stored in directory: /root/.cache/pip/wheels/e5/1e/86/bd0a97a0907c6c654af654d5875d1d4383dd1f575f77cee4aa\r\n  Building wheel for PyYAML (setup.py): started\r\n  Building wheel for PyYAML (setup.py): finished with status 'done'\r\n  Created wheel for PyYAML: filename=PyYAML-3.13-cp37-cp37m-linux_x86_64.whl size=43086 sha256=2f84e46164d25cc753062a2c1e97883bff368c6ca22bd8ce34c29ca3c0dd6b35\r\n  Stored in directory: /root/.cache/pip/wheels/ad/da/0c/74eb680767247273e2cf2723482cb9c924fe70af57c334513f\r\n  Building wheel for texttable (setup.py): started\r\n  Building wheel for texttable (setup.py): finished with status 'done'\r\n  Created wheel for texttable: filename=texttable-0.9.1-cp37-none-any.whl size=9970 sha256=e3e76b679a4a62addc00371dc52c24492c233b0d69ad151d9f221b62ec1e9ee1\r\n  Stored in directory: /root/.cache/pip/wheels/99/1e/2b/8452d3a48dad98632787556a0f2f90d56703b39cdf7d142dd1\r\nSuccessfully built docopt dockerpty PyYAML texttable\r\nInstalling collected packages: six, websocket-client, docker-pycreds, chardet, certifi, urllib3, idna, requests, pycparser, cffi, pynacl, asn1crypto, cryptography, bcrypt, paramiko, docker, jsonschema, cached-property, docopt, dockerpty, PyYAML, texttable, docker-compose\r\nSuccessfully installed PyYAML-3.13 asn1crypto-0.24.0 bcrypt-3.1.7 cached-property-1.5.1 certifi-2019.6.16 cffi-1.12.3 chardet-3.0.4 cryptography-2.7 docker-3.7.3 docker-compose-1.24.1 docker-pycreds-0.4.0 dockerpty-0.4.1 docopt-0.6.2 idna-2.7 jsonschema-2.6.0 paramiko-2.6.0 pycparser-2.19 pynacl-1.3.0 requests-2.20.1 six-1.12.0 texttable-0.9.1 urllib3-1.24.3 websocket-client-0.56.0\r\n\u001b[91mWARNING: You are using pip version 19.2.2, however version 19.2.3 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n\u001b[0mRemoving intermediate container 6e5e8cef71ab\r\n ---> 8b885572fb8e\r\nStep 8/16 : RUN apk add mariadb-connector-c-dev\r\n ---> Running in 93672dd838df\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/3) Installing zlib-dev (1.2.11-r1)\r\n(2/3) Installing mariadb-connector-c (3.0.8-r0)\r\n(3/3) Installing mariadb-connector-c-dev (3.0.8-r0)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 203 MiB in 60 packages\r\nRemoving intermediate container 93672dd838df\r\n ---> ba0156070d06\r\nStep 9/16 : RUN pip install mysqlclient\r\n ---> Running in 2f9f28173532\r\nCollecting mysqlclient\r\n  Downloading https://files.pythonhosted.org/packages/4d/38/c5f8bac9c50f3042c8f05615f84206f77f03db79781db841898fde1bb284/mysqlclient-1.4.4.tar.gz (86kB)\r\nBuilding wheels for collected packages: mysqlclient\r\n  Building wheel for mysqlclient (setup.py): started\r\n  Building wheel for mysqlclient (setup.py): finished with status 'done'\r\n  Created wheel for mysqlclient: filename=mysqlclient-1.4.4-cp37-cp37m-linux_x86_64.whl size=113706 sha256=828d4fb6a2dc1e47ba0ae7875e70eaae001d55ddff53b3196f948b78b9a7551c\r\n  Stored in directory: /root/.cache/pip/wheels/a0/04/57/031b9b01df38999df7dc7f4ee998a98ecdbd2d781f73e3ffbf\r\nSuccessfully built mysqlclient\r\nInstalling collected packages: mysqlclient\r\nSuccessfully installed mysqlclient-1.4.4\r\n\u001b[91mWARNING: You are using pip version 19.2.2, however version 19.2.3 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n\u001b[0mRemoving intermediate container 2f9f28173532\r\n ---> f50e30a9c4e5\r\nStep 10/16 : ARG DOCKER_CLI_VERSION=\"19.03.1\"\r\n ---> Running in e410be2c3bd2\r\nRemoving intermediate container e410be2c3bd2\r\n ---> 5a4645cad01f\r\nStep 11/16 : ENV DOWNLOAD_URL=\"https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_CLI_VERSION.tgz\"\r\n ---> Running in 97a2e27b56bc\r\nRemoving intermediate container 97a2e27b56bc\r\n ---> dc06238edd47\r\nStep 12/16 : RUN apk add curl     && mkdir -p /tmp/download     && curl -L $DOWNLOAD_URL | tar -xz -C /tmp/download     && mv /tmp/download/docker/docker /usr/local/bin/     && rm -rf /tmp/download     && rm -rf /var/cache/apk/*\r\n ---> Running in fef90c6f03c5\r\n(1/4) Installing nghttp2-libs (1.35.1-r1)\r\n(2/4) Installing libssh2 (1.8.2-r0)\r\n(3/4) Installing libcurl (7.64.0-r2)\r\n(4/4) Installing curl (7.64.0-r2)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 204 MiB in 64 packages\r\n\u001b[91m  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\u001b[0m\u001b[91m\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\u001b[0m\u001b[91m\r  0 60.3M    0   98k    0     0  64060      0  0:16:27  0:00:01  0:16:26 64019\u001b[0m\u001b[91m\r  4 60.3M    4 2743k    0     0  1032k      0  0:00:59  0:00:02  0:00:57 1031k\u001b[0m\u001b[91m\r  6 60.3M    6 3803k    0     0  1065k      0  0:00:57  0:00:03  0:00:54 1065k\u001b[0m\u001b[91m\r  7 60.3M    7 4553k    0     0   997k      0  0:01:01  0:00:04  0:00:57  996k\u001b[0m\u001b[91m\r  8 60.3M    8 5258k    0     0   943k      0  0:01:05  0:00:05  0:01:00 1068k\u001b[0m\u001b[91m\r  9 60.3M    9 5858k    0     0   880k      0  0:01:10  0:00:06  0:01:04 1133k\u001b[0m\u001b[91m\r 10 60.3M   10 6432k    0     0   849k      0  0:01:12  0:00:07  0:01:05  751k\u001b[0m\u001b[91m\r 11 60.3M   11 7101k    0     0   827k      0  0:01:14  0:00:08  0:01:06  657k\u001b[0m\u001b[91m\r 12 60.3M   12 7669k    0     0   801k      0  0:01:17  0:00:09  0:01:08  622k\u001b[0m\u001b[91m\r 13 60.3M   13 8295k    0     0   784k      0  0:01:18  0:00:10  0:01:08  608k\u001b[0m\u001b[91m\r 14 60.3M   14 8892k    0     0   768k      0  0:01:20  0:00:11  0:01:09  616k\u001b[0m\u001b[91m\r 15 60.3M   15 9290k    0     0   739k      0  0:01:23  0:00:12  0:01:11  571k\u001b[0m\u001b[91m\r 16 60.3M   16 9886k    0     0   728k      0  0:01:24  0:00:13  0:01:11  558k\u001b[0m\u001b[91m\r 16 60.3M   16 10.2M    0     0   719k      0  0:01:25  0:00:14  0:01:11  563k\u001b[0m\u001b[91m\r 17 60.3M   17 10.8M    0     0   714k      0  0:01:26  0:00:15  0:01:11  564k\u001b[0m\u001b[91m\r 19 60.3M   19 12.0M    0     0   735k      0  0:01:23  0:00:16  0:01:07  662k\u001b[0m\u001b[91m\r 21 60.3M   21 13.0M    0     0   756k      0  0:01:21  0:00:17  0:01:04  798k\u001b[0m\u001b[91m\r 23 60.3M   23 13.8M    0     0   766k      0  0:01:20  0:00:18  0:01:02  867k\u001b[0m\u001b[91m\r 24 60.3M   24 14.6M    0     0   766k      0  0:01:20  0:00:19  0:01:01  902k\u001b[0m\u001b[91m\r 25 60.3M   25 15.4M    0     0   767k      0  0:01:20  0:00:20  0:01:00  932k\u001b[0m\u001b[91m\r 27 60.3M   27 16.3M    0     0   774k      0  0:01:19  0:00:21  0:00:58  909k\u001b[0m\u001b[91m\r 28 60.3M   28 17.1M    0     0   773k      0  0:01:19  0:00:22  0:00:57  833k\u001b[0m\u001b[91m\r 29 60.3M   29 17.8M    0     0   776k      0  0:01:19  0:00:23  0:00:56  812k\u001b[0m\u001b[91m\r 31 60.3M   31 18.8M    0     0   782k      0  0:01:18  0:00:24  0:00:54  846k\u001b[0m\u001b[91m\r 32 60.3M   32 19.5M    0     0   782k      0  0:01:18  0:00:25  0:00:53  845k\u001b[0m\u001b[91m\r 33 60.3M   33 20.2M    0     0   779k      0  0:01:19  0:00:26  0:00:53  799k\u001b[0m\u001b[91m\r 34 60.3M   34 21.0M    0     0   777k      0  0:01:19  0:00:27  0:00:52  796k\u001b[0m\u001b[91m\r 35 60.3M   35 21.6M    0     0   777k      0  0:01:19  0:00:28  0:00:51  784k\u001b[0m\u001b[91m\r 37 60.3M   37 22.5M    0     0   781k      0  0:01:19  0:00:29  0:00:50  776k\u001b[0m\u001b[91m\r 38 60.3M   38 23.3M    0     0   779k      0  0:01:19  0:00:30  0:00:49  763k\u001b[0m\u001b[91m\r 40 60.3M   40 24.2M    0     0   785k      0  0:01:18  0:00:31  0:00:47  820k\u001b[0m\u001b[91m\r 41 60.3M   41 25.2M    0     0   793k      0  0:01:17  0:00:32  0:00:45  882k\u001b[0m\u001b[91m\r 43 60.3M   43 26.2M    0     0   799k      0  0:01:17  0:00:33  0:00:44  929k\u001b[0m\u001b[91m\r 45 60.3M   45 27.2M    0     0   805k      0  0:01:16  0:00:34  0:00:42  947k\u001b[0m\u001b[91m\r 46 60.3M   46 28.0M    0     0   806k      0  0:01:16  0:00:35  0:00:41  973k\u001b[0m\u001b[91m\r 47 60.3M   47 28.8M    0     0   805k      0  0:01:16  0:00:36  0:00:40  935k\u001b[0m\u001b[91m\r 48 60.3M   48 29.3M    0     0   800k      0  0:01:17  0:00:37  0:00:40  846k\u001b[0m\u001b[91m\r 49 60.3M   49 29.8M    0     0   792k      0  0:01:17  0:00:38  0:00:39  741k\u001b[0m\u001b[91m\r 50 60.3M   50 30.3M    0     0   784k      0  0:01:18  0:00:39  0:00:39  642k\u001b[0m\u001b[91m\r 51 60.3M   51 31.0M    0     0   781k      0  0:01:18  0:00:40  0:00:38  608k\u001b[0m\u001b[91m\r 52 60.3M   52 31.6M    0     0   780k      0  0:01:19  0:00:41  0:00:38  590k\u001b[0m\u001b[91m\r 53 60.3M   53 32.2M    0     0   774k      0  0:01:19  0:00:42  0:00:37  578k\u001b[0m\u001b[91m\r 55 60.3M   55 33.2M    0     0   781k      0  0:01:19  0:00:43  0:00:36  696k\u001b[0m\u001b[91m\r 56 60.3M   56 34.2M    0     0   786k      0  0:01:18  0:00:44  0:00:34  803k\u001b[0m\u001b[91m\r 57 60.3M   57 34.7M    0     0   779k      0  0:01:19  0:00:45  0:00:34  762k\u001b[0m\u001b[91m\r 58 60.3M   58 35.5M    0     0   780k      0  0:01:19  0:00:46  0:00:33  779k\u001b[0m\u001b[91m\r 60 60.3M   60 36.3M    0     0   780k      0  0:01:19  0:00:47  0:00:32  833k\u001b[0m\u001b[91m\r 61 60.3M   61 37.2M    0     0   785k      0  0:01:18  0:00:48  0:00:30  825k\u001b[0m\u001b[91m\r 62 60.3M   62 37.9M    0     0   784k      0  0:01:18  0:00:49  0:00:29  765k\u001b[0m\u001b[91m\r 64 60.3M   64 38.8M    0     0   785k      0  0:01:18  0:00:50  0:00:28  833k\u001b[0m\u001b[91m\r 65 60.3M   65 39.5M    0     0   784k      0  0:01:18  0:00:51  0:00:27  830k\u001b[0m\u001b[91m\r 66 60.3M   66 40.2M    0     0   783k      0  0:01:18  0:00:52  0:00:26  807k\u001b[0m\u001b[91m\r 67 60.3M   67 41.0M    0     0   783k      0  0:01:18  0:00:53  0:00:25  763k\u001b[0m\u001b[91m\r 68 60.3M   68 41.5M    0     0   779k      0  0:01:19  0:00:54  0:00:25  722k\u001b[0m\u001b[91m\r 69 60.3M   69 42.1M    0     0   776k      0  0:01:19  0:00:55  0:00:24  689k\u001b[0m\u001b[91m\r 71 60.3M   71 42.8M    0     0   776k      0  0:01:19  0:00:56  0:00:23  689k\u001b[0m\u001b[91m\r 72 60.3M   72 43.5M    0     0   775k      0  0:01:19  0:00:57  0:00:22  691k\u001b[0m\u001b[91m\r 73 60.3M   73 44.4M    0     0   776k      0  0:01:19  0:00:58  0:00:21  698k\u001b[0m\u001b[91m\r 74 60.3M   74 45.1M    0     0   775k      0  0:01:19  0:00:59  0:00:20  740k\u001b[0m\u001b[91m\r 76 60.3M   76 46.0M    0     0   778k      0  0:01:19  0:01:00  0:00:19  799k\u001b[0m\u001b[91m\r 77 60.3M   77 46.8M    0     0   779k      0  0:01:19  0:01:01  0:00:18  806k\u001b[0m\u001b[91m\r 78 60.3M   78 47.5M    0     0   776k      0  0:01:19  0:01:02  0:00:17  792k\u001b[0m\u001b[91m\r 80 60.3M   80 48.2M    0     0   776k      0  0:01:19  0:01:03  0:00:16  781k\u001b[0m\u001b[91m\r 80 60.3M   80 48.8M    0     0   773k      0  0:01:19  0:01:04  0:00:15  751k\u001b[0m\u001b[91m\r 81 60.3M   81 49.4M    0     0   771k      0  0:01:20  0:01:05  0:00:15  692k\u001b[0m\u001b[91m\r 82 60.3M   82 50.0M    0     0   769k      0  0:01:20  0:01:06  0:00:14  656k\u001b[0m\u001b[91m\r 83 60.3M   83 50.6M    0     0   766k      0  0:01:20  0:01:07  0:00:13  630k\u001b[0m\u001b[91m\r 84 60.3M   84 51.2M    0     0   765k      0  0:01:20  0:01:08  0:00:12  612k\u001b[0m\u001b[91m\r 85 60.3M   85 51.8M    0     0   762k      0  0:01:20  0:01:09  0:00:11  620k\u001b[0m\u001b[91m\r 86 60.3M   86 52.2M    0     0   758k      0  0:01:21  0:01:10  0:00:11  586k\u001b[0m\u001b[91m\r 87 60.3M   87 52.9M    0     0   755k      0  0:01:21  0:01:11  0:00:10  566k\u001b[0m\u001b[91m\r 88 60.3M   88 53.3M    0     0   752k      0  0:01:22  0:01:12  0:00:10  566k\u001b[0m\u001b[91m\r 89 60.3M   89 53.8M    0     0   748k      0  0:01:22  0:01:13  0:00:09  529k\u001b[0m\u001b[91m\r 90 60.3M   90 54.2M    0     0   745k      0  0:01:22  0:01:14  0:00:08  501k\u001b[0m\u001b[91m\r 90 60.3M   90 54.8M    0     0   743k      0  0:01:23  0:01:15  0:00:08  521k\u001b[0m\u001b[91m\r 91 60.3M   91 55.3M    0     0   740k      0  0:01:23  0:01:16  0:00:07  523k\u001b[0m\u001b[91m\r 92 60.3M   92 55.9M    0     0   738k      0  0:01:23  0:01:17  0:00:06  533k\u001b[0m\u001b[91m\r 94 60.3M   94 56.8M    0     0   740k      0  0:01:23  0:01:18  0:00:05  621k\u001b[0m\u001b[91m\r 95 60.3M   95 57.4M    0     0   738k      0  0:01:23  0:01:19  0:00:04  637k\u001b[0m\u001b[91m\r 96 60.3M   96 58.2M    0     0   740k      0  0:01:23  0:01:20  0:00:03  696k\u001b[0m\u001b[91m\r 98 60.3M   98 59.1M    0     0   742k      0  0:01:23  0:01:21  0:00:02  775k\u001b[0m\u001b[91m\r 99 60.3M   99 59.9M    0     0   744k      0  0:01:23  0:01:22  0:00:01  831k\u001b[0m\u001b[91m\r100 60.3M  100 60.3M    0     0   743k      0  0:01:23  0:01:23 --:--:--  795k\r\n\u001b[0mRemoving intermediate container fef90c6f03c5\r\n ---> ab9560b86773\r\nStep 13/16 : COPY src /src/\r\n ---> 9f3c75341323\r\nStep 14/16 : RUN mkdir /data\r\n ---> Running in e1112f130674\r\nRemoving intermediate container e1112f130674\r\n ---> 94f0b1bada78\r\nStep 15/16 : EXPOSE 5000\r\n ---> Running in 2f2c63d777fd\r\nRemoving intermediate container 2f2c63d777fd\r\n ---> 6be131f969e6\r\nStep 16/16 : ENTRYPOINT [\"python\", \"/src/mdnssec.py\"]\r\n ---> Running in 819b48689268\r\nRemoving intermediate container 819b48689268\r\n ---> 95c09c212a5e\r\n\u001b[2K\r\r\r\nSuccessfully built 95c09c212a5e\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\r\n\r\n{\"services\": {\"api\": {\"stack_api\": {\"cmd\": [], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"api\", \"com.docker.compose.config-hash\": \"5ad9b3e9336adfa5bcf4c0ce657b4eecf26b648354fdef328101030e6b2a61cf\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1a:00:03\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.26.0.3\", \"aliases\": [\"api\", \"c810fd7ff7ce\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:84:05\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.132.5\", \"aliases\": [\"api\", \"c810fd7ff7ce\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\"}}, \"mysql_replication_db\": {\"stack_api_replication_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_replication_db\", \"com.docker.compose.config-hash\": \"9cd9f2f499dab3038fcd29135c92100b91de4b988c0ba5c2a7b20ef5732b7ac7\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"db_replication_net\": {\"macAddress\": \"02:42:0a:00:84:04\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.132.4\", \"aliases\": [\"e3b2cbee7247\", \"mysql_replication_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\"}}, \"mysql_db\": {\"stack_api_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_db\", \"com.docker.compose.config-hash\": \"b48315ada656d5149246743cd1b4fbd89e8102800c14cd74c447df66a3fce198\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1a:00:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.26.0.2\", \"aliases\": [\"e686388208ad\", \"mysql_db\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:84:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.132.2\", \"aliases\": [\"e686388208ad\", \"mysql_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\"}}}, \"invocation\": {\"module_args\": {\"project_src\": \"/home/alfred/management\", \"hostname_check\": false, \"recreate\": \"smart\", \"docker_host\": \"unix://var/run/docker.sock\", \"remove_images\": null, \"client_key\": null, \"scale\": null, \"nocache\": false, \"remove_volumes\": false, \"state\": \"present\", \"build\": true, \"client_cert\": null, \"api_version\": \"auto\", \"files\": null, \"project_name\": null, \"ca_cert\": null, \"definition\": null, \"tls_hostname\": \"localhost\", \"dependencies\": true, \"services\": null, \"tls\": false, \"pull\": false, \"remove_orphans\": false, \"restarted\": false, \"ssl_version\": null, \"stopped\": false, \"timeout\": 10, \"debug\": false, \"validate_certs\": false}}, \"changed\": true, \"ansible_facts\": {\"api\": {\"stack_api\": {\"cmd\": [], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"api\", \"com.docker.compose.config-hash\": \"5ad9b3e9336adfa5bcf4c0ce657b4eecf26b648354fdef328101030e6b2a61cf\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1a:00:03\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.26.0.3\", \"aliases\": [\"api\", \"c810fd7ff7ce\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:84:05\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.132.5\", \"aliases\": [\"api\", \"c810fd7ff7ce\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\"}}, \"mysql_replication_db\": {\"stack_api_replication_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_replication_db\", \"com.docker.compose.config-hash\": \"9cd9f2f499dab3038fcd29135c92100b91de4b988c0ba5c2a7b20ef5732b7ac7\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"db_replication_net\": {\"macAddress\": \"02:42:0a:00:84:04\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.132.4\", \"aliases\": [\"e3b2cbee7247\", \"mysql_replication_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\"}}, \"mysql_db\": {\"stack_api_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_db\", \"com.docker.compose.config-hash\": \"b48315ada656d5149246743cd1b4fbd89e8102800c14cd74c447df66a3fce198\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1a:00:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.26.0.2\", \"aliases\": [\"e686388208ad\", \"mysql_db\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:84:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.132.2\", \"aliases\": [\"e686388208ad\", \"mysql_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\"}}}}\r\n", "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error", "rc": 0}
2019-08-30 12:03:54,062 p=27273 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-30 12:03:54,064 p=27273 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=27   changed=12   unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2019-08-30 12:08:27,180 p=28863 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-30 12:08:27,307 p=28863 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-30 12:08:27,334 p=28863 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:08:27,360 p=28863 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-30 12:08:58,748 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:08:58,770 p=28863 u=aar |  TASK [manager : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-30 12:09:08,165 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:09:08,182 p=28863 u=aar |  TASK [manager : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] ********************************************************************
2019-08-30 12:09:19,016 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:09:19,046 p=28863 u=aar |  TASK [manager : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *****************************************
2019-08-30 12:09:19,063 p=28863 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:09:19,079 p=28863 u=aar |  TASK [manager : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] ********************************************************************************
2019-08-30 12:09:19,096 p=28863 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:09:19,120 p=28863 u=aar |  TASK [manager : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ***********************************************************
2019-08-30 12:09:29,800 p=28863 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:09:29,819 p=28863 u=aar |  TASK [manager : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] ************************************
2019-08-30 12:09:29,839 p=28863 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:09:29,857 p=28863 u=aar |  TASK [manager : Install iptables name=['iptables-services'], state=present] *********************************************************************************************************************
2019-08-30 12:09:38,757 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:09:38,774 p=28863 u=aar |  TASK [manager : Install iptables name=['iptables'], state=present] ******************************************************************************************************************************
2019-08-30 12:09:38,794 p=28863 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:09:38,813 p=28863 u=aar |  TASK [manager : Disable firewalld state=stopped, name=firewalld, enabled=False] *****************************************************************************************************************
2019-08-30 12:09:47,885 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:09:47,905 p=28863 u=aar |  TASK [manager : Enable iptables state=started, name=iptables, enabled=True] *********************************************************************************************************************
2019-08-30 12:09:56,127 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:09:56,146 p=28863 u=aar |  TASK [manager : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] *********************************************************************************************
2019-08-30 12:10:04,990 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:10:05,014 p=28863 u=aar |  TASK [manager : Enable docker state=started, name=docker, enabled=True] *************************************************************************************************************************
2019-08-30 12:10:13,227 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:10:13,245 p=28863 u=aar |  TASK [manager : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] ************************************************************************************************************
2019-08-30 12:10:21,907 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:10:21,926 p=28863 u=aar |  TASK [manager : Init swarm state=present] *******************************************************************************************************************************************************
2019-08-30 12:10:30,775 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:10:30,964 p=28863 u=aar |  TASK [manager : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-30 12:10:39,153 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:10:39,167 p=28863 u=aar |  TASK [manager : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ***********************************************************************************************
2019-08-30 12:10:47,858 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:10:47,905 p=28863 u=aar |  TASK [manager : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *******************************************************************
2019-08-30 12:10:57,469 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:10:57,488 p=28863 u=aar |  TASK [manager : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-30 12:11:06,442 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:11:06,464 p=28863 u=aar |  TASK [manager : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************
2019-08-30 12:13:44,709 p=28863 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:13:44,732 p=28863 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 12:13:53,798 p=28863 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:13:53,818 p=28863 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 12:14:01,151 p=28863 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:14:01,197 p=28863 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 12:14:08,757 p=28863 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:14:08,776 p=28863 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 12:14:16,133 p=28863 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:14:16,153 p=28863 u=aar |  TASK [manager : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-30 12:14:28,680 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:14:28,698 p=28863 u=aar |  TASK [manager : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***********************************
2019-08-30 12:16:29,970 p=28863 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:16:29,993 p=28863 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 12:16:36,963 p=28863 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:16:36,980 p=28863 u=aar |  TASK [manager : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **********
2019-08-30 12:16:43,981 p=28863 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:16:44,002 p=28863 u=aar |  TASK [manager : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *************
2019-08-30 12:16:51,032 p=28863 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:16:51,054 p=28863 u=aar |  TASK [manager : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-30 12:17:02,964 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:17:02,983 p=28863 u=aar |  TASK [manager : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *****************************************************
2019-08-30 12:17:11,210 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:17:11,231 p=28863 u=aar |  TASK [manager : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] ***************************************************************
2019-08-30 12:17:21,034 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:17:21,068 p=28863 u=aar |  TASK [manager : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] *********************************************************
2019-08-30 12:17:45,397 p=28863 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:17:45,419 p=28863 u=aar |  TASK [manager : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-30 12:17:53,656 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:17:53,676 p=28863 u=aar |  TASK [manager : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-30 12:18:02,068 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:18:02,126 p=28863 u=aar |  TASK [manager : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-30 12:18:10,431 p=28863 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:18:10,454 p=28863 u=aar |  TASK [manager : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *****************************************************
2019-08-30 12:18:20,236 p=28863 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 12:18:20,242 p=28863 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-30 12:18:20,243 p=28863 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=33   changed=12   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-30 20:08:58,989 p=8445 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-30 20:08:59,045 p=8445 u=aar |  TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] *********************************************************************************************************************************
2019-08-30 20:09:28,029 p=8445 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:09:28,050 p=8445 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-30 20:09:28,071 p=8445 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:09:28,090 p=8445 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-30 20:10:30,250 p=8445 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:10:30,269 p=8445 u=aar |  TASK [manager : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-30 20:10:42,820 p=8445 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:10:42,842 p=8445 u=aar |  TASK [manager : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] ********************************************************************
2019-08-30 20:10:55,340 p=8445 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:10:55,360 p=8445 u=aar |  TASK [manager : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *****************************************
2019-08-30 20:10:55,382 p=8445 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:10:55,404 p=8445 u=aar |  TASK [manager : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] ********************************************************************************
2019-08-30 20:10:55,426 p=8445 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:10:55,446 p=8445 u=aar |  TASK [manager : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ***********************************************************
2019-08-30 20:11:05,989 p=8445 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:11:06,011 p=8445 u=aar |  TASK [manager : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] ************************************
2019-08-30 20:11:06,033 p=8445 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:11:06,054 p=8445 u=aar |  TASK [manager : Install iptables name=['iptables-services'], state=present] *********************************************************************************************************************
2019-08-30 20:11:16,983 p=8445 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:11:17,002 p=8445 u=aar |  TASK [manager : Install iptables name=['iptables'], state=present] ******************************************************************************************************************************
2019-08-30 20:11:17,026 p=8445 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:11:17,045 p=8445 u=aar |  TASK [manager : Disable firewalld state=stopped, name=firewalld, enabled=False] *****************************************************************************************************************
2019-08-30 20:11:30,572 p=8445 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:11:30,596 p=8445 u=aar |  TASK [manager : Enable iptables state=started, name=iptables, enabled=True] *********************************************************************************************************************
2019-08-30 20:11:42,908 p=8445 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:11:42,931 p=8445 u=aar |  TASK [manager : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] *********************************************************************************************
2019-08-30 20:11:53,589 p=8445 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:11:53,611 p=8445 u=aar |  TASK [manager : Enable docker state=started, name=docker, enabled=True] *************************************************************************************************************************
2019-08-30 20:12:05,918 p=8445 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:12:05,940 p=8445 u=aar |  TASK [manager : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] ************************************************************************************************************
2019-08-30 20:12:17,648 p=8445 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:12:17,671 p=8445 u=aar |  TASK [manager : Init swarm state=present] *******************************************************************************************************************************************************
2019-08-30 20:12:28,129 p=8445 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:12:28,150 p=8445 u=aar |  TASK [manager : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-30 20:12:39,234 p=8445 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:12:39,255 p=8445 u=aar |  TASK [manager : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ***********************************************************************************************
2019-08-30 20:12:49,367 p=8445 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:12:49,384 p=8445 u=aar |  TASK [manager : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *******************************************************************
2019-08-30 20:13:00,708 p=8445 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:13:00,750 p=8445 u=aar |  TASK [manager : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': 0.25, 'memory': '20M'}, limits={'cpus': 0.5, 'memory': '128M'}] ***
2019-08-30 20:13:11,899 p=8445 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:13:11,927 p=8445 u=aar |  TASK [manager : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************
2019-08-30 20:17:41,013 p=8445 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:17:41,052 p=8445 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 20:17:59,314 p=8445 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:17:59,333 p=8445 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 20:18:20,791 p=8445 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:18:20,808 p=8445 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 20:18:49,866 p=8445 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:18:49,884 p=8445 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 20:19:15,669 p=8445 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:19:15,695 p=8445 u=aar |  TASK [manager : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-30 20:20:20,064 p=8445 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:20:20,083 p=8445 u=aar |  TASK [manager : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***********************************
2019-08-30 20:28:02,777 p=8445 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:28:02,800 p=8445 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 20:28:33,819 p=8445 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:28:33,838 p=8445 u=aar |  TASK [manager : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **********
2019-08-30 20:28:48,603 p=8445 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:28:48,625 p=8445 u=aar |  TASK [manager : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *************
2019-08-30 20:29:15,966 p=8445 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:29:15,987 p=8445 u=aar |  TASK [manager : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-30 20:29:50,055 p=8445 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:29:50,075 p=8445 u=aar |  TASK [manager : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *****************************************************
2019-08-30 20:30:15,325 p=8445 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 20:30:15,349 p=8445 u=aar |  TASK [manager : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] ***************************************************************
2019-08-30 20:41:25,664 p=8445 u=aar |   [WARNING]: Module invocation had junk after the JSON data:  ---> Running in 50d605ab290c Removing intermediate container 50d605ab290c  ---> 4729af8e77ff [2K   Successfully built 4729af8e77ff
Successfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0  {"services": {"api": {"stack_api": {"cmd": [], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "api", "com.docker.compose.config-hash": "07be9136eca7a18be130ae1ce43d4d0504d502ad32927b3753692136581d3b26", "com.docker.compose.project": "management",
"com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress":
"02:42:ac:1c:00:03", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 16, "globalIPv6": "", "IPAddress": "172.28.0.3", "aliases": ["api", "a539196690e3"]}, "db_replication_net":
{"macAddress": "02:42:0a:00:87:05", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.135.5", "aliases": ["api", "a539196690e3"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0"}}, "mysql_replication_db": {"stack_api_replication_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "mysql_replication_db", "com.docker.compose.config-hash": "3a3cac0b1f0de2a3d0ff47afe23987e94cd480fb9650fc3e4fb2ab9607eb906e", "com.docker.compose.project":
"management", "com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"db_replication_net": {"macAddress":
"02:42:0a:00:87:04", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.135.4", "aliases": ["6e5a9c62f3d9", "mysql_replication_db"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0"}}, "mysql_db": {"stack_api_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels":
{"com.docker.compose.service": "mysql_db", "com.docker.compose.config-hash": "070a41f0baae5f38d25d25a529903e4ba55fadb81a831a6a66376a0d54051523", "com.docker.compose.project": "management",
"com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress":
"02:42:ac:1c:00:02", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 16, "globalIPv6": "", "IPAddress": "172.28.0.2", "aliases": ["4f6a4a54ea84", "mysql_db"]}, "db_replication_net":
{"macAddress": "02:42:0a:00:87:02", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.135.2", "aliases": ["4f6a4a54ea84", "mysql_db"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0"}}}, "invocation": {"module_args": {"project_src": "/home/alfred/management", "hostname_check": false, "recreate": "smart",
"docker_host": "unix://var/run/docker.sock", "remove_images": null, "client_key": null, "scale": null, "nocache": false, "remove_volumes": false, "state": "present", "build": true,
"client_cert": null, "api_version": "auto", "files": null, "project_name": null, "ca_cert": null, "definition": null, "tls_hostname": "localhost", "dependencies": true, "services": null,
"tls": false, "pull": false, "remove_orphans": false, "restarted": false, "ssl_version": null, "stopped": false, "timeout": 10, "debug": false, "validate_certs": false}}, "changed": true,
"ansible_facts": {"api": {"stack_api": {"cmd": [], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "api", "com.docker.compose.config-hash":
"07be9136eca7a18be130ae1ce43d4d0504d502ad32927b3753692136581d3b26", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1", "com.docker.compose.oneoff": "False",
"com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress": "02:42:ac:1c:00:03", "globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 16,
"globalIPv6": "", "IPAddress": "172.28.0.3", "aliases": ["api", "a539196690e3"]}, "db_replication_net": {"macAddress": "02:42:0a:00:87:05", "globalIPv6PrefixLen": 0, "links": null,
"IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.135.5", "aliases": ["api", "a539196690e3"]}}, "image": "registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0"}},
"mysql_replication_db": {"stack_api_replication_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "mysql_replication_db",
"com.docker.compose.config-hash": "3a3cac0b1f0de2a3d0ff47afe23987e94cd480fb9650fc3e4fb2ab9607eb906e", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1",
"com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"db_replication_net": {"macAddress": "02:42:0a:00:87:04", "globalIPv6PrefixLen": 0, "links":
null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.135.4", "aliases": ["6e5a9c62f3d9", "mysql_replication_db"]}}, "image": "registry.mdnssec.ri.mu.afrinic.net:5000/mysql-
slave57:1.0"}}, "mysql_db": {"stack_api_db": {"cmd": ["mysqld"], "state": {"status": "running", "running": true}, "labels": {"com.docker.compose.service": "mysql_db",
"com.docker.compose.config-hash": "070a41f0baae5f38d25d25a529903e4ba55fadb81a831a6a66376a0d54051523", "com.docker.compose.project": "management", "com.docker.compose.version": "1.24.1",
"com.docker.compose.oneoff": "False", "com.docker.compose.container-number": "1"}, "networks": {"management_stack_api_db_net": {"macAddress": "02:42:ac:1c:00:02", "globalIPv6PrefixLen": 0,
"links": null, "IPPrefixLen": 16, "globalIPv6": "", "IPAddress": "172.28.0.2", "aliases": ["4f6a4a54ea84", "mysql_db"]}, "db_replication_net": {"macAddress": "02:42:0a:00:87:02",
"globalIPv6PrefixLen": 0, "links": null, "IPPrefixLen": 24, "globalIPv6": "", "IPAddress": "10.0.135.2", "aliases": ["4f6a4a54ea84", "mysql_db"]}}, "image":
"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0"}}}}

2019-08-30 20:41:29,022 p=8445 u=aar |  fatal: [mdnssec.ri.mu.afrinic.net]: FAILED! => {"changed": false, "module_stderr": "Shared connection to mdnssec.ri.mu.afrinic.net closed.\r\n", "module_stdout": "No handlers could be found for logger \"compose.config.config\"\r\nStep 1/12 : FROM oraclelinux:7-slim\r\n ---> 874477adb545\r\nStep 2/12 : ARG MYSQL_SERVER_PACKAGE=mysql-community-server-minimal-5.7.27\r\n ---> Running in 16ad4efc06e2\r\nRemoving intermediate container 16ad4efc06e2\r\n ---> c11a7c1695f0\r\nStep 3/12 : ARG MYSQL_SHELL_PACKAGE=mysql-shell-8.0.17\r\n ---> Running in 6360cc20c88a\r\nRemoving intermediate container 6360cc20c88a\r\n ---> 9163251bcacc\r\nStep 4/12 : RUN yum install -y https://repo.mysql.com/mysql-community-minimal-release-el7.rpm     https://repo.mysql.com/mysql-community-release-el7.rpm     && yum-config-manager --enable mysql57-server-minimal     && yum install -y       $MYSQL_SERVER_PACKAGE       $MYSQL_SHELL_PACKAGE       libpwquality     && yum clean all     && mkdir /docker-entrypoint-initdb.d\r\n ---> Running in 0e5a7bfb6723\r\nLoaded plugins: ovl\r\nExamining /var/tmp/yum-root-wA9kwo/mysql-community-minimal-release-el7.rpm: mysql-community-minimal-release-el7-1.noarch\r\nMarking /var/tmp/yum-root-wA9kwo/mysql-community-minimal-release-el7.rpm to be installed\r\nExamining /var/tmp/yum-root-wA9kwo/mysql-community-release-el7.rpm: mysql80-community-release-el7-3.noarch\r\nMarking /var/tmp/yum-root-wA9kwo/mysql-community-release-el7.rpm to be installed\r\nResolving Dependencies\r\n--> Running transaction check\r\n---> Package mysql-community-minimal-release.noarch 0:el7-1 will be installed\r\n---> Package mysql80-community-release.noarch 0:el7-3 will be installed\r\n--> Finished Dependency Resolution\r\n\r\nDependencies Resolved\r\n\r\n================================================================================\r\n Package                Arch   Version\r\n                                     Repository                            Size\r\n================================================================================\r\nInstalling:\r\n mysql-community-minimal-release\r\n                        noarch el7-1 /mysql-community-minimal-release-el7  29 k\r\n mysql80-community-release\r\n                        noarch el7-3 /mysql-community-release-el7          31 k\r\n\r\nTransaction Summary\r\n================================================================================\r\nInstall  2 Packages\r\n\r\nTotal size: 60 k\r\nInstalled size: 60 k\r\nDownloading packages:\r\nRunning transaction check\r\nRunning transaction test\r\nTransaction test succeeded\r\nRunning transaction\r\n  Installing : mysql80-community-release-el7-3.noarch                       1/2 \r\n  Installing : mysql-community-minimal-release-el7-1.noarch                 2/2 \r\n  Verifying  : mysql-community-minimal-release-el7-1.noarch                 1/2 \r\n  Verifying  : mysql80-community-release-el7-3.noarch                       2/2 \r\n\r\nInstalled:\r\n  mysql-community-minimal-release.noarch 0:el7-1                                \r\n  mysql80-community-release.noarch 0:el7-3                                      \r\n\r\nComplete!\r\nLoaded plugins: ovl\r\n========================= repo: mysql57-server-minimal =========================\r\n[mysql57-server-minimal]\r\nasync = True\r\nbandwidth = 0\r\nbase_persistdir = /var/lib/yum/repos/x86_64/7Server\r\nbaseurl = http://repo.mysql.com/yum/mysql-5.7-community/docker/x86_64/\r\ncache = 0\r\ncachedir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal\r\ncheck_config_file_age = True\r\ncompare_providers_priority = 80\r\ncost = 1000\r\ndeltarpm_metadata_percentage = 100\r\ndeltarpm_percentage = \r\nenabled = 1\r\nenablegroups = True\r\nexclude = \r\nfailovermethod = priority\r\nftp_disable_epsv = False\r\ngpgcadir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal/gpgcadir\r\ngpgcakey = \r\ngpgcheck = True\r\ngpgdir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal/gpgdir\r\ngpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\nhdrdir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal/headers\r\nhttp_caching = all\r\nincludepkgs = \r\nip_resolve = \r\nkeepalive = True\r\nkeepcache = False\r\nmddownloadpolicy = sqlite\r\nmdpolicy = group:small\r\nmediaid = \r\nmetadata_expire = 21600\r\nmetadata_expire_filter = read-only:present\r\nmetalink = \r\nminrate = 0\r\nmirrorlist = \r\nmirrorlist_expire = 86400\r\nname = MySQL 5.7 Server Minimal\r\nold_base_cache_dir = \r\npassword = \r\npersistdir = /var/lib/yum/repos/x86_64/7Server/mysql57-server-minimal\r\npkgdir = /var/cache/yum/x86_64/7Server/mysql57-server-minimal/packages\r\nproxy = False\r\nproxy_dict = \r\nproxy_password = \r\nproxy_username = \r\nrepo_gpgcheck = False\r\nretries = 10\r\nskip_if_unavailable = False\r\nssl_check_cert_permissions = True\r\nsslcacert = \r\nsslclientcert = \r\nsslclientkey = \r\nsslverify = True\r\nthrottle = 0\r\ntimeout = 30.0\r\nui_id = mysql57-server-minimal/x86_64\r\nui_repoid_vars = releasever,\r\n   basearch\r\nusername = \r\n\r\nLoaded plugins: ovl\r\nResolving Dependencies\r\n--> Running transaction check\r\n---> Package libpwquality.x86_64 0:1.2.3-5.el7 will be installed\r\n--> Processing Dependency: cracklib-dicts >= 2.8 for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_EXTENSION_1.1.1)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_EXTENSION_1.0)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0(LIBPAM_1.0)(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: pam(x86-64) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libpam.so.0()(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n--> Processing Dependency: libcrack.so.2()(64bit) for package: libpwquality-1.2.3-5.el7.x86_64\r\n---> Package mysql-community-server-minimal.x86_64 0:5.7.27-1.el7 will be installed\r\n--> Processing Dependency: libnuma.so.1(libnuma_1.2)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libnuma.so.1(libnuma_1.1)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1(LIBAIO_0.4)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1(LIBAIO_0.1)(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libnuma.so.1()(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n--> Processing Dependency: libaio.so.1()(64bit) for package: mysql-community-server-minimal-5.7.27-1.el7.x86_64\r\n---> Package mysql-shell.x86_64 0:8.0.17-1.el7 will be installed\r\n--> Running transaction check\r\n---> Package cracklib.x86_64 0:2.9.0-11.el7 will be installed\r\n--> Processing Dependency: gzip for package: cracklib-2.9.0-11.el7.x86_64\r\n---> Package cracklib-dicts.x86_64 0:2.9.0-11.el7 will be installed\r\n---> Package libaio.x86_64 0:0.3.109-13.el7 will be installed\r\n---> Package numactl-libs.x86_64 0:2.0.12-3.el7 will be installed\r\n---> Package pam.x86_64 0:1.1.8-22.el7 will be installed\r\n--> Running transaction check\r\n---> Package gzip.x86_64 0:1.5-10.el7 will be installed\r\n--> Finished Dependency Resolution\r\n\r\nDependencies Resolved\r\n\r\n================================================================================\r\n Package                     Arch   Version        Repository              Size\r\n================================================================================\r\nInstalling:\r\n libpwquality                x86_64 1.2.3-5.el7    ol7_latest              84 k\r\n mysql-community-server-minimal\r\n                             x86_64 5.7.27-1.el7   mysql57-server-minimal  15 M\r\n mysql-shell                 x86_64 8.0.17-1.el7   mysql-tools-community   15 M\r\nInstalling for dependencies:\r\n cracklib                    x86_64 2.9.0-11.el7   ol7_latest              79 k\r\n cracklib-dicts              x86_64 2.9.0-11.el7   ol7_latest             3.6 M\r\n gzip                        x86_64 1.5-10.el7     ol7_latest             129 k\r\n libaio                      x86_64 0.3.109-13.el7 ol7_latest              24 k\r\n numactl-libs                x86_64 2.0.12-3.el7   ol7_latest              29 k\r\n pam                         x86_64 1.1.8-22.el7   ol7_latest             719 k\r\n\r\nTransaction Summary\r\n================================================================================\r\nInstall  3 Packages (+6 Dependent packages)\r\n\r\nTotal download size: 34 M\r\nInstalled size: 130 M\r\nDownloading packages:\r\n\u001b[91mwarning: /var/cache/yum/x86_64/7Server/mysql57-server-minimal/packages/mysql-community-server-minimal-5.7.27-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEY\r\n\u001b[0mPublic key for mysql-community-server-minimal-5.7.27-1.el7.x86_64.rpm is not installed\r\nPublic key for mysql-shell-8.0.17-1.el7.x86_64.rpm is not installed\r\n--------------------------------------------------------------------------------\r\nTotal                                              909 kB/s |  34 MB  00:38     \r\nRetrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\n\u001b[91mImporting GPG key 0x5072E1F5:\r\n Userid     : \"MySQL Release Engineering <mysql-build@oss.oracle.com>\"\r\n Fingerprint: a4a9 4068 76fc bd3c 4567 70c8 8c71 8d3b 5072 e1f5\r\n Package    : mysql80-community-release-el7-3.noarch (installed)\r\n From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\n\u001b[0mRunning transaction check\r\nRunning transaction test\r\nTransaction test succeeded\r\nRunning transaction\r\n  Installing : libaio-0.3.109-13.el7.x86_64                                 1/9 \r\n  Installing : numactl-libs-2.0.12-3.el7.x86_64                             2/9 \r\n  Installing : gzip-1.5-10.el7.x86_64                                       3/9 \r\n  Installing : cracklib-2.9.0-11.el7.x86_64                                 4/9 \r\n  Installing : cracklib-dicts-2.9.0-11.el7.x86_64                           5/9 \r\n  Installing : pam-1.1.8-22.el7.x86_64                                      6/9 \r\n  Installing : libpwquality-1.2.3-5.el7.x86_64                              7/9 \r\n  Installing : mysql-community-server-minimal-5.7.27-1.el7.x86_64           8/9 \r\n  Installing : mysql-shell-8.0.17-1.el7.x86_64                              9/9 \r\n  Verifying  : cracklib-dicts-2.9.0-11.el7.x86_64                           1/9 \r\n  Verifying  : mysql-community-server-minimal-5.7.27-1.el7.x86_64           2/9 \r\n  Verifying  : pam-1.1.8-22.el7.x86_64                                      3/9 \r\n  Verifying  : gzip-1.5-10.el7.x86_64                                       4/9 \r\n  Verifying  : numactl-libs-2.0.12-3.el7.x86_64                             5/9 \r\n  Verifying  : cracklib-2.9.0-11.el7.x86_64                                 6/9 \r\n  Verifying  : mysql-shell-8.0.17-1.el7.x86_64                              7/9 \r\n  Verifying  : libpwquality-1.2.3-5.el7.x86_64                              8/9 \r\n  Verifying  : libaio-0.3.109-13.el7.x86_64                                 9/9 \r\n\r\nInstalled:\r\n  libpwquality.x86_64 0:1.2.3-5.el7                                             \r\n  mysql-community-server-minimal.x86_64 0:5.7.27-1.el7                          \r\n  mysql-shell.x86_64 0:8.0.17-1.el7                                             \r\n\r\nDependency Installed:\r\n  cracklib.x86_64 0:2.9.0-11.el7        cracklib-dicts.x86_64 0:2.9.0-11.el7   \r\n  gzip.x86_64 0:1.5-10.el7              libaio.x86_64 0:0.3.109-13.el7         \r\n  numactl-libs.x86_64 0:2.0.12-3.el7    pam.x86_64 0:1.1.8-22.el7              \r\n\r\nComplete!\r\nLoaded plugins: ovl\r\nCleaning repos: mysql-connectors-community mysql-tools-community\r\n              : mysql57-server-minimal mysql80-community ol7_UEKR5\r\n              : ol7_developer_EPEL ol7_latest\r\nRemoving intermediate container 0e5a7bfb6723\r\n ---> cb66d5192b0d\r\nStep 5/12 : VOLUME /var/lib/mysql\r\n ---> Running in 1f4c0e23dd9b\r\nRemoving intermediate container 1f4c0e23dd9b\r\n ---> 3be7f8d0dff8\r\nStep 6/12 : COPY docker-entrypoint.sh /entrypoint.sh\r\n ---> 2f7b5a0349fd\r\nStep 7/12 : COPY healthcheck.sh /healthcheck.sh\r\n ---> 5206c336036f\r\nStep 8/12 : COPY my.cnf /etc/my.cnf\r\n ---> 3d168352bf63\r\nStep 9/12 : ENTRYPOINT [\"/entrypoint.sh\"]\r\n ---> Running in f1b7f42f8501\r\nRemoving intermediate container f1b7f42f8501\r\n ---> c24e54f6827d\r\nStep 10/12 : HEALTHCHECK CMD /healthcheck.sh\r\n ---> Running in 92aa87905639\r\nRemoving intermediate container 92aa87905639\r\n ---> 34bffd20551b\r\nStep 11/12 : EXPOSE 3306 33060\r\n ---> Running in 09022715944e\r\nRemoving intermediate container 09022715944e\r\n ---> b4d12bc39544\r\nStep 12/12 : CMD [\"mysqld\"]\r\n ---> Running in 58f0cf80c3aa\r\nRemoving intermediate container 58f0cf80c3aa\r\n ---> 7374dce4e2a8\r\n\u001b[2K\r\r\r\nSuccessfully built 7374dce4e2a8\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\r\nStep 1/12 : FROM oraclelinux:7-slim\r\n ---> 874477adb545\r\nStep 2/12 : ARG MYSQL_SERVER_PACKAGE=mysql-community-server-minimal-5.7.27\r\n ---> Using cache\r\n ---> c11a7c1695f0\r\nStep 3/12 : ARG MYSQL_SHELL_PACKAGE=mysql-shell-8.0.17\r\n ---> Using cache\r\n ---> 9163251bcacc\r\nStep 4/12 : RUN yum install -y https://repo.mysql.com/mysql-community-minimal-release-el7.rpm     https://repo.mysql.com/mysql-community-release-el7.rpm     && yum-config-manager --enable mysql57-server-minimal     && yum install -y       $MYSQL_SERVER_PACKAGE       $MYSQL_SHELL_PACKAGE       libpwquality     && yum clean all     && mkdir /docker-entrypoint-initdb.d\r\n ---> Using cache\r\n ---> cb66d5192b0d\r\nStep 5/12 : VOLUME /var/lib/mysql\r\n ---> Using cache\r\n ---> 3be7f8d0dff8\r\nStep 6/12 : COPY docker-entrypoint.sh /entrypoint.sh\r\n ---> c2b303c303a7\r\nStep 7/12 : COPY healthcheck.sh /healthcheck.sh\r\n ---> 5b6cc6fecdbc\r\nStep 8/12 : COPY my.cnf /etc/my.cnf\r\n ---> 2915df225407\r\nStep 9/12 : ENTRYPOINT [\"/entrypoint.sh\"]\r\n ---> Running in bb6efce07241\r\nRemoving intermediate container bb6efce07241\r\n ---> c27867a84212\r\nStep 10/12 : HEALTHCHECK CMD /healthcheck.sh\r\n ---> Running in 73120222cfb8\r\nRemoving intermediate container 73120222cfb8\r\n ---> 231dacdc8fc9\r\nStep 11/12 : EXPOSE 3306 33060\r\n ---> Running in 47b109080998\r\nRemoving intermediate container 47b109080998\r\n ---> 12652811672f\r\nStep 12/12 : CMD [\"mysqld\"]\r\n ---> Running in 22a4539fcde2\r\nRemoving intermediate container 22a4539fcde2\r\n ---> b77a21ab706e\r\n\u001b[2K\r\r\r\nSuccessfully built b77a21ab706e\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\r\nStep 1/16 : FROM python:3-alpine3.9\r\n ---> 88f1968a24d8\r\nStep 2/16 : RUN apk add --no-cache build-base\r\n ---> Running in 5d017742a1a9\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/20) Upgrading musl (1.1.20-r4 -> 1.1.20-r5)\r\n(2/20) Installing binutils (2.31.1-r2)\r\n(3/20) Installing libmagic (5.36-r0)\r\n(4/20) Installing file (5.36-r0)\r\n(5/20) Installing gmp (6.1.2-r1)\r\n(6/20) Installing isl (0.18-r0)\r\n(7/20) Installing libgomp (8.3.0-r0)\r\n(8/20) Installing libatomic (8.3.0-r0)\r\n(9/20) Installing libgcc (8.3.0-r0)\r\n(10/20) Installing mpfr3 (3.1.5-r1)\r\n(11/20) Installing mpc1 (1.0.3-r1)\r\n(12/20) Installing libstdc++ (8.3.0-r0)\r\n(13/20) Installing gcc (8.3.0-r0)\r\n(14/20) Installing musl-dev (1.1.20-r5)\r\n(15/20) Installing libc-dev (0.7.1-r0)\r\n(16/20) Installing g++ (8.3.0-r0)\r\n(17/20) Installing make (4.2.1-r2)\r\n(18/20) Installing fortify-headers (1.0-r0)\r\n(19/20) Installing build-base (0.5-r1)\r\n(20/20) Upgrading musl-utils (1.1.20-r4 -> 1.1.20-r5)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 176 MiB in 53 packages\r\nRemoving intermediate container 5d017742a1a9\r\n ---> e91636f9173c\r\nStep 3/16 : RUN apk add --no-cache libffi-dev\r\n ---> Running in 94183656662b\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/3) Installing linux-headers (4.18.13-r1)\r\n(2/3) Installing pkgconf (1.6.0-r0)\r\n(3/3) Installing libffi-dev (3.2.1-r6)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 183 MiB in 56 packages\r\nRemoving intermediate container 94183656662b\r\n ---> 2fb318ab9174\r\nStep 4/16 : RUN apk add --no-cache openssl-dev\r\n ---> Running in 521351821bbe\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/1) Installing openssl-dev (1.1.1b-r1)\r\nOK: 202 MiB in 57 packages\r\nRemoving intermediate container 521351821bbe\r\n ---> 83632bc2d30b\r\nStep 5/16 : RUN pip install flask\r\n ---> Running in a9d8bda3303f\r\nCollecting flask\r\n  Downloading https://files.pythonhosted.org/packages/9b/93/628509b8d5dc749656a9641f4caf13540e2cdec85276964ff8f43bbb1d3b/Flask-1.1.1-py2.py3-none-any.whl (94kB)\r\nCollecting Jinja2>=2.10.1 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/1d/e7/fd8b501e7a6dfe492a433deb7b9d833d39ca74916fa8bc63dd1a4947a671/Jinja2-2.10.1-py2.py3-none-any.whl (124kB)\r\nCollecting itsdangerous>=0.24 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/76/ae/44b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/itsdangerous-1.1.0-py2.py3-none-any.whl\r\nCollecting click>=5.1 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/fa/37/45185cb5abbc30d7257104c434fe0b07e5a195a6847506c074527aa599ec/Click-7.0-py2.py3-none-any.whl (81kB)\r\nCollecting Werkzeug>=0.15 (from flask)\r\n  Downloading https://files.pythonhosted.org/packages/d1/ab/d3bed6b92042622d24decc7aadc8877badf18aeca1571045840ad4956d3f/Werkzeug-0.15.5-py2.py3-none-any.whl (328kB)\r\nCollecting MarkupSafe>=0.23 (from Jinja2>=2.10.1->flask)\r\n  Downloading https://files.pythonhosted.org/packages/b9/2e/64db92e53b86efccfaea71321f597fa2e1b2bd3853d8ce658568f7a13094/MarkupSafe-1.1.1.tar.gz\r\nBuilding wheels for collected packages: MarkupSafe\r\n  Building wheel for MarkupSafe (setup.py): started\r\n  Building wheel for MarkupSafe (setup.py): finished with status 'done'\r\n  Created wheel for MarkupSafe: filename=MarkupSafe-1.1.1-cp37-cp37m-linux_x86_64.whl size=34387 sha256=37cf88f0f478a78d8a357a7b48d62227b46d68215de13516c4cd57632c8ab215\r\n  Stored in directory: /root/.cache/pip/wheels/f2/aa/04/0edf07a1b8a5f5f1aed7580fffb69ce8972edc16a505916a77\r\nSuccessfully built MarkupSafe\r\nInstalling collected packages: MarkupSafe, Jinja2, itsdangerous, click, Werkzeug, flask\r\nSuccessfully installed Jinja2-2.10.1 MarkupSafe-1.1.1 Werkzeug-0.15.5 click-7.0 flask-1.1.1 itsdangerous-1.1.0\r\n\u001b[91mWARNING: You are using pip version 19.2.2, however version 19.2.3 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n\u001b[0mRemoving intermediate container a9d8bda3303f\r\n ---> 8c1efde80fe3\r\nStep 6/16 : RUN pip install flask_sqlalchemy\r\n ---> Running in ea67c20d5806\r\nCollecting flask_sqlalchemy\r\n  Downloading https://files.pythonhosted.org/packages/08/ca/582442cad71504a1514a2f053006c8bb128844133d6076a4df17117545fa/Flask_SQLAlchemy-2.4.0-py2.py3-none-any.whl\r\nRequirement already satisfied: Flask>=0.10 in /usr/local/lib/python3.7/site-packages (from flask_sqlalchemy) (1.1.1)\r\nCollecting SQLAlchemy>=0.8.0 (from flask_sqlalchemy)\r\n  Downloading https://files.pythonhosted.org/packages/fc/49/82d64d705ced344ba458197dadab30cfa745f9650ee22260ac2b275d288c/SQLAlchemy-1.3.8.tar.gz (5.9MB)\r\nRequirement already satisfied: click>=5.1 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (7.0)\r\nRequirement already satisfied: Jinja2>=2.10.1 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (2.10.1)\r\nRequirement already satisfied: Werkzeug>=0.15 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (0.15.5)\r\nRequirement already satisfied: itsdangerous>=0.24 in /usr/local/lib/python3.7/site-packages (from Flask>=0.10->flask_sqlalchemy) (1.1.0)\r\nRequirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/site-packages (from Jinja2>=2.10.1->Flask>=0.10->flask_sqlalchemy) (1.1.1)\r\nBuilding wheels for collected packages: SQLAlchemy\r\n  Building wheel for SQLAlchemy (setup.py): started\r\n  Building wheel for SQLAlchemy (setup.py): finished with status 'done'\r\n  Created wheel for SQLAlchemy: filename=SQLAlchemy-1.3.8-cp37-cp37m-linux_x86_64.whl size=1198542 sha256=4c308304eed7d91406b856f6e2e798e975fab255e1b86ca9e01d152807c7c1bf\r\n  Stored in directory: /root/.cache/pip/wheels/97/b6/66/de2064d40c920adc2984ff3b8fd4f11494c8ab9e48ba87e8a2\r\nSuccessfully built SQLAlchemy\r\nInstalling collected packages: SQLAlchemy, flask-sqlalchemy\r\nSuccessfully installed SQLAlchemy-1.3.8 flask-sqlalchemy-2.4.0\r\n\u001b[91mWARNING: You are using pip version 19.2.2, however version 19.2.3 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n\u001b[0mRemoving intermediate container ea67c20d5806\r\n ---> ad3c7d9c2ab6\r\nStep 7/16 : RUN pip install docker-compose\r\n ---> Running in c38446c2c70c\r\nCollecting docker-compose\r\n  Downloading https://files.pythonhosted.org/packages/dd/e6/1521d1dfd9c0da1d1863b18e592d91c3df222e55f258b9876fa1e59bc4b5/docker_compose-1.24.1-py2.py3-none-any.whl (134kB)\r\nCollecting requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/ff/17/5cbb026005115301a8fb2f9b0e3e8d32313142fe8b617070e7baad20554f/requests-2.20.1-py2.py3-none-any.whl (57kB)\r\nCollecting cached-property<2,>=1.2.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/3b/86/85c1be2e8db9e13ef9a350aecd6dea292bd612fa288c2f40d035bb750ded/cached_property-1.5.1-py2.py3-none-any.whl\r\nCollecting jsonschema<3,>=2.5.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/77/de/47e35a97b2b05c2fadbec67d44cfcdcd09b8086951b331d82de90d2912da/jsonschema-2.6.0-py2.py3-none-any.whl\r\nCollecting texttable<0.10,>=0.9.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/02/e1/2565e6b842de7945af0555167d33acfc8a615584ef7abd30d1eae00a4d80/texttable-0.9.1.tar.gz\r\nCollecting PyYAML<4.3,>=3.10 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/9e/a3/1d13970c3f36777c583f136c136f804d70f500168edc1edea6daa7200769/PyYAML-3.13.tar.gz (270kB)\r\nCollecting six<2,>=1.3.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl\r\nCollecting websocket-client<1.0,>=0.32.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/29/19/44753eab1fdb50770ac69605527e8859468f3c0fd7dc5a76dd9c4dbd7906/websocket_client-0.56.0-py2.py3-none-any.whl (200kB)\r\nCollecting dockerpty<0.5,>=0.4.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/8d/ee/e9ecce4c32204a6738e0a5d5883d3413794d7498fe8b06f44becc028d3ba/dockerpty-0.4.1.tar.gz\r\nCollecting docker[ssh]<4.0,>=3.7.0 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/09/da/7cc7ecdcd01145e9924a8ccbe9c1baf3a362fc75d4cb150676eb5231ea60/docker-3.7.3-py2.py3-none-any.whl (134kB)\r\nCollecting docopt<0.7,>=0.6.1 (from docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/a2/55/8f8cab2afd404cf578136ef2cc5dfb50baa1761b68c9da1fb1e4eed343c9/docopt-0.6.2.tar.gz\r\nCollecting chardet<3.1.0,>=3.0.2 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl (133kB)\r\nCollecting urllib3<1.25,>=1.21.1 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/01/11/525b02e4acc0c747de8b6ccdab376331597c569c42ea66ab0a1dbd36eca2/urllib3-1.24.3-py2.py3-none-any.whl (118kB)\r\nCollecting idna<2.8,>=2.5 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/4b/2a/0276479a4b3caeb8a8c1af2f8e4355746a97fab05a372e4a2c6a6b876165/idna-2.7-py2.py3-none-any.whl (58kB)\r\nCollecting certifi>=2017.4.17 (from requests!=2.11.0,!=2.12.2,!=2.18.0,<2.21,>=2.6.1->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/69/1b/b853c7a9d4f6a6d00749e94eb6f3a041e342a885b87340b79c1ef73e3a78/certifi-2019.6.16-py2.py3-none-any.whl (157kB)\r\nCollecting docker-pycreds>=0.4.0 (from docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/f5/e8/f6bd1eee09314e7e6dee49cbe2c5e22314ccdb38db16c9fc72d2fa80d054/docker_pycreds-0.4.0-py2.py3-none-any.whl\r\nCollecting paramiko>=2.4.2; extra == \"ssh\" (from docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/4b/80/74dace9e48b0ef923633dfb5e48798f58a168e4734bca8ecfaf839ba051a/paramiko-2.6.0-py2.py3-none-any.whl (199kB)\r\nCollecting pynacl>=1.0.1 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/61/ab/2ac6dea8489fa713e2b4c6c5b549cc962dd4a842b5998d9e80cf8440b7cd/PyNaCl-1.3.0.tar.gz (3.4MB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting bcrypt>=3.1.3 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/fa/aa/025a3ab62469b5167bc397837c9ffc486c42a97ef12ceaa6699d8f5a5416/bcrypt-3.1.7.tar.gz (42kB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting cryptography>=2.5 (from paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/c2/95/f43d02315f4ec074219c6e3124a87eba1d2d12196c2767fadfdc07a83884/cryptography-2.7.tar.gz (495kB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nCollecting cffi>=1.4.1 (from pynacl>=1.0.1->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\nCollecting asn1crypto>=0.21.0 (from cryptography>=2.5->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\n  Downloading https://files.pythonhosted.org/packages/ea/cd/35485615f45f30a510576f1a56d1e0a7ad7bd8ab5ed7cdc600ef7cd06222/asn1crypto-0.24.0-py2.py3-none-any.whl (101kB)\r\nCollecting pycparser (from cffi>=1.4.1->pynacl>=1.0.1->paramiko>=2.4.2; extra == \"ssh\"->docker[ssh]<4.0,>=3.7.0->docker-compose)\r\nBuilding wheels for collected packages: pynacl, bcrypt, cryptography\r\n  Building wheel for pynacl (PEP 517): started\r\n  Building wheel for pynacl (PEP 517): still running...\r\n  Building wheel for pynacl (PEP 517): finished with status 'done'\r\n  Created wheel for pynacl: filename=PyNaCl-1.3.0-cp37-cp37m-linux_x86_64.whl size=1012141 sha256=1e2d3db72c5de56406b56d733fcfc079b35169987ec7bc20c53ed85b73ea3dbb\r\n  Stored in directory: /root/.cache/pip/wheels/c1/10/e7/66597ff71adf8cb7403527243c4b57c66a0d1dfdd8adf2eae4\r\n  Building wheel for bcrypt (PEP 517): started\r\n  Building wheel for bcrypt (PEP 517): finished with status 'done'\r\n  Created wheel for bcrypt: filename=bcrypt-3.1.7-cp37-cp37m-linux_x86_64.whl size=64475 sha256=4693c054def6cc748ebca839b6bf69478d17bdf67e277d55e57cfd985224badc\r\n  Stored in directory: /root/.cache/pip/wheels/ae/b1/2c/dc178774d435228aff4679c4837de4d5ee1dd5568a370fc79c\r\n  Building wheel for cryptography (PEP 517): started\r\n  Building wheel for cryptography (PEP 517): finished with status 'done'\r\n  Created wheel for cryptography: filename=cryptography-2.7-cp37-cp37m-linux_x86_64.whl size=925774 sha256=e541b467619f073413f9ce8ea522f2da556a26e1ca39d0b6de2cd6c787c76cc4\r\n  Stored in directory: /root/.cache/pip/wheels/d0/02/96/64b1439e5409591b6b0294d1da2f66a4ae4f0548d1bdb225b7\r\nSuccessfully built pynacl bcrypt cryptography\r\nBuilding wheels for collected packages: texttable, PyYAML, dockerpty, docopt\r\n  Building wheel for texttable (setup.py): started\r\n  Building wheel for texttable (setup.py): finished with status 'done'\r\n  Created wheel for texttable: filename=texttable-0.9.1-cp37-none-any.whl size=9970 sha256=0b5a1f2c08bffd3aaacca08af165e61eb3efc154544ba2578e3cea9aa66f1d32\r\n  Stored in directory: /root/.cache/pip/wheels/99/1e/2b/8452d3a48dad98632787556a0f2f90d56703b39cdf7d142dd1\r\n  Building wheel for PyYAML (setup.py): started\r\n  Building wheel for PyYAML (setup.py): finished with status 'done'\r\n  Created wheel for PyYAML: filename=PyYAML-3.13-cp37-cp37m-linux_x86_64.whl size=43086 sha256=2a27b7aae89dfe45107375c9d36b41d3a84d130bee14e4026244f75feceb6bbc\r\n  Stored in directory: /root/.cache/pip/wheels/ad/da/0c/74eb680767247273e2cf2723482cb9c924fe70af57c334513f\r\n  Building wheel for dockerpty (setup.py): started\r\n  Building wheel for dockerpty (setup.py): finished with status 'done'\r\n  Created wheel for dockerpty: filename=dockerpty-0.4.1-cp37-none-any.whl size=16606 sha256=143cd3eb441d132401b21a580363e1a657ffd575a4412cb7e2b4ba72e937458e\r\n  Stored in directory: /root/.cache/pip/wheels/e5/1e/86/bd0a97a0907c6c654af654d5875d1d4383dd1f575f77cee4aa\r\n  Building wheel for docopt (setup.py): started\r\n  Building wheel for docopt (setup.py): finished with status 'done'\r\n  Created wheel for docopt: filename=docopt-0.6.2-py2.py3-none-any.whl size=13704 sha256=c647f26dfd674dc310f15c5b922c87b7e1cf9ec06604960565a69046d179b9b8\r\n  Stored in directory: /root/.cache/pip/wheels/9b/04/dd/7daf4150b6d9b12949298737de9431a324d4b797ffd63f526e\r\nSuccessfully built texttable PyYAML dockerpty docopt\r\nInstalling collected packages: chardet, urllib3, idna, certifi, requests, cached-property, jsonschema, texttable, PyYAML, six, websocket-client, dockerpty, docker-pycreds, pycparser, cffi, pynacl, bcrypt, asn1crypto, cryptography, paramiko, docker, docopt, docker-compose\r\nSuccessfully installed PyYAML-3.13 asn1crypto-0.24.0 bcrypt-3.1.7 cached-property-1.5.1 certifi-2019.6.16 cffi-1.12.3 chardet-3.0.4 cryptography-2.7 docker-3.7.3 docker-compose-1.24.1 docker-pycreds-0.4.0 dockerpty-0.4.1 docopt-0.6.2 idna-2.7 jsonschema-2.6.0 paramiko-2.6.0 pycparser-2.19 pynacl-1.3.0 requests-2.20.1 six-1.12.0 texttable-0.9.1 urllib3-1.24.3 websocket-client-0.56.0\r\n\u001b[91mWARNING: You are using pip version 19.2.2, however version 19.2.3 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n\u001b[0mRemoving intermediate container c38446c2c70c\r\n ---> 5eddb6e6b0f2\r\nStep 8/16 : RUN apk add mariadb-connector-c-dev\r\n ---> Running in d3dbaaec2e93\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.9/community/x86_64/APKINDEX.tar.gz\r\n(1/3) Installing zlib-dev (1.2.11-r1)\r\n(2/3) Installing mariadb-connector-c (3.0.8-r0)\r\n(3/3) Installing mariadb-connector-c-dev (3.0.8-r0)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 203 MiB in 60 packages\r\nRemoving intermediate container d3dbaaec2e93\r\n ---> 08ba134f7d51\r\nStep 9/16 : RUN pip install mysqlclient\r\n ---> Running in a20588f2e0a7\r\nCollecting mysqlclient\r\n  Downloading https://files.pythonhosted.org/packages/4d/38/c5f8bac9c50f3042c8f05615f84206f77f03db79781db841898fde1bb284/mysqlclient-1.4.4.tar.gz (86kB)\r\nBuilding wheels for collected packages: mysqlclient\r\n  Building wheel for mysqlclient (setup.py): started\r\n  Building wheel for mysqlclient (setup.py): finished with status 'done'\r\n  Created wheel for mysqlclient: filename=mysqlclient-1.4.4-cp37-cp37m-linux_x86_64.whl size=113705 sha256=717748f3b99cdf7c84ccba153b2c7644e0e5fcf8c02f29de0b735eae8651ea60\r\n  Stored in directory: /root/.cache/pip/wheels/a0/04/57/031b9b01df38999df7dc7f4ee998a98ecdbd2d781f73e3ffbf\r\nSuccessfully built mysqlclient\r\nInstalling collected packages: mysqlclient\r\nSuccessfully installed mysqlclient-1.4.4\r\n\u001b[91mWARNING: You are using pip version 19.2.2, however version 19.2.3 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n\u001b[0mRemoving intermediate container a20588f2e0a7\r\n ---> b9cfe24bd039\r\nStep 10/16 : ARG DOCKER_CLI_VERSION=\"19.03.1\"\r\n ---> Running in eb7ba2a63a71\r\nRemoving intermediate container eb7ba2a63a71\r\n ---> b906018510b3\r\nStep 11/16 : ENV DOWNLOAD_URL=\"https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_CLI_VERSION.tgz\"\r\n ---> Running in 09d50224e9ba\r\nRemoving intermediate container 09d50224e9ba\r\n ---> 4a5e32fc1f5f\r\nStep 12/16 : RUN apk add curl     && mkdir -p /tmp/download     && curl -L $DOWNLOAD_URL | tar -xz -C /tmp/download     && mv /tmp/download/docker/docker /usr/local/bin/     && rm -rf /tmp/download     && rm -rf /var/cache/apk/*\r\n ---> Running in 9ab2e7adeb0a\r\n(1/4) Installing nghttp2-libs (1.35.1-r1)\r\n(2/4) Installing libssh2 (1.8.2-r0)\r\n(3/4) Installing libcurl (7.64.0-r2)\r\n(4/4) Installing curl (7.64.0-r2)\r\nExecuting busybox-1.29.3-r10.trigger\r\nOK: 204 MiB in 64 packages\r\n\u001b[91m  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\u001b[0m\u001b[91m\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\u001b[0m\u001b[91m\r  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\u001b[0m\u001b[91m\r  4 60.3M    4 2901k    0     0  1198k      0  0:00:51  0:00:02  0:00:49 1198k\u001b[0m\u001b[91m\r  6 60.3M    6 4112k    0     0  1206k      0  0:00:51  0:00:03  0:00:48 1206k\u001b[0m\u001b[91m\r  8 60.3M    8 5237k    0     0  1194k      0  0:00:51  0:00:04  0:00:47 1194k\u001b[0m\u001b[91m\r 10 60.3M   10 6233k    0     0  1159k      0  0:00:53  0:00:05  0:00:48 1267k\u001b[0m\u001b[91m\r 11 60.3M   11 7369k    0     0  1161k      0  0:00:53  0:00:06  0:00:47 1534k\u001b[0m\u001b[91m\r 13 60.3M   13 8395k    0     0  1136k      0  0:00:54  0:00:07  0:00:47 1106k\u001b[0m\u001b[91m\r 15 60.3M   15 9522k    0     0  1137k      0  0:00:54  0:00:08  0:00:46 1090k\u001b[0m\u001b[91m\r 17 60.3M   17 10.3M    0     0  1134k      0  0:00:54  0:00:09  0:00:45 1081k\u001b[0m\u001b[91m\r 18 60.3M   18 11.3M    0     0  1121k      0  0:00:55  0:00:10  0:00:45 1079k\u001b[0m\u001b[91m\r 20 60.3M   20 12.4M    0     0  1119k      0  0:00:55  0:00:11  0:00:44 1066k\u001b[0m\u001b[91m\r 22 60.3M   22 13.3M    0     0  1102k      0  0:00:56  0:00:12  0:00:44 1051k\u001b[0m\u001b[91m\r 23 60.3M   23 14.3M    0     0  1101k      0  0:00:56  0:00:13  0:00:43 1040k\u001b[0m\u001b[91m\r 25 60.3M   25 15.3M    0     0  1096k      0  0:00:56  0:00:14  0:00:42 1024k\u001b[0m\u001b[91m\r 27 60.3M   27 16.4M    0     0  1093k      0  0:00:56  0:00:15  0:00:41 1038k\u001b[0m\u001b[91m\r 28 60.3M   28 17.4M    0     0  1092k      0  0:00:56  0:00:16  0:00:40 1031k\u001b[0m\u001b[91m\r 30 60.3M   30 18.5M    0     0  1094k      0  0:00:56  0:00:17  0:00:39 1074k\u001b[0m\u001b[91m\r 32 60.3M   32 19.5M    0     0  1091k      0  0:00:56  0:00:18  0:00:38 1065k\u001b[0m\u001b[91m\r 34 60.3M   34 20.5M    0     0  1088k      0  0:00:56  0:00:19  0:00:37 1067k\u001b[0m\u001b[91m\r 35 60.3M   35 21.5M    0     0  1085k      0  0:00:56  0:00:20  0:00:36 1058k\u001b[0m\u001b[91m\r 37 60.3M   37 22.6M    0     0  1087k      0  0:00:56  0:00:21  0:00:35 1072k\u001b[0m\u001b[91m\r 39 60.3M   39 23.7M    0     0  1086k      0  0:00:56  0:00:22  0:00:34 1059k\u001b[0m\u001b[91m\r 40 60.3M   40 24.5M    0     0  1075k      0  0:00:57  0:00:23  0:00:34 1015k\u001b[0m\u001b[91m\r 42 60.3M   42 25.6M    0     0  1076k      0  0:00:57  0:00:24  0:00:33 1030k\u001b[0m\u001b[91m\r 44 60.3M   44 26.8M    0     0  1085k      0  0:00:56  0:00:25  0:00:31 1088k\u001b[0m\u001b[91m\r 46 60.3M   46 28.0M    0     0  1088k      0  0:00:56  0:00:26  0:00:30 1091k\u001b[0m\u001b[91m\r 48 60.3M   48 29.0M    0     0  1088k      0  0:00:56  0:00:27  0:00:29 1094k\u001b[0m\u001b[91m\r 49 60.3M   49 30.1M    0     0  1088k      0  0:00:56  0:00:28  0:00:28 1149k\u001b[0m\u001b[91m\r 51 60.3M   51 31.1M    0     0  1088k      0  0:00:56  0:00:29  0:00:27 1147k\u001b[0m\u001b[91m\r 53 60.3M   53 32.2M    0     0  1087k      0  0:00:56  0:00:30  0:00:26 1093k\u001b[0m\u001b[91m\r 55 60.3M   55 33.3M    0     0  1088k      0  0:00:56  0:00:31  0:00:25 1088k\u001b[0m\u001b[91m\r 57 60.3M   57 34.4M    0     0  1090k      0  0:00:56  0:00:32  0:00:24 1106k\u001b[0m\u001b[91m\r 58 60.3M   58 35.4M    0     0  1089k      0  0:00:56  0:00:33  0:00:23 1094k\u001b[0m\u001b[91m\r 60 60.3M   60 36.6M    0     0  1092k      0  0:00:56  0:00:34  0:00:22 1114k\u001b[0m\u001b[91m\r 62 60.3M   62 37.5M    0     0  1088k      0  0:00:56  0:00:35  0:00:21 1097k\u001b[0m\u001b[91m\r 63 60.3M   63 38.5M    0     0  1085k      0  0:00:56  0:00:36  0:00:20 1066k\u001b[0m\u001b[91m\r 65 60.3M   65 39.6M    0     0  1084k      0  0:00:56  0:00:37  0:00:19 1045k\u001b[0m\u001b[91m\r 67 60.3M   67 40.9M    0     0  1092k      0  0:00:56  0:00:38  0:00:18 1113k\u001b[0m\u001b[91m\r 69 60.3M   69 41.9M    0     0  1092k      0  0:00:56  0:00:39  0:00:17 1094k\u001b[0m\u001b[91m\r 71 60.3M   71 42.9M    0     0  1090k      0  0:00:56  0:00:40  0:00:16 1104k\u001b[0m\u001b[91m\r 73 60.3M   73 44.1M    0     0  1092k      0  0:00:56  0:00:41  0:00:15 1144k\u001b[0m\u001b[91m\r 74 60.3M   74 45.1M    0     0  1090k      0  0:00:56  0:00:42  0:00:14 1137k\u001b[0m\u001b[91m\r 76 60.3M   76 46.2M    0     0  1093k      0  0:00:56  0:00:43  0:00:13 1098k\u001b[0m\u001b[91m\r 78 60.3M   78 47.3M    0     0  1092k      0  0:00:56  0:00:44  0:00:12 1094k\u001b[0m\u001b[91m\r 80 60.3M   80 48.3M    0     0  1091k      0  0:00:56  0:00:45  0:00:11 1101k\u001b[0m\u001b[91m\r 82 60.3M   82 49.5M    0     0  1093k      0  0:00:56  0:00:46  0:00:10 1104k\u001b[0m\u001b[91m\r 83 60.3M   83 50.2M    0     0  1086k      0  0:00:56  0:00:47  0:00:09 1052k\u001b[0m\u001b[91m\r 85 60.3M   85 51.5M    0     0  1092k      0  0:00:56  0:00:48  0:00:08 1084k\u001b[0m\u001b[91m\r 87 60.3M   87 52.7M    0     0  1094k      0  0:00:56  0:00:49  0:00:07 1110k\u001b[0m\u001b[91m\r 89 60.3M   89 53.7M    0     0  1092k      0  0:00:56  0:00:50  0:00:06 1103k\u001b[0m\u001b[91m\r 90 60.3M   90 54.8M    0     0  1093k      0  0:00:56  0:00:51  0:00:05 1086k\u001b[0m\u001b[91m\r 92 60.3M   92 55.9M    0     0  1094k      0  0:00:56  0:00:52  0:00:04 1167k\u001b[0m\u001b[91m\r 94 60.3M   94 57.0M    0     0  1093k      0  0:00:56  0:00:53  0:00:03 1108k\u001b[0m\u001b[91m\r 96 60.3M   96 57.9M    0     0  1091k      0  0:00:56  0:00:54  0:00:02 1065k\u001b[0m\u001b[91m\r 97 60.3M   97 59.0M    0     0  1091k      0  0:00:56  0:00:55  0:00:01 1079k\u001b[0m\u001b[91m\r 99 60.3M   99 60.1M    0     0  1091k      0  0:00:56  0:00:56 --:--:-- 1076k\u001b[0m\u001b[91m\r100 60.3M  100 60.3M    0     0  1092k      0  0:00:56  0:00:56 --:--:-- 1065k\r\n\u001b[0mRemoving intermediate container 9ab2e7adeb0a\r\n ---> 7f958e89144e\r\nStep 13/16 : COPY src /src/\r\n ---> 764549c8023e\r\nStep 14/16 : RUN mkdir /data\r\n ---> Running in e0197938b9c5\r\nRemoving intermediate container e0197938b9c5\r\n ---> 1877d5b044ec\r\nStep 15/16 : EXPOSE 5000\r\n ---> Running in 965beb96aadc\r\nRemoving intermediate container 965beb96aadc\r\n ---> 15b483d65c7a\r\nStep 16/16 : ENTRYPOINT [\"python\", \"/src/mdnssec.py\"]\r\n ---> Running in 50d605ab290c\r\nRemoving intermediate container 50d605ab290c\r\n ---> 4729af8e77ff\r\n\u001b[2K\r\r\r\nSuccessfully built 4729af8e77ff\r\nSuccessfully tagged registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\r\n\r\n{\"services\": {\"api\": {\"stack_api\": {\"cmd\": [], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"api\", \"com.docker.compose.config-hash\": \"07be9136eca7a18be130ae1ce43d4d0504d502ad32927b3753692136581d3b26\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1c:00:03\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.28.0.3\", \"aliases\": [\"api\", \"a539196690e3\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:87:05\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.135.5\", \"aliases\": [\"api\", \"a539196690e3\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\"}}, \"mysql_replication_db\": {\"stack_api_replication_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_replication_db\", \"com.docker.compose.config-hash\": \"3a3cac0b1f0de2a3d0ff47afe23987e94cd480fb9650fc3e4fb2ab9607eb906e\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"db_replication_net\": {\"macAddress\": \"02:42:0a:00:87:04\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.135.4\", \"aliases\": [\"6e5a9c62f3d9\", \"mysql_replication_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\"}}, \"mysql_db\": {\"stack_api_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_db\", \"com.docker.compose.config-hash\": \"070a41f0baae5f38d25d25a529903e4ba55fadb81a831a6a66376a0d54051523\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1c:00:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.28.0.2\", \"aliases\": [\"4f6a4a54ea84\", \"mysql_db\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:87:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.135.2\", \"aliases\": [\"4f6a4a54ea84\", \"mysql_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\"}}}, \"invocation\": {\"module_args\": {\"project_src\": \"/home/alfred/management\", \"hostname_check\": false, \"recreate\": \"smart\", \"docker_host\": \"unix://var/run/docker.sock\", \"remove_images\": null, \"client_key\": null, \"scale\": null, \"nocache\": false, \"remove_volumes\": false, \"state\": \"present\", \"build\": true, \"client_cert\": null, \"api_version\": \"auto\", \"files\": null, \"project_name\": null, \"ca_cert\": null, \"definition\": null, \"tls_hostname\": \"localhost\", \"dependencies\": true, \"services\": null, \"tls\": false, \"pull\": false, \"remove_orphans\": false, \"restarted\": false, \"ssl_version\": null, \"stopped\": false, \"timeout\": 10, \"debug\": false, \"validate_certs\": false}}, \"changed\": true, \"ansible_facts\": {\"api\": {\"stack_api\": {\"cmd\": [], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"api\", \"com.docker.compose.config-hash\": \"07be9136eca7a18be130ae1ce43d4d0504d502ad32927b3753692136581d3b26\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1c:00:03\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.28.0.3\", \"aliases\": [\"api\", \"a539196690e3\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:87:05\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.135.5\", \"aliases\": [\"api\", \"a539196690e3\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/signer-api:1.0\"}}, \"mysql_replication_db\": {\"stack_api_replication_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_replication_db\", \"com.docker.compose.config-hash\": \"3a3cac0b1f0de2a3d0ff47afe23987e94cd480fb9650fc3e4fb2ab9607eb906e\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"db_replication_net\": {\"macAddress\": \"02:42:0a:00:87:04\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.135.4\", \"aliases\": [\"6e5a9c62f3d9\", \"mysql_replication_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-slave57:1.0\"}}, \"mysql_db\": {\"stack_api_db\": {\"cmd\": [\"mysqld\"], \"state\": {\"status\": \"running\", \"running\": true}, \"labels\": {\"com.docker.compose.service\": \"mysql_db\", \"com.docker.compose.config-hash\": \"070a41f0baae5f38d25d25a529903e4ba55fadb81a831a6a66376a0d54051523\", \"com.docker.compose.project\": \"management\", \"com.docker.compose.version\": \"1.24.1\", \"com.docker.compose.oneoff\": \"False\", \"com.docker.compose.container-number\": \"1\"}, \"networks\": {\"management_stack_api_db_net\": {\"macAddress\": \"02:42:ac:1c:00:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 16, \"globalIPv6\": \"\", \"IPAddress\": \"172.28.0.2\", \"aliases\": [\"4f6a4a54ea84\", \"mysql_db\"]}, \"db_replication_net\": {\"macAddress\": \"02:42:0a:00:87:02\", \"globalIPv6PrefixLen\": 0, \"links\": null, \"IPPrefixLen\": 24, \"globalIPv6\": \"\", \"IPAddress\": \"10.0.135.2\", \"aliases\": [\"4f6a4a54ea84\", \"mysql_db\"]}}, \"image\": \"registry.mdnssec.ri.mu.afrinic.net:5000/mysql-master57:1.0\"}}}}\r\n", "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error", "rc": 0}
2019-08-30 20:41:29,024 p=8445 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-30 20:41:29,025 p=8445 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=28   changed=14   unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2019-08-30 21:02:39,763 p=14031 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-30 21:02:39,833 p=14031 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-30 21:02:39,858 p=14031 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:02:39,894 p=14031 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-30 21:03:52,967 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:03:53,019 p=14031 u=aar |  TASK [manager : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-30 21:04:18,852 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:04:18,872 p=14031 u=aar |  TASK [manager : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] ********************************************************************
2019-08-30 21:04:57,210 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:04:57,232 p=14031 u=aar |  TASK [manager : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *****************************************
2019-08-30 21:04:57,256 p=14031 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:04:57,277 p=14031 u=aar |  TASK [manager : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] ********************************************************************************
2019-08-30 21:04:57,306 p=14031 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:04:57,331 p=14031 u=aar |  TASK [manager : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ***********************************************************
2019-08-30 21:05:20,945 p=14031 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:05:20,965 p=14031 u=aar |  TASK [manager : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] ************************************
2019-08-30 21:05:20,987 p=14031 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:05:21,008 p=14031 u=aar |  TASK [manager : Install iptables name=['iptables-services'], state=present] *********************************************************************************************************************
2019-08-30 21:06:32,177 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:06:32,198 p=14031 u=aar |  TASK [manager : Install iptables name=['iptables'], state=present] ******************************************************************************************************************************
2019-08-30 21:06:32,221 p=14031 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:06:32,243 p=14031 u=aar |  TASK [manager : Disable firewalld state=stopped, name=firewalld, enabled=False] *****************************************************************************************************************
2019-08-30 21:06:48,743 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:06:48,764 p=14031 u=aar |  TASK [manager : Enable iptables state=started, name=iptables, enabled=True] *********************************************************************************************************************
2019-08-30 21:07:16,369 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:07:16,390 p=14031 u=aar |  TASK [manager : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] *********************************************************************************************
2019-08-30 21:07:33,413 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:07:33,431 p=14031 u=aar |  TASK [manager : Enable docker state=started, name=docker, enabled=True] *************************************************************************************************************************
2019-08-30 21:07:50,249 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:07:50,270 p=14031 u=aar |  TASK [manager : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] ************************************************************************************************************
2019-08-30 21:08:01,546 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:08:01,565 p=14031 u=aar |  TASK [manager : Init swarm state=present] *******************************************************************************************************************************************************
2019-08-30 21:08:12,089 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:08:12,108 p=14031 u=aar |  TASK [manager : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-30 21:08:22,418 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:08:22,439 p=14031 u=aar |  TASK [manager : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ***********************************************************************************************
2019-08-30 21:08:33,420 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:08:33,443 p=14031 u=aar |  TASK [manager : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *******************************************************************
2019-08-30 21:08:44,052 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:08:44,073 p=14031 u=aar |  TASK [manager : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': '{{ private_registry_resources.reservations.cpus }}', 'memory': '{{ private_registry_resources.reservations.memory }}'}, limits={'cpus': '{{ private_registry_resources.limits.cpus }}', 'memory': '{{ private_registry_resources.limits.memory }}'}] ***
2019-08-30 21:08:55,161 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:08:55,180 p=14031 u=aar |  TASK [manager : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************
2019-08-30 21:13:04,068 p=14031 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:13:04,101 p=14031 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 21:13:16,600 p=14031 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:13:16,624 p=14031 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 21:13:26,261 p=14031 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:13:26,283 p=14031 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 21:13:37,188 p=14031 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:13:37,206 p=14031 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 21:13:46,932 p=14031 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:13:46,954 p=14031 u=aar |  TASK [manager : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-30 21:14:13,749 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:14:13,766 p=14031 u=aar |  TASK [manager : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***********************************
2019-08-30 21:18:04,923 p=14031 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:18:04,946 p=14031 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 21:18:16,465 p=14031 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:18:16,487 p=14031 u=aar |  TASK [manager : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **********
2019-08-30 21:18:32,402 p=14031 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:18:32,423 p=14031 u=aar |  TASK [manager : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *************
2019-08-30 21:18:45,154 p=14031 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:18:45,174 p=14031 u=aar |  TASK [manager : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-30 21:19:03,902 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:19:03,922 p=14031 u=aar |  TASK [manager : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *****************************************************
2019-08-30 21:19:16,720 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:19:16,744 p=14031 u=aar |  TASK [manager : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] ***************************************************************
2019-08-30 21:19:28,647 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:19:28,669 p=14031 u=aar |  TASK [manager : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] *********************************************************
2019-08-30 21:19:58,153 p=14031 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:19:58,174 p=14031 u=aar |  TASK [manager : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-30 21:20:09,546 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:20:09,564 p=14031 u=aar |  TASK [manager : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-30 21:20:19,719 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:20:19,741 p=14031 u=aar |  TASK [manager : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-30 21:20:31,132 p=14031 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:20:31,149 p=14031 u=aar |  TASK [manager : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *****************************************************
2019-08-30 21:20:45,257 p=14031 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:20:45,260 p=14031 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-30 21:20:45,260 p=14031 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=33   changed=12   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2019-08-30 21:44:21,329 p=26954 u=aar |  PLAY [Install docker and deploy swarm cuslter] **************************************************************************************************************************************************
2019-08-30 21:44:21,394 p=26954 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-30 21:44:21,421 p=26954 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:44:21,443 p=26954 u=aar |  TASK [manager : Upgrade all packages name=*, state=latest] **************************************************************************************************************************************
2019-08-30 21:45:30,773 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:45:30,943 p=26954 u=aar |  TASK [manager : Uninstall old versions name=['docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine'], state=absent] ***
2019-08-30 21:45:44,749 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:45:44,768 p=26954 u=aar |  TASK [manager : Prepare the server name=['yum-utils', 'device-mapper-persistent-data', 'lvm2', 'python-pip'], state=present] ********************************************************************
2019-08-30 21:45:59,075 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:45:59,096 p=26954 u=aar |  TASK [manager : Prepare the server name=['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common'], state=present] *****************************************
2019-08-30 21:45:59,118 p=26954 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:45:59,141 p=26954 u=aar |  TASK [manager : Add Docker GPG Key id=0EBFCD88, url=https://download.docker.com/linux/ubuntu/gpg, state=present] ********************************************************************************
2019-08-30 21:45:59,161 p=26954 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:45:59,186 p=26954 u=aar |  TASK [manager : Add new repository _raw_params=yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo] ***********************************************************
2019-08-30 21:46:12,399 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:46:12,421 p=26954 u=aar |  TASK [manager : Add new repository repo=deb [arch=amd64] https://download.docker.com/linux/ubuntu  {{ ansible_distribution_release }} stable, state=present] ************************************
2019-08-30 21:46:12,441 p=26954 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:46:12,463 p=26954 u=aar |  TASK [manager : Install iptables name=['iptables-services'], state=present] *********************************************************************************************************************
2019-08-30 21:46:29,209 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:46:29,233 p=26954 u=aar |  TASK [manager : Install iptables name=['iptables'], state=present] ******************************************************************************************************************************
2019-08-30 21:46:29,253 p=26954 u=aar |  skipping: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:46:29,273 p=26954 u=aar |  TASK [manager : Disable firewalld state=stopped, name=firewalld, enabled=False] *****************************************************************************************************************
2019-08-30 21:46:47,142 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:46:47,162 p=26954 u=aar |  TASK [manager : Enable iptables state=started, name=iptables, enabled=True] *********************************************************************************************************************
2019-08-30 21:47:02,694 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:47:02,713 p=26954 u=aar |  TASK [manager : Install docker name=['docker-ce', 'docker-ce-cli', 'containerd.io'], state=present] *********************************************************************************************
2019-08-30 21:47:14,546 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:47:14,569 p=26954 u=aar |  TASK [manager : Enable docker state=started, name=docker, enabled=True] *************************************************************************************************************************
2019-08-30 21:47:29,293 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:47:29,314 p=26954 u=aar |  TASK [manager : Docker SDK for Python name=['docker', 'docker-compose', 'jsondiff']] ************************************************************************************************************
2019-08-30 21:47:40,864 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:47:40,893 p=26954 u=aar |  TASK [manager : Init swarm state=present] *******************************************************************************************************************************************************
2019-08-30 21:47:52,388 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:47:52,424 p=26954 u=aar |  TASK [manager : Install compose url=https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ docker_compose_os }}-{{ docker_compose_arch }}, dest=/usr/local/bin/docker-compose, mode=0755] ***
2019-08-30 21:48:10,053 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:48:10,089 p=26954 u=aar |  TASK [manager : Add user to docker group name={{ ansible_ssh_user }}, append=True, groups=docker] ***********************************************************************************************
2019-08-30 21:48:26,799 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:48:26,941 p=26954 u=aar |  TASK [manager : Add registry url to hosts path=/etc/hosts, line=127.0.0.1 {{ private_registry }}, state=present, backup=True] *******************************************************************
2019-08-30 21:48:40,111 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:48:40,142 p=26954 u=aar |  TASK [manager : Add local registry service name={{ private_registry_service }}, image={{ private_registry_image }}, publish=[{'published_port': '{{ private_registry_port_published }}', 'target_port': '{{ private_registry_port_target }}'}], mounts=[{'source': '{{ private_registry_volume }}', 'target': '/var/lib/registry', 'type': 'volume'}], reservations={'cpus': '{{ private_registry_resources.reservations.cpus }}', 'memory': '{{ private_registry_resources.reservations.memory }}'}, limits={'cpus': '{{ private_registry_resources.limits.cpus }}', 'memory': '{{ private_registry_resources.limits.memory }}'}] ***
2019-08-30 21:48:54,750 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:48:54,774 p=26954 u=aar |  TASK [manager : Copy management folder src=files/management, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] *************************
2019-08-30 21:55:54,215 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:55:54,317 p=26954 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 21:56:11,262 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:56:11,285 p=26954 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-master) for management path={{ remote_dst_path }}/management/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 21:56:28,964 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:56:28,985 p=26954 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 21:56:44,775 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:56:44,809 p=26954 u=aar |  TASK [manager : Set execution on healthcheck.sh (myslq-slave) for management path={{ remote_dst_path }}/management/mysql_slave/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 21:57:02,029 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:57:02,059 p=26954 u=aar |  TASK [manager : Create docker-compose file src=docker-compose.yml.j2, dest={{ remote_dst_path }}/management/docker-compose.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-30 21:57:33,951 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 21:57:33,971 p=26954 u=aar |  TASK [manager : Copy stack folder src=files/stack, dest={{ remote_dst_path }}, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***********************************
2019-08-30 22:03:01,687 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 22:03:01,751 p=26954 u=aar |  TASK [manager : Set execution on docker-entrypoint.sh for stack path={{ remote_dst_path }}/stack/mysql/docker-entrypoint.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] ***
2019-08-30 22:03:14,056 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 22:03:14,106 p=26954 u=aar |  TASK [manager : Set execution on healthcheck.sh for stack path={{ remote_dst_path }}/stack/mysql/healthcheck.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] **********
2019-08-30 22:03:27,054 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 22:03:27,081 p=26954 u=aar |  TASK [manager : Set execution on pdns_entry.sh for stack path={{ remote_dst_path }}/stack/pdns/pdns_entry.sh, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=755] *************
2019-08-30 22:03:38,552 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 22:03:38,600 p=26954 u=aar |  TASK [manager : Create docker-compose-template file src=docker-compose-template.yml.j2, dest={{ remote_dst_path }}/stack/docker-compose-template.yml, owner={{ ansible_ssh_user }}, group={{ ansible_ssh_user }}, mode=u=rw,g=r,o=r] ***
2019-08-30 22:04:09,196 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 22:04:09,221 p=26954 u=aar |  TASK [manager : Prepare api stack (create Network) name={{ replication_net }}, state=present, driver=overlay, scope=swarm, attachable=True] *****************************************************
2019-08-30 22:04:23,063 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 22:04:23,084 p=26954 u=aar |  TASK [manager : Prepare api stack (build) project_src={{ remote_dst_path }}/management, state=present, build=True, stopped=False] ***************************************************************
2019-08-30 22:05:06,955 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 22:05:06,976 p=26954 u=aar |  TASK [manager : Prepare api stack (down) project_src={{ remote_dst_path }}/management, state=absent, stopped=True, remove_volumes=True] *********************************************************
2019-08-30 22:05:38,298 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 22:05:38,325 p=26954 u=aar |  TASK [manager : Prepare api stack (push Mysql Master) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}, push=True, source=local] ***
2019-08-30 22:05:53,342 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 22:05:53,365 p=26954 u=aar |  TASK [manager : Prepare api stack (push Mysql Slave) name={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}, push=True, source=local] ***
2019-08-30 22:06:09,979 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 22:06:10,068 p=26954 u=aar |  TASK [manager : Prepare api stack (push SignerApi) name={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, repository={{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}, push=True, source=local] ***
2019-08-30 22:06:35,148 p=26954 u=aar |  ok: [mdnssec.ri.mu.afrinic.net]
2019-08-30 22:06:35,171 p=26954 u=aar |  TASK [manager : Deploy api stack state=present, name={{ management_api }}, compose=['{{ remote_dst_path }}/management/docker-compose.yml']] *****************************************************
2019-08-30 22:06:52,756 p=26954 u=aar |  changed: [mdnssec.ri.mu.afrinic.net]
2019-08-30 22:06:52,761 p=26954 u=aar |  PLAY RECAP **************************************************************************************************************************************************************************************
2019-08-30 22:06:52,762 p=26954 u=aar |  mdnssec.ri.mu.afrinic.net  : ok=33   changed=16   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
