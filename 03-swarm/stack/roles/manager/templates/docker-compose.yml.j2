version: "3.7"
services:
  mysql_db:
    image: {{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_master }}:{{ mysql_server_master_tag }}
    build:
      dockerfile: Dockerfile
      context: mysql
    hostname: stack_api_db
    container_name: stack_api_db
    expose:
      - 3306
    volumes:
      - stack_api_db_volume:/var/lib/mysql
    networks:
      - stack_api_db_net
      - {{ replication_net }}
    env_file: .env
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '{{ mysql_server_master_resources.limits.cpus }}'
          memory: {{ mysql_server_master_resources.limits.memory }}
        reservations:
          cpus: '{{ mysql_server_master_resources.reservations.cpus }}'
          memory: {{ mysql_server_master_resources.reservations.memory }}
      replicas: 1
      labels: [APP={{ management_api }}]
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  mysql_replication_db:
    image: {{ private_registry }}:{{ private_registry_port }}/{{ mysql_server_slave }}:{{ mysql_server_slave_tag }}
    build:
      dockerfile: Dockerfile
      context: mysql_slave
    hostname: stack_api_replication_db
    container_name: stack_api_replication_db
    expose:
      - 3306
    volumes:
      - stack_api_replication_db_volume:/var/lib/mysql
    networks:
      - {{ replication_net }}
    env_file: .env_slave
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
    depends_on:
      - mysql_db
    deploy:
      resources:
        limits:
          cpus: '{{ mysql_server_slave_resources.limits.cpus }}'
          memory: {{ mysql_server_slave_resources.limits.memory }}
        reservations:
          cpus: '{{ mysql_server_slave_resources.reservations.cpus }}'
          memory: {{ mysql_server_slave_resources.reservations.memory }}
      replicas: 1
      labels: [APP={{ management_api }}]
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
  api:
    image: {{ private_registry }}:{{ private_registry_port }}/{{ signer_api }}:{{ signer_api_tag }}
    build:
      dockerfile: Dockerfile
      context: flask
    hostname: stack_api
    container_name: stack_api
    ports:
      - "{{ signer_api_port }}:5000"
    networks:
      - stack_api_db_net
      - {{ replication_net }}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - {{ remote_dst_path }}:/data
    env_file: .env
    depends_on:
      - mysql_replication_db
    healthcheck:
      test: ["CMD", "curl" ,"127.0.0.1:5000"]
      timeout: 15s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '{{ signer_api_resources.limits.cpus }}'
          memory: {{ signer_api_resources.limits.memory }}
        reservations:
          cpus: '{{ signer_api_resources.reservations.cpus }}'
          memory: {{ signer_api_resources.reservations.memory }}
      replicas: 1
      labels: [APP={{ management_api }}]
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

networks:
  stack_api_db_net:
  {{ replication_net }}:
    external: true

volumes:
  stack_api_db_volume:
  stack_api_replication_db_volume:

